[
  {
    "db_id": "school_bus",
    "sql": "SELECT T2.School, T1.Name FROM school_bus AS T3 JOIN school AS T2 ON T3.School_ID = T2.School_ID JOIN driver AS T1 ON T3.Driver_ID = T1.Driver_ID;",
    "mongodb": "db.school_bus.aggregate([{\"$lookup\": {\"from\": \"school\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$lookup\": {\"from\": \"driver\", \"localField\": \"Driver_ID\", \"foreignField\": \"Driver_ID\", \"as\": \"driver\"}}, {\"$unwind\": \"$driver\"}, {\"$project\": {\"School\": 1, \"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT T2.School , T1.Name FROM school_bus AS T3 JOIN driver AS T1 ON T3.Driver_ID = T1.Driver_ID JOIN school AS T2 ON T3.School_ID = T2.School_ID",
    "mongodb": "db.school_bus.aggregate([{\"$lookup\": {\"from\": \"driver\", \"localField\": \"Driver_ID\", \"foreignField\": \"Driver_ID\", \"as\": \"driver\"}}, {\"$unwind\": \"$driver\"}, {\"$lookup\": {\"from\": \"school\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$project\": {\"School\": 1, \"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT T1.Name, T2.School FROM driver AS T1 JOIN school_bus AS T3 ON T1.Driver_ID = T3.Driver_ID JOIN school AS T2 ON T3.School_ID = T2.School_ID",
    "mongodb": "db.driver.aggregate([{\"$lookup\": {\"from\": \"school_bus\", \"localField\": \"Driver_ID\", \"foreignField\": \"Driver_ID\", \"as\": \"school_bus\"}}, {\"$unwind\": \"$school_bus\"}, {\"$lookup\": {\"from\": \"school\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$project\": {\"Name\": 1, \"School\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT T2.School, T1.Name FROM driver AS T1 JOIN school_bus AS T3 ON T1.Driver_ID = T3.Driver_ID JOIN school AS T2 ON T2.School_ID = T3.School_ID",
    "mongodb": "db.driver.aggregate([{\"$lookup\": {\"from\": \"school_bus\", \"localField\": \"Driver_ID\", \"foreignField\": \"Driver_ID\", \"as\": \"school_bus\"}}, {\"$unwind\": \"$school_bus\"}, {\"$lookup\": {\"from\": \"school\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$project\": {\"School\": 1, \"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT T2.Name AS Driver_Name, T1.School AS School_Name FROM school AS T1 JOIN school_bus AS T3 ON T1.School_ID = T3.School_ID JOIN driver AS T2 ON T3.Driver_ID = T2.Driver_ID;",
    "mongodb": "db.school.aggregate([{\"$lookup\": {\"from\": \"school_bus\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school_bus\"}}, {\"$unwind\": \"$school_bus\"}, {\"$lookup\": {\"from\": \"driver\", \"localField\": \"Driver_ID\", \"foreignField\": \"Driver_ID\", \"as\": \"driver\"}}, {\"$unwind\": \"$driver\"}, {\"$project\": {\"Name\": 1, \"School\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Name, Openning_year, Capacity FROM cinema",
    "mongodb": "db.cinema.find({}, {\"Name\": 1, \"Openning_year\": 1, \"Capacity\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Name, Openning_year, Capacity FROM cinema",
    "mongodb": "db.cinema.find({}, {\"Name\": 1, \"Openning_year\": 1, \"Capacity\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Openning_year, Name, Capacity FROM cinema",
    "mongodb": "db.cinema.find({}, {\"Openning_year\": 1, \"Name\": 1, \"Capacity\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Capacity, Openning_year, Name FROM cinema",
    "mongodb": "db.cinema.find({}, {\"Capacity\": 1, \"Openning_year\": 1, \"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Name, Capacity, Openning_year FROM cinema",
    "mongodb": "db.cinema.find({}, {\"Name\": 1, \"Capacity\": 1, \"Openning_year\": 1, \"_id\": 0})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student WHERE Fname LIKE '%a%'",
    "mongodb": "db.Student.find({\"Fname\": {\"$regularExpression\": {\"pattern\": \"^.*a.*$\", \"options\": \"\"}}}, {\"Fname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student WHERE Fname LIKE '%a%'",
    "mongodb": "db.Student.find({\"Fname\": {\"$regularExpression\": {\"pattern\": \"^.*a.*$\", \"options\": \"\"}}}, {\"Fname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student WHERE Fname LIKE '%a%';",
    "mongodb": "db.Student.find({\"Fname\": {\"$regularExpression\": {\"pattern\": \"^.*a.*$\", \"options\": \"\"}}}, {\"Fname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student WHERE Fname LIKE '%a%'",
    "mongodb": "db.Student.find({\"Fname\": {\"$regularExpression\": {\"pattern\": \"^.*a.*$\", \"options\": \"\"}}}, {\"Fname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student WHERE Fname LIKE '%a%'",
    "mongodb": "db.Student.find({\"Fname\": {\"$regularExpression\": {\"pattern\": \"^.*a.*$\", \"options\": \"\"}}}, {\"Fname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM job_history)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT * FROM employees WHERE EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM job_history)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE EMPLOYEE_ID NOT IN (SELECT DISTINCT EMPLOYEE_ID FROM job_history)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT * FROM employees WHERE EMPLOYEE_ID NOT IN (SELECT DISTINCT EMPLOYEE_ID FROM job_history)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM job_history)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT * FROM employees WHERE EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM job_history)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T1.DName FROM Department AS T1 JOIN Member_of AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY COUNT(*) ASC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Member_of | body={'db': 'college_3', 'sql': 'SELECT T1.DName FROM Department AS T1 JOIN Member_of AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY COUNT(*) ASC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: Member_of'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T1.DName FROM Department AS T1 JOIN Member_of AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY COUNT(*) ASC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Member_of | body={'db': 'college_3', 'sql': 'SELECT T1.DName FROM Department AS T1 JOIN Member_of AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY COUNT(*) ASC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: Member_of'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE DNO IN (SELECT DNO FROM Member_of GROUP BY DNO ORDER BY COUNT(FacID) ASC LIMIT 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Member_of | body={'db': 'college_3', 'sql': 'SELECT DName FROM Department WHERE DNO IN (SELECT DNO FROM Member_of GROUP BY DNO ORDER BY COUNT(FacID) ASC LIMIT 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: Member_of'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department GROUP BY DNO ORDER BY count(*) ASC LIMIT 1;",
    "mongodb": ""
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department GROUP BY DName ORDER BY COUNT(*) LIMIT 1;",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING count(*) >= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING count(*) >= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM aircraft JOIN flight ON aircraft.aid = flight.aid GROUP BY aircraft.aid HAVING COUNT(*) >= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT name FROM aircraft JOIN flight ON aircraft.aid = flight.aid GROUP BY aircraft.aid HAVING COUNT(*) >= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name FROM aircraft AS T2 JOIN flight AS T1 ON T2.aid = T1.aid GROUP BY T2.name HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT T2.name FROM aircraft AS T2 JOIN flight AS T1 ON T2.aid = T1.aid GROUP BY T2.name HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM aircraft WHERE aid IN (SELECT aid FROM flight GROUP BY aid HAVING count(*) >= 2)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT name FROM aircraft WHERE aid IN (SELECT aid FROM flight GROUP BY aid HAVING count(*) >= 2)', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT AVG(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT AVG(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma')\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT AVG(Price) FROM wine JOIN appellations ON wine.Appelation = appellations.Appelation WHERE appellations.County = 'Sonoma'",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"County\": \"Sonoma\"}}, {\"$lookup\": {\"from\": \"appellations\", \"localField\": \"wine.Appelation\", \"foreignField\": \"Appelation\", \"as\": \"appellations\"}}, {\"$unwind\": \"$appellations\"}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Price\"}}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT AVG(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT AVG(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma')\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT AVG(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT AVG(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma')\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT avg(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT avg(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma')\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine ORDER BY Name",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT DISTINCT Name FROM wine ORDER BY Name', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine ORDER BY Name ASC",
    "mongodb": "db.wine.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine ORDER BY Name ASC",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT DISTINCT Name FROM wine ORDER BY Name ASC', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine ORDER BY Name ASC",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT DISTINCT Name FROM wine ORDER BY Name ASC', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine ORDER BY Name",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT DISTINCT Name FROM wine ORDER BY Name', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Rank, COUNT(*) FROM captain GROUP BY Rank",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Rank, COUNT(*) FROM captain GROUP BY Rank', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT count(*), Rank FROM captain GROUP BY Rank",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT count(*), Rank FROM captain GROUP BY Rank', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Rank, count(*) FROM captain GROUP BY Rank",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Rank, count(*) FROM captain GROUP BY Rank', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Rank, COUNT(*) FROM captain GROUP BY Rank",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Rank, COUNT(*) FROM captain GROUP BY Rank', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Rank, COUNT(*) FROM captain GROUP BY Rank",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Rank, COUNT(*) FROM captain GROUP BY Rank', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name, COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
    "mongodb": "db.Courses.aggregate([{\"$lookup\": {\"from\": \"Student_Course_Enrolment\", \"localField\": \"course_id\", \"foreignField\": \"course_id\", \"as\": \"Student_Course_Enrolment\"}}, {\"$unwind\": \"$Student_Course_Enrolment\"}, {\"$group\": {\"_id\": {\"course_name\": \"$course_name\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"course_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name, COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name;",
    "mongodb": "db.Courses.aggregate([{\"$lookup\": {\"from\": \"Student_Course_Enrolment\", \"localField\": \"course_id\", \"foreignField\": \"course_id\", \"as\": \"Student_Course_Enrolment\"}}, {\"$unwind\": \"$Student_Course_Enrolment\"}, {\"$group\": {\"_id\": {\"course_name\": \"$course_name\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"course_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name, COUNT(T2.student_id) AS total_students_enrolled FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name;",
    "mongodb": "db.Courses.aggregate([{\"$lookup\": {\"from\": \"Student_Course_Enrolment\", \"localField\": \"course_id\", \"foreignField\": \"course_id\", \"as\": \"Student_Course_Enrolment\"}}, {\"$unwind\": \"$Student_Course_Enrolment\"}, {\"$group\": {\"_id\": {\"course_name\": \"$course_name\"}, \"total_students_enrolled\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$student_id\", null]}, 1, 0]}}}}, {\"$project\": {\"course_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name, COUNT(T2.student_id) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
    "mongodb": "db.Courses.aggregate([{\"$lookup\": {\"from\": \"Student_Course_Enrolment\", \"localField\": \"course_id\", \"foreignField\": \"course_id\", \"as\": \"Student_Course_Enrolment\"}}, {\"$unwind\": \"$Student_Course_Enrolment\"}, {\"$group\": {\"_id\": {\"course_name\": \"$course_name\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$student_id\", null]}, 1, 0]}}}}, {\"$project\": {\"course_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT Courses.course_name, COUNT(Student_Course_Enrolment.student_id) FROM Courses JOIN Student_Course_Enrolment ON Courses.course_id = Student_Course_Enrolment.course_id GROUP BY Courses.course_name",
    "mongodb": "db.Courses.aggregate([{\"$lookup\": {\"from\": \"Student_Course_Enrolment\", \"localField\": \"course_id\", \"foreignField\": \"course_id\", \"as\": \"Student_Course_Enrolment\"}}, {\"$unwind\": \"$Student_Course_Enrolment\"}, {\"$group\": {\"_id\": {\"course_name\": \"$course_name\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$student_id\", null]}, 1, 0]}}}}, {\"$project\": {\"course_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT LName FROM Student WHERE Major = 50;",
    "mongodb": "db.Student.find({\"Major\": 50}, {\"LName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT LName FROM Student WHERE Major = 50;",
    "mongodb": "db.Student.find({\"Major\": 50}, {\"LName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT LName FROM Student WHERE Major = 50",
    "mongodb": "db.Student.find({\"Major\": 50}, {\"LName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT LName FROM Student WHERE Major = 50;",
    "mongodb": "db.Student.find({\"Major\": 50}, {\"LName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT LName FROM Student WHERE Major = 50",
    "mongodb": "db.Student.find({\"Major\": 50}, {\"LName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "device",
    "sql": "SELECT count(*) FROM device",
    "mongodb": "db.device.find({}, {}).count()"
  },
  {
    "db_id": "device",
    "sql": "SELECT count(*) FROM device",
    "mongodb": "db.device.find({}, {}).count()"
  },
  {
    "db_id": "device",
    "sql": "SELECT count(*) FROM device",
    "mongodb": "db.device.find({}, {}).count()"
  },
  {
    "db_id": "device",
    "sql": "SELECT COUNT(*) FROM device;",
    "mongodb": "db.device.find({}, {}).count()"
  },
  {
    "db_id": "device",
    "sql": "SELECT count(*) FROM device",
    "mongodb": "db.device.find({}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.subject_id, T2.subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id, T2.subject_name",
    "mongodb": "db.Courses.aggregate([{\"$lookup\": {\"from\": \"Subjects\", \"localField\": \"subject_id\", \"foreignField\": \"subject_id\", \"as\": \"Subjects\"}}, {\"$unwind\": \"$Subjects\"}, {\"$group\": {\"_id\": {\"subject_id\": \"$subject_id\", \"subject_name\": \"$subject_name\"}, \"Expr2\": {\"$sum\": 1}}}, {\"$project\": {\"subject_id\": 1, \"subject_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T2.subject_id, T2.subject_name, COUNT(*) AS num_available_courses FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T2.subject_id, T2.subject_name;",
    "mongodb": "db.Courses.aggregate([{\"$lookup\": {\"from\": \"Subjects\", \"localField\": \"subject_id\", \"foreignField\": \"subject_id\", \"as\": \"Subjects\"}}, {\"$unwind\": \"$Subjects\"}, {\"$group\": {\"_id\": {\"subject_id\": \"$subject_id\", \"subject_name\": \"$subject_name\"}, \"num_available_courses\": {\"$sum\": 1}}}, {\"$project\": {\"subject_id\": 1, \"subject_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT Subjects.subject_id, Subjects.subject_name, COUNT(Courses.course_id) AS total_courses FROM Subjects JOIN Courses ON Subjects.subject_id = Courses.subject_id GROUP BY Subjects.subject_id, Subjects.subject_name",
    "mongodb": "db.Subjects.aggregate([{\"$lookup\": {\"from\": \"Courses\", \"localField\": \"subject_id\", \"foreignField\": \"Courses.subject_id\", \"as\": \"Courses\"}}, {\"$unwind\": \"$Courses\"}, {\"$group\": {\"_id\": {\"subject_id\": \"$subject_id\", \"subject_name\": \"$subject_name\"}, \"total_courses\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Courses.course_id\", null]}, 1, 0]}}}}, {\"$project\": {\"subject_id\": 1, \"subject_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT Subjects.subject_id, Subjects.subject_name, COUNT(Courses.course_id) FROM Subjects LEFT JOIN Courses ON Subjects.subject_id = Courses.subject_id GROUP BY Subjects.subject_id, Subjects.subject_name",
    "mongodb": "db.Subjects.aggregate([{\"$lookup\": {\"from\": \"Courses\", \"localField\": \"subject_id\", \"foreignField\": \"Courses.subject_id\", \"as\": \"Courses\"}}, {\"$unwind\": \"$Courses\"}, {\"$group\": {\"_id\": {\"subject_id\": \"$subject_id\", \"subject_name\": \"$subject_name\"}, \"Expr2\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Courses.course_id\", null]}, 1, 0]}}}}, {\"$project\": {\"subject_id\": 1, \"subject_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT subject_id, subject_name, count(*) FROM Courses GROUP BY subject_id, subject_name",
    "mongodb": "db.Courses.aggregate([{\"$group\": {\"_id\": {\"subject_id\": \"$subject_id\", \"subject_name\": \"$subject_name\"}, \"Expr2\": {\"$sum\": 1}}}, {\"$project\": {\"subject_id\": 1, \"subject_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(DISTINCT Affiliation) FROM university",
    "mongodb": ""
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(DISTINCT Affiliation) FROM university",
    "mongodb": ""
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(DISTINCT Affiliation) FROM university",
    "mongodb": ""
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(DISTINCT Affiliation) FROM university",
    "mongodb": ""
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(DISTINCT Affiliation) FROM university",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name FROM captain ORDER BY age DESC",
    "mongodb": "db.captain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"age\": -1} )"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name FROM captain ORDER BY age DESC",
    "mongodb": "db.captain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"age\": -1} )"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name FROM captain ORDER BY age",
    "mongodb": "db.captain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"age\": 1} )"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name FROM captain ORDER BY age DESC",
    "mongodb": "db.captain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"age\": -1} )"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name FROM captain ORDER BY age DESC",
    "mongodb": "db.captain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"age\": -1} )"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Name, Openning_year FROM cinema ORDER BY Openning_year DESC;",
    "mongodb": "db.cinema.find({}, {\"Name\": 1, \"Openning_year\": 1, \"_id\": 0}).sort( {\"Openning_year\": -1} )"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Name, Openning_year FROM cinema ORDER BY Openning_year DESC",
    "mongodb": "db.cinema.find({}, {\"Name\": 1, \"Openning_year\": 1, \"_id\": 0}).sort( {\"Openning_year\": -1} )"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Name, Openning_year FROM cinema ORDER BY Openning_year DESC;",
    "mongodb": "db.cinema.find({}, {\"Name\": 1, \"Openning_year\": 1, \"_id\": 0}).sort( {\"Openning_year\": -1} )"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Name, Openning_year FROM cinema ORDER BY Openning_year DESC",
    "mongodb": "db.cinema.find({}, {\"Name\": 1, \"Openning_year\": 1, \"_id\": 0}).sort( {\"Openning_year\": -1} )"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Name, Openning_year FROM cinema ORDER BY Openning_year DESC",
    "mongodb": "db.cinema.find({}, {\"Name\": 1, \"Openning_year\": 1, \"_id\": 0}).sort( {\"Openning_year\": -1} )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School, Nickname FROM university ORDER BY Founded;",
    "mongodb": "db.university.find({}, {\"School\": 1, \"Nickname\": 1, \"_id\": 0}).sort( {\"Founded\": 1} )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School, Nickname FROM university ORDER BY Founded;",
    "mongodb": "db.university.find({}, {\"School\": 1, \"Nickname\": 1, \"_id\": 0}).sort( {\"Founded\": 1} )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School, Nickname FROM university ORDER BY Founded",
    "mongodb": "db.university.find({}, {\"School\": 1, \"Nickname\": 1, \"_id\": 0}).sort( {\"Founded\": 1} )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School, Nickname FROM university ORDER BY Founded",
    "mongodb": "db.university.find({}, {\"School\": 1, \"Nickname\": 1, \"_id\": 0}).sort( {\"Founded\": 1} )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School, Nickname FROM university ORDER BY Founded;",
    "mongodb": "db.university.find({}, {\"School\": 1, \"Nickname\": 1, \"_id\": 0}).sort( {\"Founded\": 1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT e.first_name, e.last_name, e.hire_date, e.salary, e.department_id FROM employees e WHERE e.first_name NOT LIKE '%M%'",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"first_name\": 1, \"last_name\": 1, \"hire_date\": 1, \"salary\": 1, \"department_id\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%'",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"first_name\": 1, \"last_name\": 1, \"hire_date\": 1, \"salary\": 1, \"department_id\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%'",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"first_name\": 1, \"last_name\": 1, \"hire_date\": 1, \"salary\": 1, \"department_id\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%'",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"first_name\": 1, \"last_name\": 1, \"hire_date\": 1, \"salary\": 1, \"department_id\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%'",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"first_name\": 1, \"last_name\": 1, \"hire_date\": 1, \"salary\": 1, \"department_id\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = \"advanced database\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = \"advanced database\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = \"advanced database\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = \"advanced database\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = \"advanced database\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = \"advanced database\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name FROM Course_Authors_and_Tutors WHERE author_id = (SELECT author_id FROM Courses WHERE course_name = \"advanced database\")",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT login_name FROM Course_Authors_and_Tutors WHERE author_id = (SELECT author_id FROM Courses WHERE course_name = \"advanced database\")', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT t1.personal_name, t1.login_name FROM Course_Authors_and_Tutors AS t1 JOIN Courses AS t2 ON t1.author_id = t2.author_id JOIN Subjects AS t3 ON t2.subject_id = t3.subject_id WHERE t3.subject_name = \"advanced database\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT t1.personal_name, t1.login_name FROM Course_Authors_and_Tutors AS t1 JOIN Courses AS t2 ON t1.author_id = t2.author_id JOIN Subjects AS t3 ON t2.subject_id = t3.subject_id WHERE t3.subject_name = \"advanced database\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, distance FROM aircraft WHERE aid = 12;",
    "mongodb": "db.aircraft.find({\"aid\": 12}, {\"name\": 1, \"distance\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, distance FROM aircraft WHERE aid = 12;",
    "mongodb": "db.aircraft.find({\"aid\": 12}, {\"name\": 1, \"distance\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, distance FROM aircraft WHERE aid = 12",
    "mongodb": "db.aircraft.find({\"aid\": 12}, {\"name\": 1, \"distance\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, distance FROM aircraft WHERE aid = 12;",
    "mongodb": "db.aircraft.find({\"aid\": 12}, {\"name\": 1, \"distance\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, distance FROM aircraft WHERE aid = 12;",
    "mongodb": "db.aircraft.find({\"aid\": 12}, {\"name\": 1, \"distance\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, salary FROM employees WHERE commission_pct IS NULL;",
    "mongodb": "db.employees.find({\"commission_pct\": null}, {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT CONCAT(first_name, ' ', last_name) AS full_name, salary FROM employees WHERE commission_pct IS NULL;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT CONCAT(first_name, ' ', last_name) AS full_name, salary FROM employees WHERE commission_pct IS NULL;\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT FIRST_NAME, LAST_NAME, SALARY FROM employees WHERE COMMISSION_PCT IS NULL",
    "mongodb": "db.employees.find({\"COMMISSION_PCT\": null}, {\"FIRST_NAME\": 1, \"LAST_NAME\": 1, \"SALARY\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT FIRST_NAME, LAST_NAME, SALARY FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL;",
    "mongodb": "db.EMPLOYEES.find({\"COMMISSION_PCT\": null}, {\"FIRST_NAME\": 1, \"LAST_NAME\": 1, \"SALARY\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT salary, CONCAT(first_name, ' ', last_name) AS full_name FROM employees WHERE commission_pct IS NULL;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT salary, CONCAT(first_name, ' ', last_name) AS full_name FROM employees WHERE commission_pct IS NULL;\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC",
    "mongodb": "db.employees.find({\"$or\": [{\"first_name\": {\"$regularExpression\": {\"pattern\": \"^.*D.*$\", \"options\": \"\"}}}, {\"first_name\": {\"$regularExpression\": {\"pattern\": \"^.*S.*$\", \"options\": \"\"}}}]}, {}).sort( {\"salary\": -1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC",
    "mongodb": "db.employees.find({\"$or\": [{\"first_name\": {\"$regularExpression\": {\"pattern\": \"^.*D.*$\", \"options\": \"\"}}}, {\"first_name\": {\"$regularExpression\": {\"pattern\": \"^.*S.*$\", \"options\": \"\"}}}]}, {}).sort( {\"salary\": -1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC",
    "mongodb": "db.employees.find({\"$or\": [{\"first_name\": {\"$regularExpression\": {\"pattern\": \"^.*D.*$\", \"options\": \"\"}}}, {\"first_name\": {\"$regularExpression\": {\"pattern\": \"^.*S.*$\", \"options\": \"\"}}}]}, {}).sort( {\"salary\": -1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%' ORDER BY SALARY DESC;",
    "mongodb": "db.employees.find({\"$or\": [{\"FIRST_NAME\": {\"$regularExpression\": {\"pattern\": \"^.*D.*$\", \"options\": \"\"}}}, {\"FIRST_NAME\": {\"$regularExpression\": {\"pattern\": \"^.*S.*$\", \"options\": \"\"}}}]}, {}).sort( {\"SALARY\": -1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%' ORDER BY SALARY DESC;",
    "mongodb": "db.employees.find({\"$or\": [{\"FIRST_NAME\": {\"$regularExpression\": {\"pattern\": \"^.*D.*$\", \"options\": \"\"}}}, {\"FIRST_NAME\": {\"$regularExpression\": {\"pattern\": \"^.*S.*$\", \"options\": \"\"}}}]}, {}).sort( {\"SALARY\": -1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
    "mongodb": "db.school.find({}, {\"School_Colors\": 1, \"_id\": 0}).sort( {\"Enrollment\": -1} ).limit( 1 )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
    "mongodb": "db.school.find({}, {\"School_Colors\": 1, \"_id\": 0}).sort( {\"Enrollment\": -1} ).limit( 1 )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T1.School_Colors FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID ORDER BY T1.Enrollment DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_details | body={'db': 'school_player', 'sql': 'SELECT T1.School_Colors FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID ORDER BY T1.Enrollment DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: school_details'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T1.School_Colors FROM school AS T1 WHERE T1.Enrollment = (SELECT MAX(Enrollment) FROM school)",
    "mongodb": ""
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T1.School_Colors FROM school AS T1 JOIN ( SELECT School_ID, MAX(Enrollment) AS max_enrollment FROM school ) AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Enrollment = T2.max_enrollment",
    "mongodb": ""
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT count(*) FROM county_public_safety",
    "mongodb": "db.county_public_safety.find({}, {}).count()"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT count(*) FROM county_public_safety",
    "mongodb": "db.county_public_safety.find({}, {}).count()"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT count(*) FROM county_public_safety",
    "mongodb": "db.county_public_safety.find({}, {}).count()"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT count(*) FROM county_public_safety;",
    "mongodb": "db.county_public_safety.find({}, {}).count()"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT COUNT(*) FROM county_public_safety;",
    "mongodb": "db.county_public_safety.find({}, {}).count()"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T2.department_name , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$group\": {\"_id\": {\"DEPARTMENT_NAME\": \"$DEPARTMENT_NAME\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T2.DEPARTMENT_NAME, COUNT(*) FROM EMPLOYEES AS T1 JOIN DEPARTMENTS AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T2.DEPARTMENT_NAME;",
    "mongodb": "db.EMPLOYEES.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$group\": {\"_id\": {\"DEPARTMENT_NAME\": \"$DEPARTMENT_NAME\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.DEPARTMENT_NAME, COUNT(T2.EMPLOYEE_ID) FROM departments AS T1 JOIN employees AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T1.DEPARTMENT_NAME",
    "mongodb": "db.departments.aggregate([{\"$lookup\": {\"from\": \"employees\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"employees\"}}, {\"$unwind\": \"$employees\"}, {\"$group\": {\"_id\": {\"DEPARTMENT_NAME\": \"$DEPARTMENT_NAME\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$EMPLOYEE_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T2.DEPARTMENT_NAME, COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T2.DEPARTMENT_NAME;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$group\": {\"_id\": {\"DEPARTMENT_NAME\": \"$DEPARTMENT_NAME\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.DEPARTMENT_NAME, COUNT(T2.EMPLOYEE_ID) FROM DEPARTMENTS AS T1 JOIN EMPLOYEES AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T1.DEPARTMENT_NAME;",
    "mongodb": "db.departments.aggregate([{\"$lookup\": {\"from\": \"EMPLOYEES\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"EMPLOYEES\"}}, {\"$unwind\": \"$EMPLOYEES\"}, {\"$group\": {\"_id\": {\"DEPARTMENT_NAME\": \"$DEPARTMENT_NAME\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$EMPLOYEE_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination FROM school WHERE School_ID = (SELECT School_ID FROM player GROUP BY School_ID ORDER BY COUNT(*) DESC LIMIT 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT Denomination FROM school WHERE School_ID = (SELECT School_ID FROM player GROUP BY School_ID ORDER BY COUNT(*) DESC LIMIT 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination FROM school WHERE School_ID = (SELECT School_ID FROM player GROUP BY School_ID ORDER BY COUNT(*) DESC LIMIT 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT Denomination FROM school WHERE School_ID = (SELECT School_ID FROM player GROUP BY School_ID ORDER BY COUNT(*) DESC LIMIT 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T1.Denomination FROM school AS T1 JOIN player AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.Denomination ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT T1.Denomination FROM school AS T1 JOIN player AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.Denomination ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents_with_Expenses;",
    "mongodb": "db.Documents_with_Expenses.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents_with_Expenses",
    "mongodb": "db.Documents_with_Expenses.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents_with_expenses",
    "mongodb": "db.Documents_with_expenses.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents_with_Expenses",
    "mongodb": "db.Documents_with_Expenses.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents_with_Expenses",
    "mongodb": "db.Documents_with_Expenses.find({}, {}).count()"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Location FROM gas_station ORDER BY Open_Year;",
    "mongodb": "db.gas_station.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Location FROM gas_station ORDER BY Open_Year;",
    "mongodb": "db.gas_station.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Location FROM gas_station ORDER BY Open_Year",
    "mongodb": "db.gas_station.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Location FROM gas_station ORDER BY Open_Year",
    "mongodb": "db.gas_station.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Location FROM gas_station ORDER BY Open_Year",
    "mongodb": "db.gas_station.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"",
    "mongodb": "db.musical.distinct(\"Nominee\", {\"$lookup\": {\"from\": \"\", \"localField\": \"Award\", \"foreignField\": \"Tony Award\"}})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"",
    "mongodb": "db.musical.distinct(\"Nominee\", {\"$lookup\": {\"from\": \"\", \"localField\": \"Award\", \"foreignField\": \"Tony Award\"}})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"",
    "mongodb": "db.musical.distinct(\"Nominee\", {\"$lookup\": {\"from\": \"\", \"localField\": \"Award\", \"foreignField\": \"Tony Award\"}})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"",
    "mongodb": "db.musical.distinct(\"Nominee\", {\"$lookup\": {\"from\": \"\", \"localField\": \"Award\", \"foreignField\": \"Tony Award\"}})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT DISTINCT Nominee FROM musical WHERE Award <> \"Tony Award\"",
    "mongodb": "db.musical.distinct(\"Nominee\", {\"$lookup\": {\"from\": \"\", \"localField\": \"Award\", \"foreignField\": \"Tony Award\"}})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT enrollment, primary_conference FROM university ORDER BY founded LIMIT 1;",
    "mongodb": "db.university.find({}, {\"Enrollment\": 1, \"Primary_conference\": 1, \"_id\": 0}).sort( {\"Founded\": 1} ).limit( 1 )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT enrollment, primary_conference FROM university ORDER BY founded LIMIT 1",
    "mongodb": "db.university.find({}, {\"Enrollment\": 1, \"Primary_conference\": 1, \"_id\": 0}).sort( {\"Founded\": 1} ).limit( 1 )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Enrollment, Primary_conference FROM university ORDER BY Founded ASC LIMIT 1",
    "mongodb": "db.university.find({}, {\"Enrollment\": 1, \"Primary_conference\": 1, \"_id\": 0}).sort( {\"Founded\": 1} ).limit( 1 )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT enrollment, primary_conference FROM university ORDER BY founded LIMIT 1",
    "mongodb": "db.university.find({}, {\"Enrollment\": 1, \"Primary_conference\": 1, \"_id\": 0}).sort( {\"Founded\": 1} ).limit( 1 )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT enrollment, primary_conference FROM university WHERE Founded = (SELECT MIN(Founded) FROM university)",
    "mongodb": ""
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Project_ID, T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID GROUP BY T1.Project_ID HAVING COUNT(*) >= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT T1.Project_ID, T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID GROUP BY T1.Project_ID HAVING COUNT(*) >= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Project_ID, T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID GROUP BY T1.Project_ID HAVING COUNT(*) > 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT T1.Project_ID, T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID GROUP BY T1.Project_ID HAVING COUNT(*) > 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Projects.Project_ID, Projects.Project_Details FROM Projects JOIN Documents ON Projects.Project_ID = Documents.Project_ID GROUP BY Projects.Project_ID HAVING COUNT(Documents.Document_ID) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Projects.Project_ID, Projects.Project_Details FROM Projects JOIN Documents ON Projects.Project_ID = Documents.Project_ID GROUP BY Projects.Project_ID HAVING COUNT(Documents.Document_ID) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Project_ID, T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID GROUP BY T1.Project_ID HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT T1.Project_ID, T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID GROUP BY T1.Project_ID HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, Project_Details FROM Projects WHERE Project_ID IN (SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Project_ID, Project_Details FROM Projects WHERE Project_ID IN (SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno, distance FROM flight ORDER BY price DESC LIMIT 1",
    "mongodb": "db.flight.find({}, {\"flno\": 1, \"distance\": 1, \"_id\": 0}).sort( {\"price\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno, distance FROM flight ORDER BY price DESC LIMIT 1",
    "mongodb": "db.flight.find({}, {\"flno\": 1, \"distance\": 1, \"_id\": 0}).sort( {\"price\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno, distance FROM flight ORDER BY price DESC LIMIT 1;",
    "mongodb": "db.flight.find({}, {\"flno\": 1, \"distance\": 1, \"_id\": 0}).sort( {\"price\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno, distance FROM flight ORDER BY price DESC LIMIT 1",
    "mongodb": "db.flight.find({}, {\"flno\": 1, \"distance\": 1, \"_id\": 0}).sort( {\"price\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno, distance FROM flight ORDER BY price DESC LIMIT 1",
    "mongodb": "db.flight.find({}, {\"flno\": 1, \"distance\": 1, \"_id\": 0}).sort( {\"price\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country, elevation FROM airports WHERE city = 'New York'",
    "mongodb": "db.airports.find({\"city\": \"New York\"}, {\"name\": 1, \"city\": 1, \"country\": 1, \"elevation\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country, elevation FROM airports WHERE city = 'New York'",
    "mongodb": "db.airports.find({\"city\": \"New York\"}, {\"name\": 1, \"city\": 1, \"country\": 1, \"elevation\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country, elevation FROM airports WHERE city = 'New York'",
    "mongodb": "db.airports.find({\"city\": \"New York\"}, {\"name\": 1, \"city\": 1, \"country\": 1, \"elevation\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country, elevation FROM airports WHERE city = \"New York\";",
    "mongodb": "db.airports.find({\"$lookup\": {\"from\": \"\", \"localField\": \"city\", \"foreignField\": \"New York\"}}, {\"name\": 1, \"city\": 1, \"country\": 1, \"elevation\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country, elevation FROM airports WHERE city = \"New York\"",
    "mongodb": "db.airports.find({\"$lookup\": {\"from\": \"\", \"localField\": \"city\", \"foreignField\": \"New York\"}}, {\"name\": 1, \"city\": 1, \"country\": 1, \"elevation\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, distance FROM aircraft",
    "mongodb": "db.aircraft.find({}, {\"name\": 1, \"distance\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, distance FROM aircraft;",
    "mongodb": "db.aircraft.find({}, {\"name\": 1, \"distance\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, distance FROM aircraft",
    "mongodb": "db.aircraft.find({}, {\"name\": 1, \"distance\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, distance FROM aircraft",
    "mongodb": "db.aircraft.find({}, {\"name\": 1, \"distance\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, distance FROM aircraft",
    "mongodb": "db.aircraft.find({}, {\"name\": 1, \"distance\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"hire_date\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"hire_date\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"hire_date\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"hire_date\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"hire_date\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT count(*) FROM editor",
    "mongodb": "db.editor.find({}, {}).count()"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT count(*) FROM editor",
    "mongodb": "db.editor.find({}, {}).count()"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT count(*) FROM editor",
    "mongodb": "db.editor.find({}, {}).count()"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT count(*) FROM editor",
    "mongodb": "db.editor.find({}, {}).count()"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT count(*) FROM editor",
    "mongodb": "db.editor.find({}, {}).count()"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.first_name, T1.last_name, T1.employee_id, T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$lookup\": {\"from\": \"countries\", \"localField\": \"country_id\", \"foreignField\": \"country_id\", \"as\": \"countries\"}}, {\"$unwind\": \"$countries\"}, {\"$project\": {\"first_name\": 1, \"last_name\": 1, \"employee_id\": 1, \"country_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.first_name , T1.last_name , T1.employee_id , T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$lookup\": {\"from\": \"countries\", \"localField\": \"country_id\", \"foreignField\": \"country_id\", \"as\": \"countries\"}}, {\"$unwind\": \"$countries\"}, {\"$project\": {\"first_name\": 1, \"last_name\": 1, \"employee_id\": 1, \"country_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT e.FIRST_NAME, e.LAST_NAME, e.EMPLOYEE_ID, c.COUNTRY_NAME FROM employees e JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID JOIN locations l ON d.LOCATION_ID = l.LOCATION_ID JOIN countries c ON l.COUNTRY_ID = c.COUNTRY_ID;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$lookup\": {\"from\": \"countries\", \"localField\": \"COUNTRY_ID\", \"foreignField\": \"COUNTRY_ID\", \"as\": \"countries\"}}, {\"$unwind\": \"$countries\"}, {\"$project\": {\"FIRST_NAME\": 1, \"LAST_NAME\": 1, \"EMPLOYEE_ID\": 1, \"COUNTRY_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.first_name, T1.last_name, T1.employee_id, T3.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$lookup\": {\"from\": \"countries\", \"localField\": \"country_id\", \"foreignField\": \"country_id\", \"as\": \"countries\"}}, {\"$unwind\": \"$countries\"}, {\"$project\": {\"first_name\": 1, \"last_name\": 1, \"employee_id\": 1, \"country_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employees.first_name, employees.last_name, employees.employee_id, countries.country_name FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id JOIN countries ON locations.country_id = countries.country_id;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"employees.DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"location_id\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$lookup\": {\"from\": \"countries\", \"localField\": \"country_id\", \"foreignField\": \"country_id\", \"as\": \"countries\"}}, {\"$unwind\": \"$countries\"}, {\"$project\": {\"employees.FIRST_NAME\": 1, \"employees.LAST_NAME\": 1, \"employees.EMPLOYEE_ID\": 1, \"country_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Winery FROM wine WHERE Price BETWEEN 50 AND 100",
    "mongodb": "db.wine.distinct(\"Winery\", {\"$and\": [{\"Price\": {\"$gte\": 50}}, {\"Price\": {\"$lte\": 100}}]})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Winery FROM wine WHERE Price BETWEEN 50 AND 100",
    "mongodb": "db.wine.distinct(\"Winery\", {\"$and\": [{\"Price\": {\"$gte\": 50}}, {\"Price\": {\"$lte\": 100}}]})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Winery FROM wine WHERE Price BETWEEN 50 AND 100",
    "mongodb": "db.wine.distinct(\"Winery\", {\"$and\": [{\"Price\": {\"$gte\": 50}}, {\"Price\": {\"$lte\": 100}}]})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Winery FROM wine WHERE Price BETWEEN 50 AND 100",
    "mongodb": "db.wine.distinct(\"Winery\", {\"$and\": [{\"Price\": {\"$gte\": 50}}, {\"Price\": {\"$lte\": 100}}]})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Winery FROM wine WHERE Price BETWEEN 50 AND 100",
    "mongodb": "db.wine.distinct(\"Winery\", {\"$and\": [{\"Price\": {\"$gte\": 50}}, {\"Price\": {\"$lte\": 100}}]})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE salary > (SELECT MIN(salary) FROM employees) AND salary < 2500",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT * FROM employees WHERE salary > (SELECT MIN(salary) FROM employees) AND salary < 2500', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE SALARY > 0 AND SALARY <= 2500",
    "mongodb": "db.employees.find({\"SALARY\": {\"$lte\": 2500, \"$gt\": 0}}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE salary > (SELECT MIN(min_salary) FROM jobs) AND salary <= 2500",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT * FROM employees WHERE salary > (SELECT MIN(min_salary) FROM jobs) AND salary <= 2500', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, department_id FROM employees WHERE last_name = 'McEwen';",
    "mongodb": "db.employees.find({\"last_name\": \"McEwen\"}, {\"first_name\": 1, \"department_id\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, department_id FROM employees WHERE last_name = 'McEwen'",
    "mongodb": "db.employees.find({\"last_name\": \"McEwen\"}, {\"first_name\": 1, \"department_id\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT FIRST_NAME, DEPARTMENT_ID FROM employees WHERE LAST_NAME = \"McEwen\"",
    "mongodb": "db.employees.find({\"$lookup\": {\"from\": \"\", \"localField\": \"LAST_NAME\", \"foreignField\": \"McEwen\"}}, {\"FIRST_NAME\": 1, \"DEPARTMENT_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT FIRST_NAME, DEPARTMENT_ID FROM EMPLOYEES WHERE LAST_NAME = 'McEwen'",
    "mongodb": "db.EMPLOYEES.find({\"LAST_NAME\": \"McEwen\"}, {\"FIRST_NAME\": 1, \"DEPARTMENT_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT FIRST_NAME, DEPARTMENT_ID FROM employees WHERE LAST_NAME = 'McEwen'",
    "mongodb": "db.employees.find({\"LAST_NAME\": \"McEwen\"}, {\"FIRST_NAME\": 1, \"DEPARTMENT_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(DISTINCT city) FROM airports GROUP BY city HAVING count(*) > 3;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*) > 3)",
    "mongodb": "ERROR: HTTP 500 | body={'mongo': \"ERROR: Invalid control character '\\\\n' at: line 1 column 238 (char 237)\"}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(DISTINCT city) FROM airports GROUP BY city HAVING count(*) > 3;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(city) FROM airports GROUP BY city HAVING count(*) > 3",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(DISTINCT city) FROM airports GROUP BY city HAVING count(*) > 3",
    "mongodb": ""
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine WHERE Year < 2000 OR Year > 2010",
    "mongodb": "db.wine.distinct(\"Name\", {\"$or\": [{\"Year\": {\"$lt\": 2000}}, {\"Year\": {\"$gt\": 2010}}]})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine WHERE Year < 2000 OR Year > 2010",
    "mongodb": "db.wine.distinct(\"Name\", {\"$or\": [{\"Year\": {\"$lt\": 2000}}, {\"Year\": {\"$gt\": 2010}}]})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine WHERE Year < 2000 OR Year > 2010",
    "mongodb": "db.wine.distinct(\"Name\", {\"$or\": [{\"Year\": {\"$lt\": 2000}}, {\"Year\": {\"$gt\": 2010}}]})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine WHERE Year < 2000 OR Year > 2010",
    "mongodb": "db.wine.distinct(\"Name\", {\"$or\": [{\"Year\": {\"$lt\": 2000}}, {\"Year\": {\"$gt\": 2010}}]})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine WHERE Year < 2000 OR Year > 2010",
    "mongodb": "db.wine.distinct(\"Name\", {\"$or\": [{\"Year\": {\"$lt\": 2000}}, {\"Year\": {\"$gt\": 2010}}]})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno, origin, destination FROM flight ORDER BY origin;",
    "mongodb": "db.flight.find({}, {\"flno\": 1, \"origin\": 1, \"destination\": 1, \"_id\": 0}).sort( {\"origin\": 1} )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno, origin, destination FROM flight ORDER BY origin;",
    "mongodb": "db.flight.find({}, {\"flno\": 1, \"origin\": 1, \"destination\": 1, \"_id\": 0}).sort( {\"origin\": 1} )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno, origin, destination FROM flight ORDER BY origin;",
    "mongodb": "db.flight.find({}, {\"flno\": 1, \"origin\": 1, \"destination\": 1, \"_id\": 0}).sort( {\"origin\": 1} )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno, origin, destination FROM flight ORDER BY origin;",
    "mongodb": "db.flight.find({}, {\"flno\": 1, \"origin\": 1, \"destination\": 1, \"_id\": 0}).sort( {\"origin\": 1} )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno, origin, destination FROM flight ORDER BY origin;",
    "mongodb": "db.flight.find({}, {\"flno\": 1, \"origin\": 1, \"destination\": 1, \"_id\": 0}).sort( {\"origin\": 1} )"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE Age = 36 OR Age = 37",
    "mongodb": "db.technician.find({\"$or\": [{\"Age\": 36}, {\"Age\": 37}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE Age = 36 OR Age = 37;",
    "mongodb": "db.technician.find({\"$or\": [{\"Age\": 36}, {\"Age\": 37}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE Age = 36 OR Age = 37",
    "mongodb": "db.technician.find({\"$or\": [{\"Age\": 36}, {\"Age\": 37}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE Age = 36 OR Age = 37",
    "mongodb": "db.technician.find({\"$or\": [{\"Age\": 36}, {\"Age\": 37}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE Age IN (36, 37)",
    "mongodb": "db.technician.find({\"Age\": {\"$in\": [36, 37]}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Location FROM county_public_safety GROUP BY Location ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Location FROM county_public_safety GROUP BY Location ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Location FROM county_public_safety GROUP BY Location ORDER BY COUNT(DISTINCT County_ID) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T2.Location FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID GROUP BY T2.Location ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT T2.Location FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID GROUP BY T2.Location ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast')\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = \"Central Coast\")",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = \"Central Coast\")', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast')\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = \"Central Coast\")",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = \"Central Coast\")', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = \"Central Coast\")",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = \"Central Coast\")', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy, COUNT(*) FROM Has_Allergy GROUP BY Allergy;",
    "mongodb": "db.Has_Allergy.aggregate([{\"$group\": {\"_id\": {\"Allergy\": \"$Allergy\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Allergy\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy, COUNT(*) FROM Has_Allergy GROUP BY Allergy;",
    "mongodb": "db.Has_Allergy.aggregate([{\"$group\": {\"_id\": {\"Allergy\": \"$Allergy\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Allergy\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy, COUNT(StuID) FROM Has_Allergy GROUP BY Allergy",
    "mongodb": "db.Has_Allergy.aggregate([{\"$group\": {\"_id\": {\"Allergy\": \"$Allergy\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$StuID\", null]}, 1, 0]}}}}, {\"$project\": {\"Allergy\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType, COUNT(StuID) FROM Has_Allergy JOIN Allergy_Type ON Has_Allergy.Allergy = Allergy_Type.Allergy GROUP BY AllergyType",
    "mongodb": "db.Has_Allergy.aggregate([{\"$lookup\": {\"from\": \"Allergy_Type\", \"localField\": \"Allergy\", \"foreignField\": \"Allergy\", \"as\": \"Allergy_Type\"}}, {\"$unwind\": \"$Allergy_Type\"}, {\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$StuID\", null]}, 1, 0]}}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T2.AllergyType, COUNT(*) FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy GROUP BY T2.AllergyType",
    "mongodb": "db.Has_Allergy.aggregate([{\"$lookup\": {\"from\": \"Allergy_Type\", \"localField\": \"Allergy\", \"foreignField\": \"Allergy\", \"as\": \"Allergy_Type\"}}, {\"$unwind\": \"$Allergy_Type\"}, {\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T1.Allergy, T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" ORDER BY T1.Allergy",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT T1.Allergy, T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" ORDER BY T1.Allergy', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T1.Allergy, T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" ORDER BY T1.Allergy;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT T1.Allergy, T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" ORDER BY T1.Allergy;', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT A.Allergy, A.AllergyType FROM Has_Allergy AS HA JOIN Allergy_Type AS A ON HA.Allergy = A.Allergy JOIN Student AS S ON HA.StuID = S.StuID WHERE S.Fname = 'Lisa' AND S.Sex = 'F' ORDER BY A.Allergy;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': \"SELECT A.Allergy, A.AllergyType FROM Has_Allergy AS HA JOIN Allergy_Type AS A ON HA.Allergy = A.Allergy JOIN Student AS S ON HA.StuID = S.StuID WHERE S.Fname = 'Lisa' AND S.Sex = 'F' ORDER BY A.Allergy;\", 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T1.Allergy, T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" AND T3.Sex = \"F\" ORDER BY T1.Allergy;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT T1.Allergy, T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" AND T3.Sex = \"F\" ORDER BY T1.Allergy;', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T1.Allergy, T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" AND T3.Sex = \"F\" ORDER BY T1.Allergy;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT T1.Allergy, T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" AND T3.Sex = \"F\" ORDER BY T1.Allergy;', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Location, COUNT(*) FROM gas_station GROUP BY Location ORDER BY COUNT(*) DESC;",
    "mongodb": "db.gas_station.aggregate([{\"$group\": {\"_id\": {\"Location\": \"$Location\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": -1}}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Location, COUNT(*) FROM gas_station GROUP BY Location ORDER BY COUNT(*)",
    "mongodb": "db.gas_station.aggregate([{\"$group\": {\"_id\": {\"Location\": \"$Location\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": 1}}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Location, COUNT(*) FROM gas_station GROUP BY Location ORDER BY COUNT(*) DESC",
    "mongodb": "db.gas_station.aggregate([{\"$group\": {\"_id\": {\"Location\": \"$Location\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": -1}}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT count(*) , Location FROM gas_station GROUP BY Location ORDER BY count(*) DESC",
    "mongodb": "db.gas_station.aggregate([{\"$group\": {\"_id\": {\"Location\": \"$Location\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr0\": -1}}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Location, COUNT(*) FROM gas_station GROUP BY Location ORDER BY COUNT(*) DESC",
    "mongodb": "db.gas_station.aggregate([{\"$group\": {\"_id\": {\"Location\": \"$Location\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": -1}}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name FROM Students WHERE family_name = \"Ward\"",
    "mongodb": "db.Students.find({\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Ward\"}}, {\"login_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name FROM Students WHERE family_name = \"Ward\"",
    "mongodb": "db.Students.find({\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Ward\"}}, {\"login_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name FROM Students WHERE family_name = \"Ward\"",
    "mongodb": "db.Students.find({\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Ward\"}}, {\"login_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name FROM Students WHERE family_name = \"Ward\"",
    "mongodb": "db.Students.find({\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Ward\"}}, {\"login_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name FROM Students WHERE family_name = \"Ward\"",
    "mongodb": "db.Students.find({\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Ward\"}}, {\"login_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver ORDER BY Age DESC",
    "mongodb": "db.driver.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver ORDER BY Age DESC",
    "mongodb": "db.driver.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver ORDER BY Age DESC",
    "mongodb": "db.driver.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver ORDER BY Age DESC",
    "mongodb": "db.driver.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver ORDER BY Age DESC",
    "mongodb": "db.driver.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Fname, T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID WHERE T1.CName = \"COMPUTER LITERACY\"",
    "mongodb": "db.Course.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"CName\", \"foreignField\": \"COMPUTER LITERACY\"}}}, {\"$lookup\": {\"from\": \"Faculty\", \"localField\": \"Instructor\", \"foreignField\": \"FacID\", \"as\": \"Faculty\"}}, {\"$unwind\": \"$Faculty\"}, {\"$project\": {\"Fname\": 1, \"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Faculty.Fname, Faculty.Lname FROM Course JOIN Faculty ON Course.Instructor = Faculty.FacID WHERE Course.CName = \"COMPUTER LITERACY\";",
    "mongodb": "db.Course.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"CName\", \"foreignField\": \"COMPUTER LITERACY\"}}}, {\"$lookup\": {\"from\": \"Faculty\", \"localField\": \"Instructor\", \"foreignField\": \"FacID\", \"as\": \"Faculty\"}}, {\"$unwind\": \"$Faculty\"}, {\"$project\": {\"Fname\": 1, \"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname, Lname FROM Faculty JOIN Course ON Faculty.FacID = Course.Instructor WHERE Course.CName = \"COMPUTER LITERACY\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': 'SELECT Fname, Lname FROM Faculty JOIN Course ON Faculty.FacID = Course.Instructor WHERE Course.CName = \"COMPUTER LITERACY\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Fname, T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID WHERE T1.CName = 'COMPUTER LITERACY'",
    "mongodb": "db.Course.aggregate([{\"$match\": {\"CName\": \"COMPUTER LITERACY\"}}, {\"$lookup\": {\"from\": \"Faculty\", \"localField\": \"Instructor\", \"foreignField\": \"FacID\", \"as\": \"Faculty\"}}, {\"$unwind\": \"$Faculty\"}, {\"$project\": {\"Fname\": 1, \"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Fname, T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID WHERE T1.CName = 'COMPUTER LITERACY';",
    "mongodb": "db.Course.aggregate([{\"$match\": {\"CName\": \"COMPUTER LITERACY\"}}, {\"$lookup\": {\"from\": \"Faculty\", \"localField\": \"Instructor\", \"foreignField\": \"FacID\", \"as\": \"Faculty\"}}, {\"$unwind\": \"$Faculty\"}, {\"$project\": {\"Fname\": 1, \"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Fname, Lname, Age FROM Student WHERE Sex = 'F'",
    "mongodb": "db.Student.find({\"Sex\": \"F\"}, {\"Fname\": 1, \"LName\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Fname, Lname, Age FROM Student WHERE Sex = 'F'",
    "mongodb": "db.Student.find({\"Sex\": \"F\"}, {\"Fname\": 1, \"LName\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Fname, LName, Age FROM Student WHERE Sex = 'F'",
    "mongodb": "db.Student.find({\"Sex\": \"F\"}, {\"Fname\": 1, \"LName\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Fname, Lname, Age FROM Student WHERE Sex = 'F'",
    "mongodb": "db.Student.find({\"Sex\": \"F\"}, {\"Fname\": 1, \"LName\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Fname, LName, Age FROM Student WHERE Sex = 'F'",
    "mongodb": "db.Student.find({\"Sex\": \"F\"}, {\"Fname\": 1, \"LName\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.statement_id, T2.statement_details, T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id;",
    "mongodb": "db.Accounts.aggregate([{\"$lookup\": {\"from\": \"Statements\", \"localField\": \"statement_id\", \"foreignField\": \"statement_id\", \"as\": \"Statements\"}}, {\"$unwind\": \"$Statements\"}, {\"$project\": {\"statement_id\": 1, \"statement_details\": 1, \"account_details\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.statement_id , T2.statement_details , T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id",
    "mongodb": "db.Accounts.aggregate([{\"$lookup\": {\"from\": \"Statements\", \"localField\": \"statement_id\", \"foreignField\": \"statement_id\", \"as\": \"Statements\"}}, {\"$unwind\": \"$Statements\"}, {\"$project\": {\"statement_id\": 1, \"statement_details\": 1, \"account_details\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Statement_ID, T1.Statement_Details, T2.Account_Details FROM Statements AS T1 JOIN Accounts AS T2 ON T1.Statement_ID = T2.Statement_ID;",
    "mongodb": "db.Statements.aggregate([{\"$lookup\": {\"from\": \"Accounts\", \"localField\": \"Statement_ID\", \"foreignField\": \"Statement_ID\", \"as\": \"Accounts\"}}, {\"$unwind\": \"$Accounts\"}, {\"$project\": {\"Statement_ID\": 1, \"Statement_Details\": 1, \"Account_Details\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Statement_ID, T2.Statement_Details, T1.Account_Details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.Statement_ID = T2.Statement_ID",
    "mongodb": "db.Accounts.aggregate([{\"$lookup\": {\"from\": \"Statements\", \"localField\": \"Statement_ID\", \"foreignField\": \"Statement_ID\", \"as\": \"Statements\"}}, {\"$unwind\": \"$Statements\"}, {\"$project\": {\"Statement_ID\": 1, \"Statement_Details\": 1, \"Account_Details\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Statement_ID, T2.Statement_Details, T2.Account_Details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.Statement_ID = T2.Statement_ID",
    "mongodb": "db.Accounts.aggregate([{\"$lookup\": {\"from\": \"Statements\", \"localField\": \"Statement_ID\", \"foreignField\": \"Statement_ID\", \"as\": \"Statements\"}}, {\"$unwind\": \"$Statements\"}, {\"$project\": {\"Statement_ID\": 1, \"Statement_Details\": 1, \"Account_Details\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Class FROM captain GROUP BY Class HAVING COUNT(*) > 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Class FROM captain GROUP BY Class HAVING COUNT(*) > 2', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Class FROM captain GROUP BY Class HAVING COUNT(*) > 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Class FROM captain GROUP BY Class HAVING COUNT(*) > 2', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Class FROM captain GROUP BY Class HAVING COUNT(*) > 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Class FROM captain GROUP BY Class HAVING COUNT(*) > 2', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Class, COUNT(*) FROM captain GROUP BY Class HAVING COUNT(*) > 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Class, COUNT(*) FROM captain GROUP BY Class HAVING COUNT(*) > 2', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Class FROM captain GROUP BY Class HAVING COUNT(*) > 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Class FROM captain GROUP BY Class HAVING COUNT(*) > 2', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name, Home_city, Age FROM driver",
    "mongodb": "db.driver.find({}, {\"Name\": 1, \"Home_city\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name, Home_city, Age FROM driver",
    "mongodb": "db.driver.find({}, {\"Name\": 1, \"Home_city\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name, Home_city, Age FROM driver",
    "mongodb": "db.driver.find({}, {\"Name\": 1, \"Home_city\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name, Home_city, Age FROM driver",
    "mongodb": "db.driver.find({}, {\"Name\": 1, \"Home_city\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name, Home_city, Age FROM driver",
    "mongodb": "db.driver.find({}, {\"Name\": 1, \"Home_city\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Courses",
    "mongodb": "db.Courses.find({}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Courses",
    "mongodb": "db.Courses.find({}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Courses",
    "mongodb": "db.Courses.find({}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Courses",
    "mongodb": "db.Courses.find({}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Courses;",
    "mongodb": "db.Courses.find({}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type",
    "mongodb": "db.Allergy_Type.find({}, {\"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT DISTINCT AllergyType FROM Allergy_Type",
    "mongodb": "db.Allergy_Type.distinct(\"AllergyType\", {})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type",
    "mongodb": "db.Allergy_Type.find({}, {\"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT DISTINCT AllergyType FROM Allergy_Type",
    "mongodb": "db.Allergy_Type.distinct(\"AllergyType\", {})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT DISTINCT AllergyType FROM Allergy_Type",
    "mongodb": "db.Allergy_Type.distinct(\"AllergyType\", {})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, salary FROM employee ORDER BY salary;",
    "mongodb": "db.employee.find({}, {\"name\": 1, \"salary\": 1, \"_id\": 0}).sort( {\"salary\": 1} )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, salary FROM employee ORDER BY salary;",
    "mongodb": "db.employee.find({}, {\"name\": 1, \"salary\": 1, \"_id\": 0}).sort( {\"salary\": 1} )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, salary FROM employee ORDER BY salary ASC",
    "mongodb": "db.employee.find({}, {\"name\": 1, \"salary\": 1, \"_id\": 0}).sort( {\"salary\": 1} )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, salary FROM employee ORDER BY salary",
    "mongodb": "db.employee.find({}, {\"name\": 1, \"salary\": 1, \"_id\": 0}).sort( {\"salary\": 1} )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, salary FROM employee ORDER BY salary",
    "mongodb": "db.employee.find({}, {\"name\": 1, \"salary\": 1, \"_id\": 0}).sort( {\"salary\": 1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM departments WHERE department_name = 'Marketing'",
    "mongodb": "db.departments.find({\"DEPARTMENT_NAME\": \"Marketing\"}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM departments WHERE department_name = 'Marketing'",
    "mongodb": "db.departments.find({\"DEPARTMENT_NAME\": \"Marketing\"}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM departments WHERE department_name = 'Marketing';",
    "mongodb": "db.departments.find({\"DEPARTMENT_NAME\": \"Marketing\"}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM departments WHERE department_name = 'Marketing'",
    "mongodb": "db.departments.find({\"DEPARTMENT_NAME\": \"Marketing\"}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM departments WHERE DEPARTMENT_NAME = 'Marketing';",
    "mongodb": "db.departments.find({\"DEPARTMENT_NAME\": \"Marketing\"}, {})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Minor_in | body={'db': 'college_3', 'sql': 'SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)', 'error': 'java.sql.SQLException: Non-existing table referenced: Minor_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Minor_in | body={'db': 'college_3', 'sql': 'SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)', 'error': 'java.sql.SQLException: Non-existing table referenced: Minor_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Minor_in | body={'db': 'college_3', 'sql': 'SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)', 'error': 'java.sql.SQLException: Non-existing table referenced: Minor_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Minor_in | body={'db': 'college_3', 'sql': 'SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)', 'error': 'java.sql.SQLException: Non-existing table referenced: Minor_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Minor_in | body={'db': 'college_3', 'sql': 'SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)', 'error': 'java.sql.SQLException: Non-existing table referenced: Minor_in'}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE \"%Al%\"",
    "mongodb": "db.CONTESTANTS.find({\"$lookup\": {\"from\": \"\", \"localField\": \"contestant_name\", \"foreignField\": \"%Al%\"}}, {\"contestant_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE \"%Al%\"",
    "mongodb": "db.CONTESTANTS.find({\"$lookup\": {\"from\": \"\", \"localField\": \"contestant_name\", \"foreignField\": \"%Al%\"}}, {\"contestant_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE \"%Al%\"",
    "mongodb": "db.CONTESTANTS.find({\"$lookup\": {\"from\": \"\", \"localField\": \"contestant_name\", \"foreignField\": \"%Al%\"}}, {\"contestant_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'",
    "mongodb": "db.CONTESTANTS.find({\"contestant_name\": {\"$regularExpression\": {\"pattern\": \"^.*Al.*$\", \"options\": \"\"}}}, {\"contestant_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name FROM contestants WHERE contestant_name LIKE \"%Al%\"",
    "mongodb": "db.CONTESTANTS.find({\"$lookup\": {\"from\": \"\", \"localField\": \"contestant_name\", \"foreignField\": \"%Al%\"}}, {\"contestant_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT DISTINCT Position FROM pilot WHERE Age > 30",
    "mongodb": "db.pilot.distinct(\"Position\", {\"Age\": {\"$gt\": 30}})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT DISTINCT Position FROM pilot WHERE Age > 30",
    "mongodb": "db.pilot.distinct(\"Position\", {\"Age\": {\"$gt\": 30}})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT DISTINCT Pilot_name FROM pilot WHERE Age > 30",
    "mongodb": "db.pilot.distinct(\"Pilot_name\", {\"Age\": {\"$gt\": 30}})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT DISTINCT Position FROM pilot WHERE Age > 30",
    "mongodb": "db.pilot.distinct(\"Position\", {\"Age\": {\"$gt\": 30}})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT DISTINCT Position FROM pilot WHERE Age > 30",
    "mongodb": "db.pilot.distinct(\"Position\", {\"Age\": {\"$gt\": 30}})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(DISTINCT AllergyType) FROM Allergy_Type",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(DISTINCT Allergy) FROM Allergy_Type",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(DISTINCT AllergyType) FROM Allergy_Type",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(DISTINCT AllergyType) FROM Allergy_Type",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(DISTINCT AllergyType) FROM Allergy_Type;",
    "mongodb": ""
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT DISTINCT Home_city FROM driver",
    "mongodb": "db.driver.distinct(\"Home_city\", {})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT DISTINCT Home_city FROM driver",
    "mongodb": "db.driver.distinct(\"Home_city\", {})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT DISTINCT Home_city FROM driver",
    "mongodb": "db.driver.distinct(\"Home_city\", {})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT DISTINCT Home_city FROM driver",
    "mongodb": "db.driver.distinct(\"Home_city\", {})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT DISTINCT Home_city FROM driver",
    "mongodb": "db.driver.distinct(\"Home_city\", {})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT destination, COUNT(*) FROM flight GROUP BY destination;",
    "mongodb": "db.flight.aggregate([{\"$group\": {\"_id\": {\"destination\": \"$destination\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"destination\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT destination, COUNT(*) FROM flight GROUP BY destination",
    "mongodb": "db.flight.aggregate([{\"$group\": {\"_id\": {\"destination\": \"$destination\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"destination\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT destination, count(*) FROM flight GROUP BY destination;",
    "mongodb": "db.flight.aggregate([{\"$group\": {\"_id\": {\"destination\": \"$destination\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"destination\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT destination, COUNT(*) FROM flight GROUP BY destination",
    "mongodb": "db.flight.aggregate([{\"$group\": {\"_id\": {\"destination\": \"$destination\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"destination\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT destination, COUNT(*) FROM flight GROUP BY destination",
    "mongodb": "db.flight.aggregate([{\"$group\": {\"_id\": {\"destination\": \"$destination\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"destination\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Party, COUNT(*) FROM driver GROUP BY Party",
    "mongodb": "db.driver.aggregate([{\"$group\": {\"_id\": {\"Party\": \"$Party\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Party\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Party, COUNT(*) FROM driver GROUP BY Party",
    "mongodb": "db.driver.aggregate([{\"$group\": {\"_id\": {\"Party\": \"$Party\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Party\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Party, COUNT(*) FROM driver GROUP BY Party",
    "mongodb": "db.driver.aggregate([{\"$group\": {\"_id\": {\"Party\": \"$Party\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Party\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Party, COUNT(*) FROM driver GROUP BY Party",
    "mongodb": "db.driver.aggregate([{\"$group\": {\"_id\": {\"Party\": \"$Party\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Party\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Party, COUNT(*) FROM driver GROUP BY Party",
    "mongodb": "db.driver.aggregate([{\"$group\": {\"_id\": {\"Party\": \"$Party\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Party\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Lname FROM Faculty WHERE Building = \"Barton\" ORDER BY Lname;",
    "mongodb": "db.Faculty.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Building\", \"foreignField\": \"Barton\"}}, {\"Lname\": 1, \"_id\": 0}).sort( {\"Lname\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Lname FROM Faculty WHERE Building = \"Barton\" ORDER BY Lname;",
    "mongodb": "db.Faculty.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Building\", \"foreignField\": \"Barton\"}}, {\"Lname\": 1, \"_id\": 0}).sort( {\"Lname\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Lname FROM Faculty WHERE Building = 'Barton' ORDER BY Lname ASC;",
    "mongodb": "db.Faculty.find({\"Building\": \"Barton\"}, {\"Lname\": 1, \"_id\": 0}).sort( {\"Lname\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Lname FROM Faculty WHERE Building = \"Barton\" ORDER BY Lname;",
    "mongodb": "db.Faculty.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Building\", \"foreignField\": \"Barton\"}}, {\"Lname\": 1, \"_id\": 0}).sort( {\"Lname\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Lname FROM Faculty WHERE Building = 'Barton' ORDER BY Lname;",
    "mongodb": "db.Faculty.find({\"Building\": \"Barton\"}, {\"Lname\": 1, \"_id\": 0}).sort( {\"Lname\": 1} )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country FROM airports ORDER BY x DESC LIMIT 1",
    "mongodb": "db.airports.find({}, {\"name\": 1, \"city\": 1, \"country\": 1, \"_id\": 0}).sort( {\"x\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country FROM airports ORDER BY elevation DESC LIMIT 1",
    "mongodb": "db.airports.find({}, {\"name\": 1, \"city\": 1, \"country\": 1, \"_id\": 0}).sort( {\"elevation\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country FROM airports ORDER BY elevation DESC LIMIT 1;",
    "mongodb": "db.airports.find({}, {\"name\": 1, \"city\": 1, \"country\": 1, \"_id\": 0}).sort( {\"elevation\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country FROM airports ORDER BY elevation DESC LIMIT 1",
    "mongodb": "db.airports.find({}, {\"name\": 1, \"city\": 1, \"country\": 1, \"_id\": 0}).sort( {\"elevation\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country FROM airports WHERE elevation = (SELECT MAX(elevation) FROM airports)",
    "mongodb": ""
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School, Location FROM university WHERE Affiliation = 'Public'",
    "mongodb": "db.university.find({\"Affiliation\": \"Public\"}, {\"School\": 1, \"Location\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School, Location FROM university WHERE Affiliation = 'Public'",
    "mongodb": "db.university.find({\"Affiliation\": \"Public\"}, {\"School\": 1, \"Location\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School, Location FROM university WHERE Affiliation = \"Public\"",
    "mongodb": "db.university.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Affiliation\", \"foreignField\": \"Public\"}}, {\"School\": 1, \"Location\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School, Location FROM university WHERE Affiliation = 'Public'",
    "mongodb": "db.university.find({\"Affiliation\": \"Public\"}, {\"School\": 1, \"Location\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School, Location FROM university WHERE Affiliation = 'Public'",
    "mongodb": "db.university.find({\"Affiliation\": \"Public\"}, {\"School\": 1, \"Location\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T1.Area ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T1.Area ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT T2.Type, COUNT(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T2.Type",
    "mongodb": "db.school_bus.aggregate([{\"$lookup\": {\"from\": \"school\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$group\": {\"_id\": {\"Type\": \"$Type\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Type\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT T2.Type, COUNT(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T2.Type",
    "mongodb": "db.school_bus.aggregate([{\"$lookup\": {\"from\": \"school\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$group\": {\"_id\": {\"Type\": \"$Type\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Type\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Type , COUNT(*) FROM school_bus AS sb JOIN school AS s ON sb.School_ID = s.School_ID GROUP BY s.Type",
    "mongodb": "db.school_bus.aggregate([{\"$lookup\": {\"from\": \"school\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$group\": {\"_id\": {\"Type\": \"$Type\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Type\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT T2.Type, COUNT(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T2.Type;",
    "mongodb": "db.school_bus.aggregate([{\"$lookup\": {\"from\": \"school\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$group\": {\"_id\": {\"Type\": \"$Type\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Type\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT T2.Type, COUNT(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T2.Type",
    "mongodb": "db.school_bus.aggregate([{\"$lookup\": {\"from\": \"school\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$group\": {\"_id\": {\"Type\": \"$Type\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Type\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT max(elevation) FROM airports WHERE country = 'Iceland'",
    "mongodb": "db.airports.aggregate([{\"$match\": {\"country\": \"Iceland\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$elevation\"}}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT max(elevation) FROM airports WHERE country = 'Iceland'",
    "mongodb": "db.airports.aggregate([{\"$match\": {\"country\": \"Iceland\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$elevation\"}}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT MAX(elevation) FROM airports WHERE country = 'Iceland'",
    "mongodb": "db.airports.aggregate([{\"$match\": {\"country\": \"Iceland\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$elevation\"}}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT max(elevation) FROM airports WHERE country = 'Iceland'",
    "mongodb": "db.airports.aggregate([{\"$match\": {\"country\": \"Iceland\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$elevation\"}}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT MAX(elevation) FROM airports WHERE country = 'Iceland'",
    "mongodb": "db.airports.aggregate([{\"$match\": {\"country\": \"Iceland\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$elevation\"}}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT salary, manager_id FROM employees WHERE manager_id IS NOT NULL;",
    "mongodb": "db.employees.find({\"manager_id\": {\"$ne\": null}}, {\"salary\": 1, \"manager_id\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT salary, manager_id FROM employees WHERE manager_id IS NOT NULL;",
    "mongodb": "db.employees.find({\"manager_id\": {\"$ne\": null}}, {\"salary\": 1, \"manager_id\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT salary, manager_id FROM employees WHERE manager_id IS NOT NULL",
    "mongodb": "db.employees.find({\"manager_id\": {\"$ne\": null}}, {\"salary\": 1, \"manager_id\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT SALARY, MANAGER_ID FROM employees WHERE MANAGER_ID IS NOT NULL;",
    "mongodb": "db.employees.find({\"MANAGER_ID\": {\"$ne\": null}}, {\"SALARY\": 1, \"MANAGER_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT salary, manager_id FROM employees WHERE manager_id IS NOT NULL",
    "mongodb": "db.employees.find({\"manager_id\": {\"$ne\": null}}, {\"salary\": 1, \"manager_id\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = \"Clara\")",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = \"Clara\")', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT e.first_name, e.last_name, e.hire_date FROM employees e WHERE e.department_id IN (SELECT department_id FROM employees WHERE first_name = 'Clara');",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT e.first_name, e.last_name, e.hire_date FROM employees e WHERE e.department_id IN (SELECT department_id FROM employees WHERE first_name = 'Clara');\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT e.FIRST_NAME, e.LAST_NAME, e.HIRE_DATE FROM employees e JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID WHERE d.DEPARTMENT_NAME = 'Clara';",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"DEPARTMENT_NAME\": \"Clara\"}}, {\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$project\": {\"FIRST_NAME\": 1, \"LAST_NAME\": 1, \"HIRE_DATE\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.FIRST_NAME, T1.LAST_NAME, T1.HIRE_DATE FROM EMPLOYEES AS T1 JOIN DEPARTMENTS AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID WHERE T2.DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Clara')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: EMPLOYEES | body={'db': 'hr_1', 'sql': \"SELECT T1.FIRST_NAME, T1.LAST_NAME, T1.HIRE_DATE FROM EMPLOYEES AS T1 JOIN DEPARTMENTS AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID WHERE T2.DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Clara')\", 'error': 'java.sql.SQLException: Non-existing table referenced: EMPLOYEES'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T2.first_name, T2.last_name, T2.hire_date FROM employees AS T1 JOIN employees AS T2 ON T1.department_id = T2.department_id WHERE T1.first_name = 'Clara'",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"first_name\": \"Clara\"}}, {\"$lookup\": {\"from\": \"employees\", \"localField\": \"department_id\", \"foreignField\": \"department_id\", \"as\": \"employees\"}}, {\"$unwind\": \"$employees\"}, {\"$project\": {\"first_name\": 1, \"last_name\": 1, \"hire_date\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Open_Date, Open_Year FROM shop WHERE Shop_Name = \"Apple\"",
    "mongodb": "db.shop.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Shop_Name\", \"foreignField\": \"Apple\"}}, {\"Open_Date\": 1, \"Open_Year\": 1, \"_id\": 0})"
  },
  {
    "db_id": "device",
    "sql": "SELECT Open_Date, Open_Year FROM shop WHERE Shop_Name = \"Apple\"",
    "mongodb": "db.shop.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Shop_Name\", \"foreignField\": \"Apple\"}}, {\"Open_Date\": 1, \"Open_Year\": 1, \"_id\": 0})"
  },
  {
    "db_id": "device",
    "sql": "SELECT Open_Date, Open_Year FROM shop WHERE Shop_Name = \"Apple\"",
    "mongodb": "db.shop.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Shop_Name\", \"foreignField\": \"Apple\"}}, {\"Open_Date\": 1, \"Open_Year\": 1, \"_id\": 0})"
  },
  {
    "db_id": "device",
    "sql": "SELECT Open_Year, Open_Date FROM shop WHERE Shop_Name = \"Apple\"",
    "mongodb": "db.shop.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Shop_Name\", \"foreignField\": \"Apple\"}}, {\"Open_Year\": 1, \"Open_Date\": 1, \"_id\": 0})"
  },
  {
    "db_id": "device",
    "sql": "SELECT Open_Date, Open_Year FROM shop WHERE Shop_Name = \"Apple\"",
    "mongodb": "db.shop.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Shop_Name\", \"foreignField\": \"Apple\"}}, {\"Open_Date\": 1, \"Open_Year\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_allergy | body={'db': 'allergy_1', 'sql': 'SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_allergy | body={'db': 'allergy_1', 'sql': 'SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_allergy | body={'db': 'allergy_1', 'sql': 'SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_allergy | body={'db': 'allergy_1', 'sql': 'SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T1.StuID FROM Has_allergy AS T1 GROUP BY T1.StuID HAVING COUNT(DISTINCT T1.Allergy) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_allergy | body={'db': 'allergy_1', 'sql': 'SELECT T1.StuID FROM Has_allergy AS T1 GROUP BY T1.StuID HAVING COUNT(DISTINCT T1.Allergy) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_allergy'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT min(Crime_rate) , max(Crime_rate) FROM county_public_safety",
    "mongodb": "db.county_public_safety.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$Crime_rate\"}, \"Expr1\": {\"$max\": \"$Crime_rate\"}}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT min(Crime_rate) , max(Crime_rate) FROM county_public_safety",
    "mongodb": "db.county_public_safety.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$Crime_rate\"}, \"Expr1\": {\"$max\": \"$Crime_rate\"}}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT min(Crime_rate) , max(Crime_rate) FROM county_public_safety",
    "mongodb": "db.county_public_safety.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$Crime_rate\"}, \"Expr1\": {\"$max\": \"$Crime_rate\"}}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT min(Crime_rate) , max(Crime_rate) FROM county_public_safety",
    "mongodb": "db.county_public_safety.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$Crime_rate\"}, \"Expr1\": {\"$max\": \"$Crime_rate\"}}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT County_ID, Name, MIN(Crime_rate) AS Least_Severe_Crime_Rate, MAX(Crime_rate) AS Most_Severe_Crime_Rate FROM county_public_safety GROUP BY County_ID, Name;",
    "mongodb": "db.county_public_safety.aggregate([{\"$group\": {\"_id\": {\"County_ID\": \"$County_ID\", \"Name\": \"$Name\"}, \"Least_Severe_Crime_Rate\": {\"$min\": \"$Crime_rate\"}, \"Most_Severe_Crime_Rate\": {\"$max\": \"$Crime_rate\"}}}, {\"$project\": {\"County_ID\": 1, \"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT count(*) FROM Customers WHERE customer_type_code = ( SELECT customer_type_code FROM Customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1 )",
    "mongodb": ""
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT count(*) FROM Customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "db.Customers.aggregate([{\"$group\": {\"_id\": {\"customer_type_code\": \"$customer_type_code\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr0\": -1}}, {\"$limit\": 1}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT SUM(count) FROM (SELECT count(*) as count FROM Customers GROUP BY customer_type_code ORDER BY count DESC LIMIT 1) as highest_count;",
    "mongodb": ""
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT count(*) FROM Customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "db.Customers.aggregate([{\"$group\": {\"_id\": {\"customer_type_code\": \"$customer_type_code\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr0\": -1}}, {\"$limit\": 1}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT customer_type_code, COUNT(*) FROM Customers GROUP BY customer_type_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "mongodb": "db.Customers.aggregate([{\"$group\": {\"_id\": {\"customer_type_code\": \"$customer_type_code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": -1}}, {\"$limit\": 1}, {\"$project\": {\"customer_type_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: repair_assignment | body={'db': 'machine_repair', 'sql': 'SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)', 'error': 'java.sql.SQLException: Non-existing table referenced: repair_assignment'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: repair_assignment | body={'db': 'machine_repair', 'sql': 'SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)', 'error': 'java.sql.SQLException: Non-existing table referenced: repair_assignment'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: repair_assignment | body={'db': 'machine_repair', 'sql': 'SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)', 'error': 'java.sql.SQLException: Non-existing table referenced: repair_assignment'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: repair_assignment | body={'db': 'machine_repair', 'sql': 'SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)', 'error': 'java.sql.SQLException: Non-existing table referenced: repair_assignment'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: repair_assignment | body={'db': 'machine_repair', 'sql': 'SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)', 'error': 'java.sql.SQLException: Non-existing table referenced: repair_assignment'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name, Score FROM wine;",
    "mongodb": "db.wine.find({}, {\"Name\": 1, \"Score\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name, Score FROM wine",
    "mongodb": "db.wine.find({}, {\"Name\": 1, \"Score\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name, Score FROM wine",
    "mongodb": "db.wine.find({}, {\"Name\": 1, \"Score\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name, Score FROM wine",
    "mongodb": "db.wine.find({}, {\"Name\": 1, \"Score\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name, Score FROM wine;",
    "mongodb": "db.wine.find({}, {\"Name\": 1, \"Score\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'",
    "mongodb": "db.CONTESTANTS.find({\"contestant_name\": {\"$ne\": \"Jessie Alloway\"}}, {\"contestant_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway'",
    "mongodb": "db.CONTESTANTS.find({\"contestant_name\": {\"$ne\": \"Jessie Alloway\"}}, {\"contestant_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'",
    "mongodb": "db.CONTESTANTS.find({\"contestant_name\": {\"$ne\": \"Jessie Alloway\"}}, {\"contestant_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway';",
    "mongodb": "db.CONTESTANTS.find({\"contestant_name\": {\"$ne\": \"Jessie Alloway\"}}, {\"contestant_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'",
    "mongodb": "db.CONTESTANTS.find({\"contestant_name\": {\"$ne\": \"Jessie Alloway\"}}, {\"contestant_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player WHERE Age = (SELECT MAX(Age) FROM player)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT Team FROM player WHERE Age = (SELECT MAX(Age) FROM player)', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1;",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name, family_name FROM Course_Authors_and_Tutors;",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {\"login_name\": 1, \"family_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name, family_name FROM Course_Authors_and_Tutors;",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {\"login_name\": 1, \"family_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name, family_name FROM Course_Authors_and_Tutors;",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {\"login_name\": 1, \"family_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name, family_name FROM Course_Authors_and_Tutors",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {\"login_name\": 1, \"family_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name, family_name FROM Course_Authors_and_Tutors",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {\"login_name\": 1, \"family_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT max(Price) , max(Score) FROM wine WHERE Appelation = \"St. Helena\"",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Appelation\", \"foreignField\": \"St. Helena\"}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Price\"}, \"Expr1\": {\"$max\": \"$Score\"}}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT max(Price) , max(Score) FROM wine WHERE Appelation = \"St. Helena\"",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Appelation\", \"foreignField\": \"St. Helena\"}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Price\"}, \"Expr1\": {\"$max\": \"$Score\"}}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT max(Price), max(Score) FROM wine WHERE Appelation = 'St. Helena'",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"Appelation\": \"St. Helena\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Price\"}, \"Expr1\": {\"$max\": \"$Score\"}}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT MAX(Price), MAX(Score) FROM wine WHERE Appelation = \"St. Helena\"",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Appelation\", \"foreignField\": \"St. Helena\"}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Price\"}, \"Expr1\": {\"$max\": \"$Score\"}}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT max(Price) , max(Score) FROM wine WHERE Appelation = \"St. Helena\"",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Appelation\", \"foreignField\": \"St. Helena\"}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Price\"}, \"Expr1\": {\"$max\": \"$Score\"}}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students;",
    "mongodb": ""
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
    "mongodb": ""
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
    "mongodb": ""
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name FROM Course_Authors_and_Tutors WHERE login_name IN (SELECT login_name FROM Students)",
    "mongodb": ""
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT login_name FROM Course_Authors_and_Tutors WHERE login_name IN (SELECT login_name FROM Students)",
    "mongodb": ""
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000",
    "mongodb": "db.employees.find({\"$and\": [{\"salary\": {\"$gte\": 8000}}, {\"salary\": {\"$lte\": 12000}}]}, {\"phone_number\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000",
    "mongodb": "db.employees.find({\"$and\": [{\"salary\": {\"$gte\": 8000}}, {\"salary\": {\"$lte\": 12000}}]}, {\"phone_number\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT PHONE_NUMBER FROM employees WHERE SALARY BETWEEN 8000 AND 12000",
    "mongodb": "db.employees.find({\"$and\": [{\"SALARY\": {\"$gte\": 8000}}, {\"SALARY\": {\"$lte\": 12000}}]}, {\"PHONE_NUMBER\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT PHONE_NUMBER FROM employees WHERE SALARY BETWEEN 8000 AND 12000",
    "mongodb": "db.employees.find({\"$and\": [{\"SALARY\": {\"$gte\": 8000}}, {\"SALARY\": {\"$lte\": 12000}}]}, {\"PHONE_NUMBER\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT PHONE_NUMBER FROM employees WHERE SALARY BETWEEN 8000 AND 12000;",
    "mongodb": "db.employees.find({\"$and\": [{\"SALARY\": {\"$gte\": 8000}}, {\"SALARY\": {\"$lte\": 12000}}]}, {\"PHONE_NUMBER\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination, COUNT(*) FROM school GROUP BY Denomination",
    "mongodb": "db.school.aggregate([{\"$group\": {\"_id\": {\"Denomination\": \"$Denomination\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Denomination\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination, COUNT(*) FROM school GROUP BY Denomination",
    "mongodb": "db.school.aggregate([{\"$group\": {\"_id\": {\"Denomination\": \"$Denomination\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Denomination\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination, COUNT(*) FROM school GROUP BY Denomination",
    "mongodb": "db.school.aggregate([{\"$group\": {\"_id\": {\"Denomination\": \"$Denomination\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Denomination\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination, COUNT(*) FROM school GROUP BY Denomination",
    "mongodb": "db.school.aggregate([{\"$group\": {\"_id\": {\"Denomination\": \"$Denomination\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Denomination\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination, COUNT(*) FROM school GROUP BY Denomination",
    "mongodb": "db.school.aggregate([{\"$group\": {\"_id\": {\"Denomination\": \"$Denomination\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Denomination\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT vote_id, phone_number, state FROM VOTES;",
    "mongodb": "db.VOTES.find({}, {\"vote_id\": 1, \"phone_number\": 1, \"state\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT vote_id, phone_number, state FROM VOTES",
    "mongodb": "db.VOTES.find({}, {\"vote_id\": 1, \"phone_number\": 1, \"state\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT vote_id, phone_number, state FROM VOTES",
    "mongodb": "db.VOTES.find({}, {\"vote_id\": 1, \"phone_number\": 1, \"state\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT vote_id, phone_number, state FROM VOTES",
    "mongodb": "db.VOTES.find({}, {\"vote_id\": 1, \"phone_number\": 1, \"state\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT vote_id, phone_number, state FROM VOTES",
    "mongodb": "db.VOTES.find({}, {\"vote_id\": 1, \"phone_number\": 1, \"state\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Age FROM editor GROUP BY Age ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Age FROM editor GROUP BY Age ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT AVG(Age) AS Predominant_Age FROM editor",
    "mongodb": "db.editor.aggregate([{\"$group\": {\"_id\": null, \"Predominant_Age\": {\"$avg\": \"$Age\"}}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
    "mongodb": "db.county_public_safety.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Population\": -1} ).limit( 1 )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
    "mongodb": "db.county_public_safety.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Population\": -1} ).limit( 1 )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
    "mongodb": "db.county_public_safety.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Population\": -1} ).limit( 1 )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety WHERE Population = (SELECT MAX(Population) FROM county_public_safety)",
    "mongodb": ""
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
    "mongodb": "db.county_public_safety.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Population\": -1} ).limit( 1 )"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_of_latest_logon FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"",
    "mongodb": "db.Students.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Jaskolski\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Langosh\"}}]}, {\"date_of_latest_logon\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_of_latest_logon FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"",
    "mongodb": "db.Students.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Jaskolski\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Langosh\"}}]}, {\"date_of_latest_logon\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT MAX(date_of_latest_logon) FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"",
    "mongodb": "db.Students.aggregate([{\"$match\": {\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Jaskolski\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Langosh\"}}]}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$date_of_latest_logon\"}}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_of_latest_logon FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"",
    "mongodb": "db.Students.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Jaskolski\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Langosh\"}}]}, {\"date_of_latest_logon\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_of_latest_logon FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"",
    "mongodb": "db.Students.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Jaskolski\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"family_name\", \"foreignField\": \"Langosh\"}}]}, {\"date_of_latest_logon\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, Appelation, Name FROM wine WHERE Score > 93 ORDER BY Name;",
    "mongodb": "db.wine.find({\"Score\": {\"$gt\": 93}}, {\"Grape\": 1, \"Appelation\": 1, \"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, Appelation, Name FROM wine WHERE Score > 93 ORDER BY Name;",
    "mongodb": "db.wine.find({\"Score\": {\"$gt\": 93}}, {\"Grape\": 1, \"Appelation\": 1, \"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, Appelation, Name FROM wine WHERE Score > 93 ORDER BY Name",
    "mongodb": "db.wine.find({\"Score\": {\"$gt\": 93}}, {\"Grape\": 1, \"Appelation\": 1, \"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, Appelation, Name FROM wine WHERE Score > 93 ORDER BY Name",
    "mongodb": "db.wine.find({\"Score\": {\"$gt\": 93}}, {\"Grape\": 1, \"Appelation\": 1, \"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT W.Name, G.Grape, A.Appelation FROM wine AS W JOIN grapes AS G ON W.Grape = G.Grape JOIN appellations AS A ON W.Appelation = A.Appelation WHERE W.Score > 93 ORDER BY W.Name;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT W.Name, G.Grape, A.Appelation FROM wine AS W JOIN grapes AS G ON W.Grape = G.Grape JOIN appellations AS A ON W.Appelation = A.Appelation WHERE W.Score > 93 ORDER BY W.Name;', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE Building = \"Mergenthaler\"",
    "mongodb": "db.Department.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Building\", \"foreignField\": \"Mergenthaler\"}}, {\"DName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE Building = \"Mergenthaler\";",
    "mongodb": "db.Department.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Building\", \"foreignField\": \"Mergenthaler\"}}, {\"DName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE Building = \"Mergenthaler\"",
    "mongodb": "db.Department.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Building\", \"foreignField\": \"Mergenthaler\"}}, {\"DName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE Building = \"Mergenthaler\"",
    "mongodb": "db.Department.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Building\", \"foreignField\": \"Mergenthaler\"}}, {\"DName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE Building = \"Mergenthaler\"",
    "mongodb": "db.Department.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Building\", \"foreignField\": \"Mergenthaler\"}}, {\"DName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city ORDER BY Name ASC",
    "mongodb": "db.city.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city ORDER BY Name ASC",
    "mongodb": "db.city.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city ORDER BY Name ASC",
    "mongodb": "db.city.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city ORDER BY Name ASC",
    "mongodb": "db.city.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city ORDER BY Name ASC",
    "mongodb": "db.city.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.statement_id, T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Accounts | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT T1.statement_id, T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Accounts'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Accounts | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Accounts'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Statement_ID, Statement_Details FROM Statements WHERE Statement_ID IN (SELECT Statement_ID FROM Accounts GROUP BY Statement_ID ORDER BY COUNT(*) DESC LIMIT 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Statements | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Statement_ID, Statement_Details FROM Statements WHERE Statement_ID IN (SELECT Statement_ID FROM Accounts GROUP BY Statement_ID ORDER BY COUNT(*) DESC LIMIT 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: Statements'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Statement_ID, T2.Statement_Details FROM Statements AS T1 JOIN Accounts AS T2 ON T1.Statement_ID = T2.Statement_ID GROUP BY T1.Statement_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Statements | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT T1.Statement_ID, T2.Statement_Details FROM Statements AS T1 JOIN Accounts AS T2 ON T1.Statement_ID = T2.Statement_ID GROUP BY T1.Statement_ID ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Statements'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Statement_ID, T1.Statement_Details FROM Statements AS T1 JOIN Accounts AS T2 ON T1.Statement_ID = T2.Statement_ID GROUP BY T1.Statement_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Statements | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT T1.Statement_ID, T1.Statement_Details FROM Statements AS T1 JOIN Accounts AS T2 ON T1.Statement_ID = T2.Statement_ID GROUP BY T1.Statement_ID ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Statements'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Account_ID, Account_Details FROM Accounts",
    "mongodb": "db.Accounts.find({}, {\"Account_ID\": 1, \"Account_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Account_ID, Account_Details FROM Accounts",
    "mongodb": "db.Accounts.find({}, {\"Account_ID\": 1, \"Account_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Account_ID, Account_Details FROM Accounts;",
    "mongodb": "db.Accounts.find({}, {\"Account_ID\": 1, \"Account_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Account_ID, Account_Details FROM Accounts",
    "mongodb": "db.Accounts.find({}, {\"Account_ID\": 1, \"Account_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Account_ID, Account_Details FROM Accounts",
    "mongodb": "db.Accounts.find({}, {\"Account_ID\": 1, \"Account_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Course",
    "mongodb": "db.Course.find({}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Course",
    "mongodb": "db.Course.find({}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Course",
    "mongodb": "db.Course.find({}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Course",
    "mongodb": "db.Course.find({}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Course",
    "mongodb": "db.Course.find({}, {}).count()"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality",
    "mongodb": "db.pilot.aggregate([{\"$group\": {\"_id\": {\"Nationality\": \"$Nationality\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Nationality\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Nationality, COUNT(*) FROM pilot GROUP BY Nationality",
    "mongodb": "db.pilot.aggregate([{\"$group\": {\"_id\": {\"Nationality\": \"$Nationality\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Nationality\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Nationality, COUNT(*) FROM pilot GROUP BY Nationality",
    "mongodb": "db.pilot.aggregate([{\"$group\": {\"_id\": {\"Nationality\": \"$Nationality\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Nationality\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Nationality, COUNT(*) FROM pilot GROUP BY Nationality",
    "mongodb": "db.pilot.aggregate([{\"$group\": {\"_id\": {\"Nationality\": \"$Nationality\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Nationality\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Nationality, COUNT(*) FROM pilot GROUP BY Nationality",
    "mongodb": "db.pilot.aggregate([{\"$group\": {\"_id\": {\"Nationality\": \"$Nationality\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Nationality\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Directed_by FROM film;",
    "mongodb": "db.film.find({}, {\"Directed_by\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Directed_by FROM film;",
    "mongodb": "db.film.find({}, {\"Directed_by\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT DISTINCT Directed_by FROM film",
    "mongodb": "db.film.distinct(\"Directed_by\", {})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT directed_by FROM film",
    "mongodb": "db.film.find({}, {\"Directed_by\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT DISTINCT Directed_by FROM film",
    "mongodb": "db.film.distinct(\"Directed_by\", {})"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters, COUNT(*) FROM company GROUP BY Headquarters",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": {\"Headquarters\": \"$Headquarters\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Headquarters\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters, COUNT(*) FROM company GROUP BY Headquarters",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": {\"Headquarters\": \"$Headquarters\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Headquarters\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters, COUNT(*) FROM company GROUP BY Headquarters",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": {\"Headquarters\": \"$Headquarters\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Headquarters\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters, COUNT(Company) FROM company GROUP BY Headquarters",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": {\"Headquarters\": \"$Headquarters\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Company\", null]}, 1, 0]}}}}, {\"$project\": {\"Headquarters\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters, COUNT(*) FROM company GROUP BY Headquarters",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": {\"Headquarters\": \"$Headquarters\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Headquarters\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM climber WHERE Country != \"Switzerland\"",
    "mongodb": "db.climber.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Country\", \"foreignField\": \"Switzerland\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM climber WHERE Country != \"Switzerland\"",
    "mongodb": "db.climber.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Country\", \"foreignField\": \"Switzerland\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM climber WHERE Country != 'Switzerland'",
    "mongodb": "db.climber.find({\"Country\": {\"$ne\": \"Switzerland\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM climber WHERE Country != 'Switzerland'",
    "mongodb": "db.climber.find({\"Country\": {\"$ne\": \"Switzerland\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM climber WHERE Country != \"Switzerland\"",
    "mongodb": "db.climber.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Country\", \"foreignField\": \"Switzerland\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT COUNT(DISTINCT StuID) FROM Enrolled_in WHERE Grade = \"B\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT COUNT(DISTINCT StuID) FROM Enrolled_in WHERE Grade = \"B\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT COUNT(DISTINCT StuID) FROM Enrolled_in WHERE Grade = \"B\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT COUNT(DISTINCT StuID) FROM Enrolled_in WHERE Grade = \"B\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT COUNT(DISTINCT StuID) FROM Enrolled_in WHERE Grade = \"B\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT COUNT(DISTINCT StuID) FROM Enrolled_in WHERE Grade = \"B\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT COUNT(DISTINCT StuID) FROM Enrolled_in WHERE Grade = \"B\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT COUNT(DISTINCT StuID) FROM Enrolled_in WHERE Grade = \"B\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(DISTINCT StuID) FROM Enrolled_in WHERE Grade = 'B'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': \"SELECT count(DISTINCT StuID) FROM Enrolled_in WHERE Grade = 'B'\", 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM climber ORDER BY Points DESC",
    "mongodb": "db.climber.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Points\": -1} )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM climber ORDER BY Points DESC",
    "mongodb": "db.climber.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Points\": -1} )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM climber ORDER BY Points DESC",
    "mongodb": "db.climber.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Points\": -1} )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM climber ORDER BY Points DESC",
    "mongodb": "db.climber.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Points\": -1} )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM climber ORDER BY Points DESC",
    "mongodb": "db.climber.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Points\": -1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T2.Company, COUNT(*) FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Company_ID;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT T2.Company, COUNT(*) FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Company_ID;', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T2.Company, COUNT(*) FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Company_ID",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT T2.Company, COUNT(*) FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Company_ID', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T1.Company, COUNT(T2.Station_ID) AS Total_gas_stations FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Company;",
    "mongodb": "db.company.aggregate([{\"$lookup\": {\"from\": \"station_company\", \"localField\": \"Company_ID\", \"foreignField\": \"Company_ID\", \"as\": \"station_company\"}}, {\"$unwind\": \"$station_company\"}, {\"$group\": {\"_id\": {\"Company\": \"$Company\"}, \"Total_gas_stations\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Station_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"Company\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T2.Company, COUNT(T1.Station_ID) FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T2.Company",
    "mongodb": "db.station_company.aggregate([{\"$lookup\": {\"from\": \"company\", \"localField\": \"Company_ID\", \"foreignField\": \"Company_ID\", \"as\": \"company\"}}, {\"$unwind\": \"$company\"}, {\"$group\": {\"_id\": {\"Company\": \"$Company\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Station_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"Company\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T2.Company, COUNT(*) FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Company_ID, T2.Company",
    "mongodb": "db.station_company.aggregate([{\"$lookup\": {\"from\": \"company\", \"localField\": \"Company_ID\", \"foreignField\": \"Company_ID\", \"as\": \"company\"}}, {\"$unwind\": \"$company\"}, {\"$group\": {\"_id\": {\"Company_ID\": \"$Company_ID\", \"Company\": \"$Company\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Company\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T2.AllergyType, COUNT(*) FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy GROUP BY T2.AllergyType;",
    "mongodb": "db.Has_Allergy.aggregate([{\"$lookup\": {\"from\": \"Allergy_Type\", \"localField\": \"Allergy\", \"foreignField\": \"Allergy\", \"as\": \"Allergy_Type\"}}, {\"$unwind\": \"$Allergy_Type\"}, {\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T2.AllergyType, COUNT(*) FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy GROUP BY T2.AllergyType;",
    "mongodb": "db.Has_Allergy.aggregate([{\"$lookup\": {\"from\": \"Allergy_Type\", \"localField\": \"Allergy\", \"foreignField\": \"Allergy\", \"as\": \"Allergy_Type\"}}, {\"$unwind\": \"$Allergy_Type\"}, {\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T2.AllergyType, COUNT(*) FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy GROUP BY T2.AllergyType",
    "mongodb": "db.Has_Allergy.aggregate([{\"$lookup\": {\"from\": \"Allergy_Type\", \"localField\": \"Allergy\", \"foreignField\": \"Allergy\", \"as\": \"Allergy_Type\"}}, {\"$unwind\": \"$Allergy_Type\"}, {\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType, COUNT(*) FROM Has_Allergy JOIN Allergy_Type ON Has_Allergy.Allergy = Allergy_Type.Allergy GROUP BY AllergyType",
    "mongodb": "db.Has_Allergy.aggregate([{\"$lookup\": {\"from\": \"Allergy_Type\", \"localField\": \"Allergy\", \"foreignField\": \"Allergy\", \"as\": \"Allergy_Type\"}}, {\"$unwind\": \"$Allergy_Type\"}, {\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T2.AllergyType, COUNT(*) FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy GROUP BY T2.AllergyType",
    "mongodb": "db.Has_Allergy.aggregate([{\"$lookup\": {\"from\": \"Allergy_Type\", \"localField\": \"Allergy\", \"foreignField\": \"Allergy\", \"as\": \"Allergy_Type\"}}, {\"$unwind\": \"$Allergy_Type\"}, {\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student WHERE Sex = \"M\"",
    "mongodb": "db.Student.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Sex\", \"foreignField\": \"M\"}}, {\"Major\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student WHERE Sex = 'M'",
    "mongodb": "db.Student.find({\"Sex\": \"M\"}, {\"Major\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student WHERE Sex = 'M'",
    "mongodb": "db.Student.find({\"Sex\": \"M\"}, {\"Major\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student WHERE Sex = \"M\"",
    "mongodb": "db.Student.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Sex\", \"foreignField\": \"M\"}}, {\"Major\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student WHERE Sex = \"M\"",
    "mongodb": "db.Student.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Sex\", \"foreignField\": \"M\"}}, {\"Major\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT complaint_status_code, COUNT(*) FROM Complaints WHERE complaint_type_code = \"Product Failure\" GROUP BY complaint_status_code;",
    "mongodb": "db.Complaints.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"complaint_type_code\", \"foreignField\": \"Product Failure\"}}}, {\"$group\": {\"_id\": {\"complaint_status_code\": \"$complaint_status_code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"complaint_status_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT complaint_status_code, COUNT(*) FROM Complaints WHERE complaint_type_code = \"Product Failure\" GROUP BY complaint_status_code;",
    "mongodb": "db.Complaints.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"complaint_type_code\", \"foreignField\": \"Product Failure\"}}}, {\"$group\": {\"_id\": {\"complaint_status_code\": \"$complaint_status_code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"complaint_status_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT complaint_status_code, count(*) FROM Complaints WHERE complaint_type_code = \"Product Failure\" GROUP BY complaint_status_code;",
    "mongodb": "db.Complaints.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"complaint_type_code\", \"foreignField\": \"Product Failure\"}}}, {\"$group\": {\"_id\": {\"complaint_status_code\": \"$complaint_status_code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"complaint_status_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT complaint_status_code, count(*) FROM Complaints WHERE complaint_type_code = \"Product Failure\" GROUP BY complaint_status_code;",
    "mongodb": "db.Complaints.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"complaint_type_code\", \"foreignField\": \"Product Failure\"}}}, {\"$group\": {\"_id\": {\"complaint_status_code\": \"$complaint_status_code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"complaint_status_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT complaint_status_code, count(*) FROM Complaints WHERE complaint_type_code = \"Product Failure\" GROUP BY complaint_status_code",
    "mongodb": "db.Complaints.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"complaint_type_code\", \"foreignField\": \"Product Failure\"}}}, {\"$group\": {\"_id\": {\"complaint_status_code\": \"$complaint_status_code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"complaint_status_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT max(Enrollment) FROM university",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT max(Enrollment) FROM university",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT MAX(Enrollment) FROM university",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT max(Enrollment) FROM university",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT max(Enrollment) FROM university",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain WHERE Height > 5000",
    "mongodb": "db.mountain.find({\"Height\": {\"$gt\": 5000}}, {\"Country\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain WHERE Height > 5000",
    "mongodb": "db.mountain.find({\"Height\": {\"$gt\": 5000}}, {\"Country\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain WHERE Height > 5000;",
    "mongodb": "db.mountain.find({\"Height\": {\"$gt\": 5000}}, {\"Country\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT DISTINCT Country FROM mountain WHERE Height > 5000",
    "mongodb": "db.mountain.distinct(\"Country\", {\"Height\": {\"$gt\": 5000}})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT DISTINCT Country FROM mountain WHERE Height > 5000",
    "mongodb": "db.mountain.distinct(\"Country\", {\"Height\": {\"$gt\": 5000}})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id WHERE t3.product_price = (SELECT MIN(product_price) FROM Products)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id WHERE t3.product_price = (SELECT MIN(product_price) FROM Products)', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name, COUNT(*) FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid, T2.name",
    "mongodb": "db.flight.aggregate([{\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"aid\", \"foreignField\": \"aid\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$group\": {\"_id\": {\"aid\": \"$aid\", \"name\": \"$name\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name, count(*) FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid, T2.name",
    "mongodb": "db.flight.aggregate([{\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"aid\", \"foreignField\": \"aid\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$group\": {\"_id\": {\"aid\": \"$aid\", \"name\": \"$name\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, COUNT(*) FROM aircraft JOIN flight ON aircraft.aid = flight.aid GROUP BY name",
    "mongodb": "db.aircraft.aggregate([{\"$lookup\": {\"from\": \"flight\", \"localField\": \"aid\", \"foreignField\": \"flight.aid\", \"as\": \"flight\"}}, {\"$unwind\": \"$flight\"}, {\"$group\": {\"_id\": {\"name\": \"$name\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name, COUNT(*) FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT T2.name, COUNT(*) FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid;', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name, count(*) FROM aircraft AS T1 JOIN flight AS T2 ON T1.aid = T2.aid GROUP BY T2.name",
    "mongodb": "db.aircraft.aggregate([{\"$lookup\": {\"from\": \"flight\", \"localField\": \"aid\", \"foreignField\": \"aid\", \"as\": \"flight\"}}, {\"$unwind\": \"$flight\"}, {\"$group\": {\"_id\": {\"name\": \"$name\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'\", 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_Date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Budget_Type_Code = 'GV' INTERSECT SELECT T1.Document_Date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Budget_Type_Code = 'SF'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT T1.Document_Date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Budget_Type_Code = 'GV' INTERSECT SELECT T1.Document_Date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Budget_Type_Code = 'SF'\", 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_Date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Budget_Type_Code = 'GV' INTERSECT SELECT T1.Document_Date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Budget_Type_Code = 'SF'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT T1.Document_Date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Budget_Type_Code = 'GV' INTERSECT SELECT T1.Document_Date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Budget_Type_Code = 'SF'\", 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'\", 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'\", 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Home_city FROM driver GROUP BY Home_city ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Home_city FROM driver GROUP BY Home_city ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Home_city FROM driver GROUP BY Home_city ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Home_city FROM driver GROUP BY Home_city ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT advisor, COUNT(*) FROM Student GROUP BY advisor",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Advisor\": \"$Advisor\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Advisor\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Advisor\": \"$Advisor\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Advisor\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T1.Fname, T1.LName, COUNT(T2.StuID) AS Total_Students FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.Advisor GROUP BY T1.Advisor, T1.Fname, T1.LName",
    "mongodb": "db.Student.aggregate([{\"$lookup\": {\"from\": \"Student\", \"localField\": \"Advisor\", \"foreignField\": \"Advisor\", \"as\": \"Student\"}}, {\"$unwind\": \"$Student\"}, {\"$group\": {\"_id\": {\"Advisor\": \"$Advisor\", \"Fname\": \"$Fname\", \"LName\": \"$LName\"}, \"Total_Students\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$StuID\", null]}, 1, 0]}}}}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Advisor\": \"$Advisor\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Advisor\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Advisor\": \"$Advisor\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Advisor\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.personal_name = \"Julio\"",
    "mongodb": "db.Course_Authors_and_Tutors.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"Julio\"}}}, {\"$lookup\": {\"from\": \"Courses\", \"localField\": \"author_id\", \"foreignField\": \"author_id\", \"as\": \"Courses\"}}, {\"$unwind\": \"$Courses\"}, {\"$project\": {\"course_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT Courses.course_name FROM Course_Authors_and_Tutors JOIN Courses ON Course_Authors_and_Tutors.author_id = Courses.author_id WHERE Course_Authors_and_Tutors.personal_name = \"Julio\"",
    "mongodb": "db.Course_Authors_and_Tutors.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"Julio\"}}}, {\"$lookup\": {\"from\": \"Courses\", \"localField\": \"author_id\", \"foreignField\": \"author_id\", \"as\": \"Courses\"}}, {\"$unwind\": \"$Courses\"}, {\"$project\": {\"course_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT Courses.course_name FROM Course_Authors_and_Tutors JOIN Courses ON Course_Authors_and_Tutors.author_id = Courses.author_id WHERE Course_Authors_and_Tutors.personal_name = \"Julio\"",
    "mongodb": "db.Course_Authors_and_Tutors.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"Julio\"}}}, {\"$lookup\": {\"from\": \"Courses\", \"localField\": \"author_id\", \"foreignField\": \"author_id\", \"as\": \"Courses\"}}, {\"$unwind\": \"$Courses\"}, {\"$project\": {\"course_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT course_name FROM Courses WHERE author_id IN (SELECT author_id FROM Course_Authors_and_Tutors WHERE personal_name = \"Julio\")",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT course_name FROM Courses WHERE author_id IN (SELECT author_id FROM Course_Authors_and_Tutors WHERE personal_name = \"Julio\")', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT C.course_name FROM Courses C JOIN Course_Authors_and_Tutors CAT ON C.author_id = CAT.author_id WHERE CAT.personal_name = \"Julio\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT C.course_name FROM Courses C JOIN Course_Authors_and_Tutors CAT ON C.author_id = CAT.author_id WHERE CAT.personal_name = \"Julio\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Character, Duration FROM actor",
    "mongodb": "db.actor.find({}, {\"Character\": 1, \"Duration\": 1, \"_id\": 0})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Character, Duration FROM actor",
    "mongodb": "db.actor.find({}, {\"Character\": 1, \"Duration\": 1, \"_id\": 0})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Character, Duration FROM actor",
    "mongodb": "db.actor.find({}, {\"Character\": 1, \"Duration\": 1, \"_id\": 0})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Character, Duration FROM actor",
    "mongodb": "db.actor.find({}, {\"Character\": 1, \"Duration\": 1, \"_id\": 0})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT T1.Character, T1.Duration FROM actor AS T1",
    "mongodb": "db.actor.find({}, {\"Character\": 1, \"Duration\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING COUNT(*) <= 3;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING COUNT(*) <= 3;', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING count(*) <= 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING count(*) <= 3', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT County FROM appellations WHERE Appelation IN (SELECT Appelation FROM wine GROUP BY Appelation HAVING count(DISTINCT Grape) <= 3)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT County FROM appellations WHERE Appelation IN (SELECT Appelation FROM wine GROUP BY Appelation HAVING count(DISTINCT Grape) <= 3)', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT County FROM appellations WHERE Appelation IN (SELECT Appelation FROM wine GROUP BY Appelation HAVING COUNT(*) <= 3)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT County FROM appellations WHERE Appelation IN (SELECT Appelation FROM wine GROUP BY Appelation HAVING COUNT(*) <= 3)', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT County FROM appellations JOIN wine ON appellations.Appelation = wine.Appelation GROUP BY appellations.Appelation, appellations.County HAVING COUNT(DISTINCT wine.No) <= 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT County FROM appellations JOIN wine ON appellations.Appelation = wine.Appelation GROUP BY appellations.Appelation, appellations.County HAVING COUNT(DISTINCT wine.No) <= 3', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employees.first_name, departments.department_name FROM employees JOIN departments ON employees.department_id = departments.department_id;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"employees.DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$project\": {\"employees.FIRST_NAME\": 1, \"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employees.first_name, departments.department_name FROM employees JOIN departments ON employees.department_id = departments.department_id;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"employees.DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$project\": {\"employees.FIRST_NAME\": 1, \"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT e.FIRST_NAME, d.DEPARTMENT_NAME FROM employees e JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$project\": {\"FIRST_NAME\": 1, \"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT e.first_name, d.department_name FROM employees e JOIN departments d ON e.department_id = d.department_id;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$project\": {\"first_name\": 1, \"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employees.first_name, departments.department_name FROM employees JOIN departments ON employees.department_id = departments.department_id;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"employees.DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$project\": {\"employees.FIRST_NAME\": 1, \"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT sum(Enrollment) as Total_Enrollment, min(Enrollment) as Min_Enrollment FROM university",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": null, \"Total_Enrollment\": {\"$sum\": \"$Enrollment\"}, \"Min_Enrollment\": {\"$min\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT sum(enrollment) , min(enrollment) FROM university",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$sum\": \"$Enrollment\"}, \"Expr1\": {\"$min\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT sum(Enrollment) , min(Enrollment) FROM university",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$sum\": \"$Enrollment\"}, \"Expr1\": {\"$min\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School, sum(Enrollment) as Total_Enrollment, min(Enrollment) as Min_Enrollment FROM university GROUP BY School",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": {\"School\": \"$School\"}, \"Total_Enrollment\": {\"$sum\": \"$Enrollment\"}, \"Min_Enrollment\": {\"$min\": \"$Enrollment\"}}}, {\"$project\": {\"School\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT sum(Enrollment), min(Enrollment) FROM university",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$sum\": \"$Enrollment\"}, \"Expr1\": {\"$min\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid WHERE T1.name = \"John Williams\"",
    "mongodb": "db.employee.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"name\", \"foreignField\": \"John Williams\"}}}, {\"$lookup\": {\"from\": \"certificate\", \"localField\": \"eid\", \"foreignField\": \"eid\", \"as\": \"certificate\"}}, {\"$unwind\": \"$certificate\"}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = \"John Williams\"",
    "mongodb": "db.employee.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"name\", \"foreignField\": \"John Williams\"}}}, {\"$lookup\": {\"from\": \"Certificate\", \"localField\": \"eid\", \"foreignField\": \"eid\", \"as\": \"Certificate\"}}, {\"$unwind\": \"$Certificate\"}, {\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"aid\", \"foreignField\": \"aid\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT a.name FROM aircraft a JOIN certificate c ON a.aid = c.aid JOIN employee e ON c.eid = e.eid WHERE e.name = \"John Williams\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT a.name FROM aircraft a JOIN certificate c ON a.aid = c.aid JOIN employee e ON c.eid = e.eid WHERE e.name = \"John Williams\"', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name FROM aircraft AS T2 JOIN certificate AS T1 ON T2.aid = T1.aid JOIN employee AS T3 ON T1.eid = T3.eid WHERE T3.name = 'John Williams'",
    "mongodb": "db.aircraft.aggregate([{\"$match\": {\"name\": \"John Williams\"}}, {\"$lookup\": {\"from\": \"certificate\", \"localField\": \"aid\", \"foreignField\": \"aid\", \"as\": \"certificate\"}}, {\"$unwind\": \"$certificate\"}, {\"$lookup\": {\"from\": \"employee\", \"localField\": \"eid\", \"foreignField\": \"eid\", \"as\": \"employee\"}}, {\"$unwind\": \"$employee\"}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid WHERE T1.name = 'John Williams'",
    "mongodb": "db.employee.aggregate([{\"$match\": {\"name\": \"John Williams\"}}, {\"$lookup\": {\"from\": \"certificate\", \"localField\": \"eid\", \"foreignField\": \"eid\", \"as\": \"certificate\"}}, {\"$unwind\": \"$certificate\"}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT avg(j.Sales) FROM journal j JOIN journal_committee jc ON j.Journal_ID = jc.Journal_ID JOIN editor e ON jc.Editor_ID = e.Editor_ID WHERE jc.Work_Type = 'Photo'",
    "mongodb": "db.journal.aggregate([{\"$match\": {\"Work_Type\": \"Photo\"}}, {\"$lookup\": {\"from\": \"journal_committee\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal_committee\"}}, {\"$unwind\": \"$journal_committee\"}, {\"$lookup\": {\"from\": \"editor\", \"localField\": \"Editor_ID\", \"foreignField\": \"Editor_ID\", \"as\": \"editor\"}}, {\"$unwind\": \"$editor\"}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Sales\"}}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT avg(Sales) FROM journal WHERE Journal_ID IN (SELECT Journal_ID FROM journal_committee WHERE Editor_ID IN (SELECT Editor_ID FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee WHERE Work_Type = 'Photo')))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': \"SELECT avg(Sales) FROM journal WHERE Journal_ID IN (SELECT Journal_ID FROM journal_committee WHERE Editor_ID IN (SELECT Editor_ID FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee WHERE Work_Type = 'Photo')))\", 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT avg(Sales) FROM journal_committee AS jc JOIN journal AS j ON jc.Journal_ID = j.Journal_ID WHERE jc.Work_Type = 'Photo'",
    "mongodb": "db.journal_committee.aggregate([{\"$match\": {\"Work_Type\": \"Photo\"}}, {\"$lookup\": {\"from\": \"journal\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal\"}}, {\"$unwind\": \"$journal\"}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Sales\"}}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT avg(Sales) FROM journal AS J JOIN journal_committee AS JC ON J.Journal_ID = JC.Journal_ID JOIN editor AS E ON JC.Editor_ID = E.Editor_ID WHERE JC.Work_Type = 'Photo'",
    "mongodb": "db.journal.aggregate([{\"$match\": {\"Work_Type\": \"Photo\"}}, {\"$lookup\": {\"from\": \"journal_committee\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal_committee\"}}, {\"$unwind\": \"$journal_committee\"}, {\"$lookup\": {\"from\": \"editor\", \"localField\": \"Editor_ID\", \"foreignField\": \"Editor_ID\", \"as\": \"editor\"}}, {\"$unwind\": \"$editor\"}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Sales\"}}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT avg(j.Sales) FROM journal j JOIN journal_committee jc ON j.Journal_ID = jc.Journal_ID JOIN editor e ON jc.Editor_ID = e.Editor_ID WHERE e.Work_Type = 'Photo'",
    "mongodb": "db.journal.aggregate([{\"$match\": {\"Work_Type\": \"Photo\"}}, {\"$lookup\": {\"from\": \"journal_committee\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal_committee\"}}, {\"$unwind\": \"$journal_committee\"}, {\"$lookup\": {\"from\": \"editor\", \"localField\": \"Editor_ID\", \"foreignField\": \"Editor_ID\", \"as\": \"editor\"}}, {\"$unwind\": \"$editor\"}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Sales\"}}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Range, COUNT(*) AS Peak_Count FROM mountain GROUP BY Range ORDER BY Peak_Count DESC LIMIT 1",
    "mongodb": "db.mountain.aggregate([{\"$group\": {\"_id\": {\"Range\": \"$Range\"}, \"Peak_Count\": {\"$sum\": 1}}}, {\"$sort\": {\"Peak_Count\": -1}}, {\"$limit\": 1}, {\"$project\": {\"Range\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Range FROM mountain GROUP BY Range ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Range FROM mountain GROUP BY Range ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25",
    "mongodb": "db.editor.find({\"$or\": [{\"Age\": 24}, {\"Age\": 25}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25",
    "mongodb": "db.editor.find({\"$or\": [{\"Age\": 24}, {\"Age\": 25}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25",
    "mongodb": "db.editor.find({\"$or\": [{\"Age\": 24}, {\"Age\": 25}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25",
    "mongodb": "db.editor.find({\"$or\": [{\"Age\": 24}, {\"Age\": 25}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25",
    "mongodb": "db.editor.find({\"$or\": [{\"Age\": 24}, {\"Age\": 25}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': 'SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain)', 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': 'SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain)', 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM captain)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM captain)', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': 'SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain)', 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Type FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': 'SELECT Name, Type FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain)', 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT max(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast') AND Year < 2005",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT max(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast') AND Year < 2005\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT max(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast') AND Year < 2005;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT max(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast') AND Year < 2005;\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT max(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast') AND Year < 2005",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT max(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast') AND Year < 2005\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT MAX(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast') AND Year < 2005;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT MAX(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast') AND Year < 2005;\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT MAX(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = \"Central Coast\") AND Year < 2005",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT MAX(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = \"Central Coast\") AND Year < 2005', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Grape FROM grapes WHERE Color = 'White' AND Grape IN (SELECT Grape FROM wine WHERE Score > 90)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT DISTINCT Grape FROM grapes WHERE Color = 'White' AND Grape IN (SELECT Grape FROM wine WHERE Score > 90)\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Grape FROM grapes JOIN wine ON grapes.Grape = wine.Grape WHERE grapes.Color = \"White\" AND wine.Score > 90",
    "mongodb": "db.grapes.aggregate([{\"$match\": {\"wine.Score\": {\"$gt\": 90}, \"$lookup\": {\"from\": \"\", \"localField\": \"Color\", \"foreignField\": \"White\"}}}, {\"$lookup\": {\"from\": \"wine\", \"localField\": \"Grape\", \"foreignField\": \"wine.Grape\", \"as\": \"wine\"}}, {\"$unwind\": \"$wine\"}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.Grape FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape WHERE T2.Score > 90 AND T1.Color = \"White\"",
    "mongodb": "db.grapes.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Color\", \"foreignField\": \"White\"}, \"Score\": {\"$gt\": 90}}}, {\"$lookup\": {\"from\": \"wine\", \"localField\": \"Grape\", \"foreignField\": \"Grape\", \"as\": \"wine\"}}, {\"$unwind\": \"$wine\"}, {\"$project\": {\"Grape\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = \"White\" AND T2.Score > 90",
    "mongodb": "db.grapes.aggregate([{\"$match\": {\"Score\": {\"$gt\": 90}, \"$lookup\": {\"from\": \"\", \"localField\": \"Color\", \"foreignField\": \"White\"}}}, {\"$lookup\": {\"from\": \"WINE\", \"localField\": \"Grape\", \"foreignField\": \"Grape\", \"as\": \"WINE\"}}, {\"$unwind\": \"$WINE\"}, {\"$project\": {\"Grape\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape FROM grapes WHERE Color = \"White\" AND Grape IN (SELECT Grape FROM wine WHERE Score > 90)",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"White\" | body={'db': 'wine_1', 'sql': 'SELECT Grape FROM grapes WHERE Color = \"White\" AND Grape IN (SELECT Grape FROM wine WHERE Score > 90)', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"White\"'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE distance > 2000;",
    "mongodb": "db.flight.find({\"distance\": {\"$gt\": 2000}}, {\"flno\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE distance > 2000",
    "mongodb": "db.flight.find({\"distance\": {\"$gt\": 2000}}, {\"flno\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE distance > 2000",
    "mongodb": "db.flight.find({\"distance\": {\"$gt\": 2000}}, {\"flno\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE distance > 2000",
    "mongodb": "db.flight.find({\"distance\": {\"$gt\": 2000}}, {\"flno\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE distance > 2000",
    "mongodb": "db.flight.find({\"distance\": {\"$gt\": 2000}}, {\"flno\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT first_name, last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT first_name, last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT first_name, last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS full_name FROM employees WHERE SALARY > (SELECT SALARY FROM employees WHERE EMPLOYEE_ID = 163)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS full_name FROM employees WHERE SALARY > (SELECT SALARY FROM employees WHERE EMPLOYEE_ID = 163)\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS Employee_Name FROM employees WHERE SALARY > (SELECT SALARY FROM employees WHERE EMPLOYEE_ID = 163)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS Employee_Name FROM employees WHERE SALARY > (SELECT SALARY FROM employees WHERE EMPLOYEE_ID = 163)\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Team ASC;",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Team\": 1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Player, Team FROM player ORDER BY Team ASC",
    "mongodb": "db.player.find({}, {\"Player\": 1, \"Team\": 1, \"_id\": 0}).sort( {\"Team\": 1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Team ASC",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Team\": 1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Team ASC",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Team\": 1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Team ASC",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Team\": 1} )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
    "mongodb": "db.mountain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Height\": -1} ).limit( 1 )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
    "mongodb": "db.mountain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Height\": -1} ).limit( 1 )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
    "mongodb": "db.mountain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Height\": -1} ).limit( 1 )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
    "mongodb": "db.mountain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Height\": -1} ).limit( 1 )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
    "mongodb": "db.mountain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Height\": -1} ).limit( 1 )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'North Coast')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'North Coast')\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'North Coast');",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'North Coast');\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'North Coast')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'North Coast')\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = \"North Coast\")",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = \"North Coast\")', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'North Coast')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'North Coast')\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment;",
    "mongodb": "db.Student_Course_Enrolment.find({}, {\"date_of_enrolment\": 1, \"date_of_completion\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment",
    "mongodb": "db.Student_Course_Enrolment.find({}, {\"date_of_enrolment\": 1, \"date_of_completion\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment",
    "mongodb": "db.Student_Course_Enrolment.find({}, {\"date_of_enrolment\": 1, \"date_of_completion\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment",
    "mongodb": "db.Student_Course_Enrolment.find({}, {\"date_of_enrolment\": 1, \"date_of_completion\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment;",
    "mongodb": "db.Student_Course_Enrolment.find({}, {\"date_of_enrolment\": 1, \"date_of_completion\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student ORDER BY Age DESC;",
    "mongodb": "db.Student.find({}, {\"Fname\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student ORDER BY Age DESC",
    "mongodb": "db.Student.find({}, {\"Fname\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student ORDER BY Age DESC",
    "mongodb": "db.Student.find({}, {\"Fname\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student ORDER BY Age DESC",
    "mongodb": "db.Student.find({}, {\"Fname\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student ORDER BY Age DESC",
    "mongodb": "db.Student.find({}, {\"Fname\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T2.department_name , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$group\": {\"_id\": {\"DEPARTMENT_NAME\": \"$DEPARTMENT_NAME\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT department_name, COUNT(*) FROM employees AS e JOIN departments AS d ON e.department_id = d.department_id GROUP BY department_name;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$group\": {\"_id\": {\"DEPARTMENT_NAME\": \"$DEPARTMENT_NAME\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T2.DEPARTMENT_NAME, COUNT(T1.EMPLOYEE_ID) FROM EMPLOYEES AS T1 JOIN DEPARTMENTS AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T2.DEPARTMENT_NAME;",
    "mongodb": "db.EMPLOYEES.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$group\": {\"_id\": {\"DEPARTMENT_NAME\": \"$DEPARTMENT_NAME\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$EMPLOYEE_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T2.DEPARTMENT_NAME, COUNT(T1.EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T1.DEPARTMENT_ID;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT T2.DEPARTMENT_NAME, COUNT(T1.EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T1.DEPARTMENT_ID;', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T2.DEPARTMENT_NAME, COUNT(*) FROM EMPLOYEES AS T1 JOIN DEPARTMENTS AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T2.DEPARTMENT_NAME",
    "mongodb": "db.EMPLOYEES.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$group\": {\"_id\": {\"DEPARTMENT_NAME\": \"$DEPARTMENT_NAME\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Color FROM grapes WHERE Grape IN ( SELECT Grape FROM wine GROUP BY Grape HAVING AVG(Price) = ( SELECT MAX(avg_price) FROM ( SELECT AVG(Price) as avg_price FROM wine GROUP BY Grape ) ) )",
    "mongodb": "ERROR: HTTP 500 | body={'mongo': \"ERROR: Invalid control character '\\\\n' at: line 1 column 347 (char 346)\"}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM employee WHERE salary BETWEEN 100000 AND 200000",
    "mongodb": "db.employee.find({\"$and\": [{\"salary\": {\"$gte\": 100000}}, {\"salary\": {\"$lte\": 200000}}]}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM employee WHERE salary BETWEEN 100000 AND 200000",
    "mongodb": "db.employee.find({\"$and\": [{\"salary\": {\"$gte\": 100000}}, {\"salary\": {\"$lte\": 200000}}]}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT COUNT(*) FROM employee WHERE salary BETWEEN 100000 AND 200000",
    "mongodb": "db.employee.find({\"$and\": [{\"salary\": {\"$gte\": 100000}}, {\"salary\": {\"$lte\": 200000}}]}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM employee WHERE salary BETWEEN 100000 AND 200000",
    "mongodb": "db.employee.find({\"$and\": [{\"salary\": {\"$gte\": 100000}}, {\"salary\": {\"$lte\": 200000}}]}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM employee WHERE salary BETWEEN 100000 AND 200000",
    "mongodb": "db.employee.find({\"$and\": [{\"salary\": {\"$gte\": 100000}}, {\"salary\": {\"$lte\": 200000}}]}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"",
    "mongodb": "db.Students.find({\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"%son%\"}}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"",
    "mongodb": "db.Students.find({\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"%son%\"}}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"",
    "mongodb": "db.Students.find({\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"%son%\"}}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"",
    "mongodb": "db.Students.find({\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"%son%\"}}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"",
    "mongodb": "db.Students.find({\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"%son%\"}}, {}).count()"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT T1.last_name FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id ORDER BY T2.date_complaint_raised LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT T1.last_name FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id ORDER BY T2.date_complaint_raised LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT T1.last_name FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id ORDER BY T2.date_complaint_raised ASC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT T1.last_name FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id ORDER BY T2.date_complaint_raised ASC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised ASC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: complaints | body={'db': 'customer_complaints', 'sql': 'SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised ASC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: complaints'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, COUNT(*) FROM Documents GROUP BY Document_Type_Code",
    "mongodb": "db.Documents.aggregate([{\"$group\": {\"_id\": {\"Document_Type_Code\": \"$Document_Type_Code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Document_Type_Code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, COUNT(*) FROM Documents GROUP BY Document_Type_Code",
    "mongodb": "db.Documents.aggregate([{\"$group\": {\"_id\": {\"Document_Type_Code\": \"$Document_Type_Code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Document_Type_Code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, COUNT(*) FROM Documents GROUP BY Document_Type_Code",
    "mongodb": "db.Documents.aggregate([{\"$group\": {\"_id\": {\"Document_Type_Code\": \"$Document_Type_Code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Document_Type_Code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, COUNT(*) FROM Documents GROUP BY Document_Type_Code",
    "mongodb": "db.Documents.aggregate([{\"$group\": {\"_id\": {\"Document_Type_Code\": \"$Document_Type_Code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Document_Type_Code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, COUNT(*) FROM Documents GROUP BY Document_Type_Code",
    "mongodb": "db.Documents.aggregate([{\"$group\": {\"_id\": {\"Document_Type_Code\": \"$Document_Type_Code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Document_Type_Code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) > 1",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) > 1",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Capacity > 300 AND Location IN (SELECT Location FROM cinema GROUP BY Location HAVING COUNT(*) > 1)",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING count(*) >= 2;",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) > 1;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport';",
    "mongodb": "db.airports.aggregate([{\"$match\": {\"name\": \"John F Kennedy International Airport\"}}, {\"$lookup\": {\"from\": \"routes\", \"localField\": \"apid\", \"foreignField\": \"dst_apid\", \"as\": \"routes\"}}, {\"$unwind\": \"$routes\"}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport';",
    "mongodb": "db.airports.aggregate([{\"$match\": {\"name\": \"John F Kennedy International Airport\"}}, {\"$lookup\": {\"from\": \"routes\", \"localField\": \"apid\", \"foreignField\": \"dst_apid\", \"as\": \"routes\"}}, {\"$unwind\": \"$routes\"}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes WHERE dst_ap = 'JFK'",
    "mongodb": "db.routes.find({\"dst_ap\": \"JFK\"}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes JOIN airports ON routes.dst_apid = airports.apid WHERE airports.name = 'John F Kennedy International Airport';",
    "mongodb": "db.routes.aggregate([{\"$match\": {\"name\": \"John F Kennedy International Airport\"}}, {\"$lookup\": {\"from\": \"airports\", \"localField\": \"dst_apid\", \"foreignField\": \"apid\", \"as\": \"airports\"}}, {\"$unwind\": \"$airports\"}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes WHERE dst_ap = 'JFK'",
    "mongodb": "db.routes.find({\"dst_ap\": \"JFK\"}, {}).count()"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT count(*) FROM VOTES WHERE state = 'NY' OR state = 'CA'",
    "mongodb": "db.VOTES.find({\"$or\": [{\"state\": \"NY\"}, {\"state\": \"CA\"}]}, {}).count()"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');",
    "mongodb": "db.VOTES.find({\"state\": {\"$in\": [\"NY\", \"CA\"]}}, {}).count()"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT count(*) FROM VOTES WHERE state IN ('NY', 'CA')",
    "mongodb": "db.VOTES.find({\"state\": {\"$in\": [\"NY\", \"CA\"]}}, {}).count()"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT count(*) FROM VOTES WHERE state IN ('NY', 'CA')",
    "mongodb": "db.VOTES.find({\"state\": {\"$in\": [\"NY\", \"CA\"]}}, {}).count()"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name, COUNT(*) AS vote_tally FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state WHERE AREA_CODE_STATE.state IN ('NY', 'CA') GROUP BY contestant_name;",
    "mongodb": "db.VOTES.aggregate([{\"$match\": {\"state\": {\"$in\": [\"NY\", \"CA\"]}}}, {\"$lookup\": {\"from\": \"CONTESTANTS\", \"localField\": \"contestant_number\", \"foreignField\": \"contestant_number\", \"as\": \"CONTESTANTS\"}}, {\"$unwind\": \"$CONTESTANTS\"}, {\"$lookup\": {\"from\": \"AREA_CODE_STATE\", \"localField\": \"state\", \"foreignField\": \"state\", \"as\": \"AREA_CODE_STATE\"}}, {\"$unwind\": \"$AREA_CODE_STATE\"}, {\"$group\": {\"_id\": {\"contestant_name\": \"$contestant_name\"}, \"vote_tally\": {\"$sum\": 1}}}, {\"$project\": {\"contestant_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT avg(capacity) , min(capacity) , max(capacity) FROM cinema WHERE openning_year >= 2011",
    "mongodb": "db.cinema.aggregate([{\"$match\": {\"Openning_year\": {\"$gte\": 2011}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Capacity\"}, \"Expr1\": {\"$min\": \"$Capacity\"}, \"Expr2\": {\"$max\": \"$Capacity\"}}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT avg(capacity), min(capacity), max(capacity) FROM cinema WHERE Openning_year >= 2011",
    "mongodb": "db.cinema.aggregate([{\"$match\": {\"Openning_year\": {\"$gte\": 2011}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Capacity\"}, \"Expr1\": {\"$min\": \"$Capacity\"}, \"Expr2\": {\"$max\": \"$Capacity\"}}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT avg(capacity), min(capacity), max(capacity) FROM cinema WHERE Openning_year >= 2011",
    "mongodb": "db.cinema.aggregate([{\"$match\": {\"Openning_year\": {\"$gte\": 2011}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Capacity\"}, \"Expr1\": {\"$min\": \"$Capacity\"}, \"Expr2\": {\"$max\": \"$Capacity\"}}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT avg(capacity) , min(capacity) , max(capacity) FROM cinema WHERE Openning_year >= 2011",
    "mongodb": "db.cinema.aggregate([{\"$match\": {\"Openning_year\": {\"$gte\": 2011}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Capacity\"}, \"Expr1\": {\"$min\": \"$Capacity\"}, \"Expr2\": {\"$max\": \"$Capacity\"}}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT avg(capacity), min(capacity), max(capacity) FROM cinema WHERE Openning_year >= 2011",
    "mongodb": "db.cinema.aggregate([{\"$match\": {\"Openning_year\": {\"$gte\": 2011}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Capacity\"}, \"Expr1\": {\"$min\": \"$Capacity\"}, \"Expr2\": {\"$max\": \"$Capacity\"}}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
    "mongodb": "db.employees.find({\"hire_date\": {\"$lt\": {\"$date\": \"2002-06-21T07:00:00Z\"}}}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
    "mongodb": "db.employees.find({\"hire_date\": {\"$lt\": {\"$date\": \"2002-06-21T07:00:00Z\"}}}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE HIRE_DATE < '2002-06-21'",
    "mongodb": "db.employees.find({\"HIRE_DATE\": {\"$lt\": {\"$date\": \"2002-06-21T07:00:00Z\"}}}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE hire_date < '2002-06-21'",
    "mongodb": "db.employees.find({\"hire_date\": {\"$lt\": {\"$date\": \"2002-06-21T07:00:00Z\"}}}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE HIRE_DATE < '2002-06-21';",
    "mongodb": "db.employees.find({\"HIRE_DATE\": {\"$lt\": {\"$date\": \"2002-06-21T07:00:00Z\"}}}, {})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT document_id FROM Documents WHERE document_id NOT IN (SELECT document_id FROM Documents_with_expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT document_id FROM Documents WHERE document_id NOT IN (SELECT document_id FROM Documents_with_expenses)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_ID FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_ID FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT document_id FROM Documents WHERE document_id NOT IN (SELECT document_id FROM Documents_with_Expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT document_id FROM Documents WHERE document_id NOT IN (SELECT document_id FROM Documents_with_Expenses)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_ID FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver WHERE Home_city = 'Hartford' AND Age < 40;",
    "mongodb": "db.driver.find({\"Age\": {\"$lt\": 40}, \"Home_city\": \"Hartford\"}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver WHERE Home_city = 'Hartford' AND Age < 40",
    "mongodb": "db.driver.find({\"Age\": {\"$lt\": 40}, \"Home_city\": \"Hartford\"}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver WHERE Home_city = 'Hartford' AND Age < 40",
    "mongodb": "db.driver.find({\"Age\": {\"$lt\": 40}, \"Home_city\": \"Hartford\"}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver WHERE Age < 40 AND Home_city = 'Hartford'",
    "mongodb": "db.driver.find({\"Home_city\": \"Hartford\", \"Age\": {\"$lt\": 40}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver WHERE Age < 40 AND Home_city = \"Hartford\"",
    "mongodb": "db.driver.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Home_city\", \"foreignField\": \"Hartford\"}, \"Age\": {\"$lt\": 40}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Year = 2008;",
    "mongodb": "db.wine.find({\"Year\": 2008}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Year = 2008",
    "mongodb": "db.wine.find({\"Year\": 2008}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Year = 2008;",
    "mongodb": "db.wine.find({\"Year\": 2008}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Year = 2008",
    "mongodb": "db.wine.find({\"Year\": 2008}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Year = 2008",
    "mongodb": "db.wine.find({\"Year\": 2008}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM aircraft WHERE distance BETWEEN 1000 AND 5000",
    "mongodb": "db.aircraft.find({\"$and\": [{\"distance\": {\"$gte\": 1000}}, {\"distance\": {\"$lte\": 5000}}]}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM aircraft WHERE distance BETWEEN 1000 AND 5000",
    "mongodb": "db.aircraft.find({\"$and\": [{\"distance\": {\"$gte\": 1000}}, {\"distance\": {\"$lte\": 5000}}]}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM aircraft WHERE distance BETWEEN 1000 AND 5000",
    "mongodb": "db.aircraft.find({\"$and\": [{\"distance\": {\"$gte\": 1000}}, {\"distance\": {\"$lte\": 5000}}]}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM aircraft WHERE distance BETWEEN 1000 AND 5000",
    "mongodb": "db.aircraft.find({\"$and\": [{\"distance\": {\"$gte\": 1000}}, {\"distance\": {\"$lte\": 5000}}]}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM aircraft WHERE distance BETWEEN 1000 AND 5000",
    "mongodb": "db.aircraft.find({\"$and\": [{\"distance\": {\"$gte\": 1000}}, {\"distance\": {\"$lte\": 5000}}]}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee ORDER BY salary LIMIT 3;",
    "mongodb": "db.employee.find({}, {\"name\": 1, \"_id\": 0}).sort( {\"salary\": 1} ).limit( 3 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee ORDER BY salary ASC LIMIT 3",
    "mongodb": "db.employee.find({}, {\"name\": 1, \"_id\": 0}).sort( {\"salary\": 1} ).limit( 3 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee ORDER BY salary LIMIT 3",
    "mongodb": "db.employee.find({}, {\"name\": 1, \"_id\": 0}).sort( {\"salary\": 1} ).limit( 3 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee ORDER BY salary ASC LIMIT 3",
    "mongodb": "db.employee.find({}, {\"name\": 1, \"_id\": 0}).sort( {\"salary\": 1} ).limit( 3 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee ORDER BY salary LIMIT 3",
    "mongodb": "db.employee.find({}, {\"name\": 1, \"_id\": 0}).sort( {\"salary\": 1} ).limit( 3 )"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Rank FROM captain WHERE Class = 'Cutter' INTERSECT SELECT Rank FROM captain WHERE Class = 'Armed schooner'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': \"SELECT Rank FROM captain WHERE Class = 'Cutter' INTERSECT SELECT Rank FROM captain WHERE Class = 'Armed schooner'\", 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Rank FROM captain WHERE Class = 'Cutter' INTERSECT SELECT Rank FROM captain WHERE Class = 'Armed schooner'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': \"SELECT Rank FROM captain WHERE Class = 'Cutter' INTERSECT SELECT Rank FROM captain WHERE Class = 'Armed schooner'\", 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT T1.Rank FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Type = 'Cutter' INTERSECT SELECT T1.Rank FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Type = 'Armed schooner'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': \"SELECT T1.Rank FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Type = 'Cutter' INTERSECT SELECT T1.Rank FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Type = 'Armed schooner'\", 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Rank FROM captain WHERE Class = \"Cutter\" OR Class = \"Armed schooner\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Rank FROM captain WHERE Class = \"Cutter\" OR Class = \"Armed schooner\"', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT T1.Rank FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Type = \"Cutter\" INTERSECT SELECT T1.Rank FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Type = \"Armed schooner\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT T1.Rank FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Type = \"Cutter\" INTERSECT SELECT T1.Rank FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Type = \"Armed schooner\"', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE (Division = \"AS\" OR Division = \"EN\") AND Building = \"NEB\"",
    "mongodb": "db.Department.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Building\", \"foreignField\": \"NEB\"}, \"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"Division\", \"foreignField\": \"AS\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"Division\", \"foreignField\": \"EN\"}}]}, {\"DName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE Division = \"AS\" UNION SELECT DName FROM Department WHERE Division = \"EN\" AND Building = \"NEB\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"AS\" | body={'db': 'college_3', 'sql': 'SELECT DName FROM Department WHERE Division = \"AS\" UNION SELECT DName FROM Department WHERE Division = \"EN\" AND Building = \"NEB\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"AS\"'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE (Division = 'AS' OR Division = 'EN') AND Building = 'NEB'",
    "mongodb": "db.Department.find({\"Building\": \"NEB\", \"$or\": [{\"Division\": \"AS\"}, {\"Division\": \"EN\"}]}, {\"DName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE Division = 'AS' OR (Division = 'EN' AND Building = 'NEB')",
    "mongodb": "db.Department.find({\"$or\": [{\"Division\": \"AS\"}, {\"$and\": [{\"Division\": \"EN\"}, {\"Building\": \"NEB\"}]}]}, {\"DName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName FROM Department WHERE Division = \"AS\" OR (Division = \"EN\" AND Building = \"NEB\")",
    "mongodb": "db.Department.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"Division\", \"foreignField\": \"AS\"}}, {\"$and\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"Division\", \"foreignField\": \"EN\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"Building\", \"foreignField\": \"NEB\"}}]}]}, {\"DName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT min(Market_Value), max(Market_Value), avg(Market_Value) FROM company",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$Market_Value\"}, \"Expr1\": {\"$max\": \"$Market_Value\"}, \"Expr2\": {\"$avg\": \"$Market_Value\"}}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, min(Market_Value), max(Market_Value), avg(Market_Value) FROM company GROUP BY Company",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": {\"Company\": \"$Company\"}, \"Expr1\": {\"$min\": \"$Market_Value\"}, \"Expr2\": {\"$max\": \"$Market_Value\"}, \"Expr3\": {\"$avg\": \"$Market_Value\"}}}, {\"$project\": {\"Company\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT MIN(Market_Value), MAX(Market_Value), AVG(Market_Value) FROM company",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$Market_Value\"}, \"Expr1\": {\"$max\": \"$Market_Value\"}, \"Expr2\": {\"$avg\": \"$Market_Value\"}}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT min(Market_Value) , max(Market_Value) , avg(Market_Value) FROM company",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$Market_Value\"}, \"Expr1\": {\"$max\": \"$Market_Value\"}, \"Expr2\": {\"$avg\": \"$Market_Value\"}}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, min(Market_Value), max(Market_Value), avg(Market_Value) FROM company GROUP BY Company",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": {\"Company\": \"$Company\"}, \"Expr1\": {\"$min\": \"$Market_Value\"}, \"Expr2\": {\"$max\": \"$Market_Value\"}, \"Expr3\": {\"$avg\": \"$Market_Value\"}}}, {\"$project\": {\"Company\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Days = \"MTW\"",
    "mongodb": "db.Course.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Days\", \"foreignField\": \"MTW\"}}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Days = \"MTW\"",
    "mongodb": "db.Course.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Days\", \"foreignField\": \"MTW\"}}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Days IN ('Mon', 'Tue', 'Wed');",
    "mongodb": "db.Course.find({\"Days\": {\"$in\": [\"Mon\", \"Tue\", \"Wed\"]}}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Days = \"MTW\"",
    "mongodb": "db.Course.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Days\", \"foreignField\": \"MTW\"}}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Days IN ('Mon', 'Tue', 'Wed')",
    "mongodb": "db.Course.find({\"Days\": {\"$in\": [\"Mon\", \"Tue\", \"Wed\"]}}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(*) < 3;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(*) < 3;', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(*) < 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(*) < 3', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(Document_ID) < 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(Document_ID) < 3', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(*) < 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(*) < 3', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(Document_ID) < 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(Document_ID) < 3', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Starting_Year FROM technician WHERE Team = \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team = \"CWS\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"CLE\" | body={'db': 'machine_repair', 'sql': 'SELECT Starting_Year FROM technician WHERE Team = \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team = \"CWS\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"CLE\"'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Starting_Year FROM technician WHERE Team = \"CLE\" OR Team = \"CWS\"",
    "mongodb": "db.technician.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"CLE\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"CWS\"}}]}, {\"Starting_Year\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Starting_Year FROM technician WHERE Team = \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team = \"CWS\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"CLE\" | body={'db': 'machine_repair', 'sql': 'SELECT Starting_Year FROM technician WHERE Team = \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team = \"CWS\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"CLE\"'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Starting_Year FROM technician WHERE Team = 'CLE' INTERSECT SELECT Starting_Year FROM technician WHERE Team = 'CWS'",
    "mongodb": ""
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Starting_Year FROM technician WHERE Team = \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team = \"CWS\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"CLE\" | body={'db': 'machine_repair', 'sql': 'SELECT Starting_Year FROM technician WHERE Team = \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team = \"CWS\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"CLE\"'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT company, main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT company, main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT company, main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT company, main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Main_Industry FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT Company, Main_Industry FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company)', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Main_Industry FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT Company, Main_Industry FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company)', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Main_Industry FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT Company, Main_Industry FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company)', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city FROM airports GROUP BY city HAVING count(*) > 2 ORDER BY count(*)",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city FROM airports GROUP BY city HAVING count(*) > 2 ORDER BY count(*)",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city, COUNT(*) AS num_airports FROM airports GROUP BY city HAVING COUNT(*) > 2 ORDER BY num_airports DESC;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city, COUNT(*) AS airport_count FROM airports GROUP BY city HAVING COUNT(*) > 2 ORDER BY airport_count;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city, COUNT(*) AS total_airports FROM airports GROUP BY city HAVING COUNT(*) > 2 ORDER BY total_airports;",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(DISTINCT Advisor) FROM Student",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM advisor",
    "mongodb": "db.advisor.find({}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT COUNT(DISTINCT Advisor) FROM Student",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT COUNT(DISTINCT Advisor) FROM Student",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(DISTINCT Advisor) FROM Student",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country FROM airports ORDER BY elevation LIMIT 1;",
    "mongodb": "db.airports.find({}, {\"name\": 1, \"city\": 1, \"country\": 1, \"_id\": 0}).sort( {\"elevation\": 1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country FROM airports ORDER BY elevation LIMIT 1;",
    "mongodb": "db.airports.find({}, {\"name\": 1, \"city\": 1, \"country\": 1, \"_id\": 0}).sort( {\"elevation\": 1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country FROM airports ORDER BY elevation LIMIT 1",
    "mongodb": "db.airports.find({}, {\"name\": 1, \"city\": 1, \"country\": 1, \"_id\": 0}).sort( {\"elevation\": 1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country FROM airports ORDER BY elevation ASC LIMIT 1",
    "mongodb": "db.airports.find({}, {\"name\": 1, \"city\": 1, \"country\": 1, \"_id\": 0}).sort( {\"elevation\": 1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, city, country FROM airports ORDER BY elevation ASC LIMIT 1",
    "mongodb": "db.airports.find({}, {\"name\": 1, \"city\": 1, \"country\": 1, \"_id\": 0}).sort( {\"elevation\": 1} ).limit( 1 )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name, COUNT(Actor_ID) FROM musical JOIN actor ON musical.Musical_ID = actor.Musical_ID GROUP BY Name",
    "mongodb": "db.musical.aggregate([{\"$lookup\": {\"from\": \"actor\", \"localField\": \"Musical_ID\", \"foreignField\": \"Musical_ID\", \"as\": \"actor\"}}, {\"$unwind\": \"$actor\"}, {\"$group\": {\"_id\": {\"Name\": \"$Name\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Actor_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "musical",
    "sql": "SELECT T1.Name, COUNT(*) FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT T1.Name, COUNT(T2.Actor_ID) FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Name",
    "mongodb": "db.musical.aggregate([{\"$lookup\": {\"from\": \"actor\", \"localField\": \"Musical_ID\", \"foreignField\": \"Musical_ID\", \"as\": \"actor\"}}, {\"$unwind\": \"$actor\"}, {\"$group\": {\"_id\": {\"Name\": \"$Name\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Actor_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90",
    "mongodb": "db.city.aggregate([{\"$match\": {\"White\": {\"$gt\": 90}}}, {\"$lookup\": {\"from\": \"county_public_safety\", \"localField\": \"County_ID\", \"foreignField\": \"County_ID\", \"as\": \"county_public_safety\"}}, {\"$unwind\": \"$county_public_safety\"}, {\"$project\": {\"Crime_rate\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90;",
    "mongodb": "db.city.aggregate([{\"$match\": {\"White\": {\"$gt\": 90}}}, {\"$lookup\": {\"from\": \"county_public_safety\", \"localField\": \"County_ID\", \"foreignField\": \"County_ID\", \"as\": \"county_public_safety\"}}, {\"$unwind\": \"$county_public_safety\"}, {\"$project\": {\"Crime_rate\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90",
    "mongodb": "db.city.aggregate([{\"$match\": {\"White\": {\"$gt\": 90}}}, {\"$lookup\": {\"from\": \"county_public_safety\", \"localField\": \"County_ID\", \"foreignField\": \"County_ID\", \"as\": \"county_public_safety\"}}, {\"$unwind\": \"$county_public_safety\"}, {\"$project\": {\"Crime_rate\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90",
    "mongodb": "db.city.aggregate([{\"$match\": {\"White\": {\"$gt\": 90}}}, {\"$lookup\": {\"from\": \"county_public_safety\", \"localField\": \"County_ID\", \"foreignField\": \"County_ID\", \"as\": \"county_public_safety\"}}, {\"$unwind\": \"$county_public_safety\"}, {\"$project\": {\"Crime_rate\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T1.Crime_rate FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID WHERE T2.White > 90",
    "mongodb": "db.county_public_safety.aggregate([{\"$match\": {\"White\": {\"$gt\": 90}}}, {\"$lookup\": {\"from\": \"city\", \"localField\": \"County_ID\", \"foreignField\": \"County_ID\", \"as\": \"city\"}}, {\"$unwind\": \"$city\"}, {\"$project\": {\"Crime_rate\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM aircraft ORDER BY distance LIMIT 3",
    "mongodb": "db.aircraft.find({}, {\"name\": 1, \"_id\": 0}).sort( {\"distance\": 1} ).limit( 3 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM aircraft ORDER BY distance LIMIT 3",
    "mongodb": "db.aircraft.find({}, {\"name\": 1, \"_id\": 0}).sort( {\"distance\": 1} ).limit( 3 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM aircraft ORDER BY distance ASC LIMIT 3",
    "mongodb": "db.aircraft.find({}, {\"name\": 1, \"_id\": 0}).sort( {\"distance\": 1} ).limit( 3 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM aircraft ORDER BY distance ASC LIMIT 3",
    "mongodb": "db.aircraft.find({}, {\"name\": 1, \"_id\": 0}).sort( {\"distance\": 1} ).limit( 3 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM aircraft ORDER BY distance LIMIT 3",
    "mongodb": "db.aircraft.find({}, {\"name\": 1, \"_id\": 0}).sort( {\"distance\": 1} ).limit( 3 )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC",
    "mongodb": "db.county_public_safety.find({}, {\"Crime_rate\": 1, \"_id\": 0}).sort( {\"Police_officers\": 1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC",
    "mongodb": "db.county_public_safety.find({}, {\"Crime_rate\": 1, \"_id\": 0}).sort( {\"Police_officers\": 1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC",
    "mongodb": "db.county_public_safety.find({}, {\"Crime_rate\": 1, \"_id\": 0}).sort( {\"Police_officers\": 1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers",
    "mongodb": "db.county_public_safety.find({}, {\"Crime_rate\": 1, \"_id\": 0}).sort( {\"Police_officers\": 1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name, Crime_rate FROM county_public_safety ORDER BY Police_officers ASC",
    "mongodb": "db.county_public_safety.find({}, {\"Name\": 1, \"Crime_rate\": 1, \"_id\": 0}).sort( {\"Police_officers\": 1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Station_ID, Location, Manager_Name FROM gas_station ORDER BY Open_Year;",
    "mongodb": "db.gas_station.find({}, {\"Station_ID\": 1, \"Location\": 1, \"Manager_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Station_ID, Location, Manager_Name FROM gas_station ORDER BY Open_Year;",
    "mongodb": "db.gas_station.find({}, {\"Station_ID\": 1, \"Location\": 1, \"Manager_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Station_ID, Location, Manager_Name FROM gas_station ORDER BY Open_Year",
    "mongodb": "db.gas_station.find({}, {\"Station_ID\": 1, \"Location\": 1, \"Manager_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Station_ID, Location, Manager_Name FROM gas_station ORDER BY Open_Year;",
    "mongodb": "db.gas_station.find({}, {\"Station_ID\": 1, \"Location\": 1, \"Manager_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Station_ID, Location, Manager_Name FROM gas_station ORDER BY Open_Year",
    "mongodb": "db.gas_station.find({}, {\"Station_ID\": 1, \"Location\": 1, \"Manager_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT JOB_ID FROM employees GROUP BY JOB_ID HAVING AVG(SALARY) > 8000",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT JOB_ID FROM employees GROUP BY JOB_ID HAVING AVG(SALARY) > 8000', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT JOB_ID FROM employees GROUP BY JOB_ID HAVING AVG(SALARY) > 8000",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT JOB_ID FROM employees GROUP BY JOB_ID HAVING AVG(SALARY) > 8000', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT JOB_ID FROM employees GROUP BY JOB_ID HAVING AVG(SALARY) > 8000;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT JOB_ID FROM employees GROUP BY JOB_ID HAVING AVG(SALARY) > 8000;', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Main_Industry, COUNT(DISTINCT Company_ID) AS Number_of_Companies FROM company GROUP BY Main_Industry ORDER BY SUM(Market_Value) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT main_industry, COUNT(*) FROM company WHERE main_industry = (SELECT main_industry FROM company GROUP BY main_industry ORDER BY SUM(market_value) DESC LIMIT 1) GROUP BY main_industry;",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Main_Industry, COUNT(DISTINCT Company_ID) AS Num_Companies FROM company GROUP BY Main_Industry ORDER BY SUM(Market_Value) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Main_Industry, COUNT(Company_ID) AS Total_Companies FROM company GROUP BY Main_Industry ORDER BY Market_Value DESC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Error: Invalid field in ORDER BY clause that is not one of the fields in the query: \"company\".\"Market_Value\" | body={'db': 'gas_company', 'sql': 'SELECT Main_Industry, COUNT(Company_ID) AS Total_Companies FROM company GROUP BY Main_Industry ORDER BY Market_Value DESC LIMIT 1;', 'error': 'java.sql.SQLException: Error: Invalid field in ORDER BY clause that is not one of the fields in the query: \"company\".\"Market_Value\"'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Main_Industry, COUNT(*) FROM company GROUP BY Main_Industry ORDER BY SUM(Market_Value) DESC LIMIT 1;",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Certificate | body={'db': 'flight_1', 'sql': 'SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Certificate | body={'db': 'flight_1', 'sql': 'SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name, T1.salary FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT T1.name, T1.salary FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name, T1.salary FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT T1.name, T1.salary FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name, T1.salary FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT T1.name, T1.salary FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "musical",
    "sql": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC;",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM actor JOIN musical ON actor.Musical_ID = musical.Musical_ID ORDER BY musical.Year DESC",
    "mongodb": "ERROR: java.sql.SQLException: Field is ambiguous. Multiple possible table references for the query field: Name | body={'db': 'musical', 'sql': 'SELECT Name FROM actor JOIN musical ON actor.Musical_ID = musical.Musical_ID ORDER BY musical.Year DESC', 'error': 'java.sql.SQLException: Field is ambiguous. Multiple possible table references for the query field: Name'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*) > 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*) > 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*) > 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*) > 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school WHERE School_ID IN (SELECT School_ID FROM player GROUP BY School_ID HAVING COUNT(*) > 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT Location FROM school WHERE School_ID IN (SELECT School_ID FROM player GROUP BY School_ID HAVING COUNT(*) > 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT s.Location FROM school s JOIN player p ON s.School_ID = p.School_ID GROUP BY s.School_ID HAVING COUNT(p.Player_ID) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT s.Location FROM school s JOIN player p ON s.School_ID = p.School_ID GROUP BY s.School_ID HAVING COUNT(p.Player_ID) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school WHERE School_ID IN (SELECT School_ID FROM player GROUP BY School_ID HAVING COUNT(*) > 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT Location FROM school WHERE School_ID IN (SELECT School_ID FROM player GROUP BY School_ID HAVING COUNT(*) > 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID WHERE T2.Document_Name = \"King Book\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID WHERE T2.Document_Name = \"King Book\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID WHERE T2.Document_Name = 'King Book'",
    "mongodb": "db.Projects.aggregate([{\"$match\": {\"Document_Name\": \"King Book\"}}, {\"$lookup\": {\"from\": \"Documents\", \"localField\": \"Project_ID\", \"foreignField\": \"Project_ID\", \"as\": \"Documents\"}}, {\"$unwind\": \"$Documents\"}, {\"$project\": {\"Project_Details\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_Details FROM Projects JOIN Documents ON Projects.Project_ID = Documents.Project_ID WHERE Document_Name = \"King Book\"",
    "mongodb": "db.Projects.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Document_Name\", \"foreignField\": \"King Book\"}}}, {\"$lookup\": {\"from\": \"Documents\", \"localField\": \"Project_ID\", \"foreignField\": \"Documents.Project_ID\", \"as\": \"Documents\"}}, {\"$unwind\": \"$Documents\"}, {\"$project\": {\"Project_Details\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T2.Project_Details FROM Documents AS T1 JOIN Projects AS T2 ON T1.Project_ID = T2.Project_ID WHERE T1.Document_Name = \"King Book\"",
    "mongodb": "db.Documents.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Document_Name\", \"foreignField\": \"King Book\"}}}, {\"$lookup\": {\"from\": \"Projects\", \"localField\": \"Project_ID\", \"foreignField\": \"Project_ID\", \"as\": \"Projects\"}}, {\"$unwind\": \"$Projects\"}, {\"$project\": {\"Project_Details\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID WHERE T2.Document_Name = \"King Book\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID WHERE T2.Document_Name = \"King Book\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT title, directed_by FROM film;",
    "mongodb": "db.film.find({}, {\"Title\": 1, \"Directed_by\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT title, directed_by FROM film",
    "mongodb": "db.film.find({}, {\"Title\": 1, \"Directed_by\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Title, Directed_by FROM film;",
    "mongodb": "db.film.find({}, {\"Title\": 1, \"Directed_by\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Title, Directed_by FROM film",
    "mongodb": "db.film.find({}, {\"Title\": 1, \"Directed_by\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Title, Directed_by FROM film",
    "mongodb": "db.film.find({}, {\"Title\": 1, \"Directed_by\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT MAX(ACC_Percent) FROM basketball_match",
    "mongodb": "db.basketball_match.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$ACC_Percent\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC LIMIT 1",
    "mongodb": "db.basketball_match.find({}, {\"ACC_Percent\": 1, \"_id\": 0}).sort( {\"ACC_Percent\": -1} ).limit( 1 )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT MAX(ACC_Percent) FROM basketball_match",
    "mongodb": "db.basketball_match.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$ACC_Percent\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT MAX(ACC_Percent) FROM basketball_match",
    "mongodb": "db.basketball_match.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$ACC_Percent\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT MAX(ACC_Percent) FROM basketball_match",
    "mongodb": "db.basketball_match.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$ACC_Percent\"}}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT DISTINCT Name FROM climber JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID WHERE climber.Country = \"West Germany\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT DISTINCT Name FROM climber JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID WHERE climber.Country = \"West Germany\"', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT DISTINCT Name FROM climber JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID WHERE climber.Country = \"West Germany\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT DISTINCT Name FROM climber JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID WHERE climber.Country = \"West Germany\"', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT DISTINCT Name FROM mountain WHERE Mountain_ID IN (SELECT Mountain_ID FROM climber WHERE Country = 'West Germany')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': \"SELECT DISTINCT Name FROM mountain WHERE Mountain_ID IN (SELECT Mountain_ID FROM climber WHERE Country = 'West Germany')\", 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT DISTINCT m.Name FROM mountain m JOIN climber c ON m.Mountain_ID = c.Mountain_ID WHERE c.Country = 'West Germany'",
    "mongodb": "db.mountain.aggregate([{\"$match\": {\"Country\": \"West Germany\"}}, {\"$lookup\": {\"from\": \"climber\", \"localField\": \"Mountain_ID\", \"foreignField\": \"Mountain_ID\", \"as\": \"climber\"}}, {\"$unwind\": \"$climber\"}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT DISTINCT m.Name FROM mountain AS m JOIN climber AS c ON m.Mountain_ID = c.Mountain_ID WHERE c.Country = \"West Germany\"",
    "mongodb": "db.mountain.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Country\", \"foreignField\": \"West Germany\"}}}, {\"$lookup\": {\"from\": \"climber\", \"localField\": \"Mountain_ID\", \"foreignField\": \"Mountain_ID\", \"as\": \"climber\"}}, {\"$unwind\": \"$climber\"}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course ORDER BY Credits;",
    "mongodb": "db.Course.find({}, {\"CName\": 1, \"_id\": 0}).sort( {\"Credits\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course ORDER BY Credits;",
    "mongodb": "db.Course.find({}, {\"CName\": 1, \"_id\": 0}).sort( {\"Credits\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course ORDER BY Credits ASC;",
    "mongodb": "db.Course.find({}, {\"CName\": 1, \"_id\": 0}).sort( {\"Credits\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course ORDER BY Credits",
    "mongodb": "db.Course.find({}, {\"CName\": 1, \"_id\": 0}).sort( {\"Credits\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course ORDER BY Credits",
    "mongodb": "db.Course.find({}, {\"CName\": 1, \"_id\": 0}).sort( {\"Credits\": 1} )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT COUNT(*), country FROM airports GROUP BY country ORDER BY COUNT(*) DESC;",
    "mongodb": "db.airports.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr0\": -1}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) , country FROM airports GROUP BY country ORDER BY count(*) DESC",
    "mongodb": "db.airports.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr0\": -1}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country, COUNT(*) FROM airports GROUP BY country ORDER BY COUNT(*) DESC",
    "mongodb": "db.airports.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": -1}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country, COUNT(*) AS num_airports FROM airports GROUP BY country ORDER BY num_airports DESC;",
    "mongodb": "db.airports.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"num_airports\": {\"$sum\": 1}}}, {\"$sort\": {\"num_airports\": -1}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country, COUNT(*) AS num_airports FROM airports GROUP BY country ORDER BY num_airports DESC;",
    "mongodb": "db.airports.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"num_airports\": {\"$sum\": 1}}}, {\"$sort\": {\"num_airports\": -1}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM flight",
    "mongodb": "db.flight.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM flight",
    "mongodb": "db.flight.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM flight",
    "mongodb": "db.flight.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM flight",
    "mongodb": "db.flight.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM flight",
    "mongodb": "db.flight.find({}, {}).count()"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Fname FROM Student WHERE Age > 22",
    "mongodb": "db.Student.find({\"Age\": {\"$gt\": 22}}, {\"Fname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Fname FROM Student WHERE Age > 22;",
    "mongodb": "db.Student.find({\"Age\": {\"$gt\": 22}}, {\"Fname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Fname FROM Student WHERE Age > 22",
    "mongodb": "db.Student.find({\"Age\": {\"$gt\": 22}}, {\"Fname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Fname FROM Student WHERE Age > 22",
    "mongodb": "db.Student.find({\"Age\": {\"$gt\": 22}}, {\"Fname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Fname FROM Student WHERE Age > 22",
    "mongodb": "db.Student.find({\"Age\": {\"$gt\": 22}}, {\"Fname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT count(DISTINCT Rank) FROM captain",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT count(DISTINCT Rank) FROM captain', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT count(DISTINCT Rank) FROM captain",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT count(DISTINCT Rank) FROM captain', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT COUNT(DISTINCT Rank) FROM captain",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT COUNT(DISTINCT Rank) FROM captain', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT count(DISTINCT Rank) FROM captain",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT count(DISTINCT Rank) FROM captain', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Rank, COUNT(*) FROM captain GROUP BY Rank",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Rank, COUNT(*) FROM captain GROUP BY Rank', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT count(*) FROM cinema",
    "mongodb": "db.cinema.find({}, {}).count()"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT count(*) FROM cinema",
    "mongodb": "db.cinema.find({}, {}).count()"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT count(*) FROM cinema",
    "mongodb": "db.cinema.find({}, {}).count()"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT count(*) FROM cinema",
    "mongodb": "db.cinema.find({}, {}).count()"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT count(*) FROM cinema",
    "mongodb": "db.cinema.find({}, {}).count()"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT last_name FROM Staff WHERE email_address LIKE \"%wrau%\"",
    "mongodb": "db.Staff.find({\"$lookup\": {\"from\": \"\", \"localField\": \"email_address\", \"foreignField\": \"%wrau%\"}}, {\"last_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT last_name FROM Staff WHERE email_address LIKE \"%wrau%\"",
    "mongodb": "db.Staff.find({\"$lookup\": {\"from\": \"\", \"localField\": \"email_address\", \"foreignField\": \"%wrau%\"}}, {\"last_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT last_name FROM Staff WHERE email_address LIKE \"%wrau%\"",
    "mongodb": "db.Staff.find({\"$lookup\": {\"from\": \"\", \"localField\": \"email_address\", \"foreignField\": \"%wrau%\"}}, {\"last_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT last_name FROM Staff WHERE email_address LIKE \"%wrau%\"",
    "mongodb": "db.Staff.find({\"$lookup\": {\"from\": \"\", \"localField\": \"email_address\", \"foreignField\": \"%wrau%\"}}, {\"last_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT last_name FROM Staff WHERE email_address LIKE \"%wrau%\"",
    "mongodb": "db.Staff.find({\"$lookup\": {\"from\": \"\", \"localField\": \"email_address\", \"foreignField\": \"%wrau%\"}}, {\"last_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT avg(product_price) , product_category_code FROM products GROUP BY product_category_code",
    "mongodb": "db.Products.aggregate([{\"$group\": {\"_id\": {\"product_category_code\": \"$product_category_code\"}, \"Expr0\": {\"$avg\": \"$product_price\"}}}, {\"$project\": {\"product_category_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT avg(product_price) , product_category_code FROM Products GROUP BY product_category_code",
    "mongodb": "db.Products.aggregate([{\"$group\": {\"_id\": {\"product_category_code\": \"$product_category_code\"}, \"Expr0\": {\"$avg\": \"$product_price\"}}}, {\"$project\": {\"product_category_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT avg(product_price), product_category_code FROM Products GROUP BY product_category_code",
    "mongodb": "db.Products.aggregate([{\"$group\": {\"_id\": {\"product_category_code\": \"$product_category_code\"}, \"Expr0\": {\"$avg\": \"$product_price\"}}}, {\"$project\": {\"product_category_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT avg(product_price), product_category_code FROM Products GROUP BY product_category_code",
    "mongodb": "db.Products.aggregate([{\"$group\": {\"_id\": {\"product_category_code\": \"$product_category_code\"}, \"Expr0\": {\"$avg\": \"$product_price\"}}}, {\"$project\": {\"product_category_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT avg(product_price) , product_category_code FROM Products GROUP BY product_category_code",
    "mongodb": "db.Products.aggregate([{\"$group\": {\"_id\": {\"product_category_code\": \"$product_category_code\"}, \"Expr0\": {\"$avg\": \"$product_price\"}}}, {\"$project\": {\"product_category_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Location FROM shop WHERE Open_Year > 2012 INTERSECT SELECT Location FROM shop WHERE Open_Year < 2008",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT Location FROM shop WHERE Shop_ID IN (SELECT Shop_ID FROM stock WHERE Device_ID IN (SELECT Device_ID FROM device WHERE Open_Year > 2012)) INTERSECT SELECT Location FROM shop WHERE Shop_ID IN (SELECT Shop_ID FROM stock WHERE Device_ID IN (SELECT Device_ID FROM device WHERE Open_Year < 2008))",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: Open_Year | body={'db': 'device', 'sql': 'SELECT Location FROM shop WHERE Shop_ID IN (SELECT Shop_ID FROM stock WHERE Device_ID IN (SELECT Device_ID FROM device WHERE Open_Year > 2012)) INTERSECT SELECT Location FROM shop WHERE Shop_ID IN (SELECT Shop_ID FROM stock WHERE Device_ID IN (SELECT Device_ID FROM device WHERE Open_Year < 2008))', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: Open_Year'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Location FROM shop WHERE Open_Year > 2012 INTERSECT SELECT Location FROM shop WHERE Open_Year < 2008",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT Location FROM shop WHERE Open_Year > 2012 UNION SELECT Location FROM shop WHERE Open_Year < 2008",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city FROM airports WHERE country = 'United States' GROUP BY city HAVING count(*) > 3;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city FROM airports WHERE country = 'United States' GROUP BY city HAVING count(*) > 3",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city FROM airports WHERE country = \"United States\" GROUP BY city HAVING COUNT(*) > 3;",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"United States\" | body={'db': 'flight_4', 'sql': 'SELECT city FROM airports WHERE country = \"United States\" GROUP BY city HAVING COUNT(*) > 3;', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"United States\"'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city, COUNT(*) FROM airports WHERE country = 'US' GROUP BY city HAVING COUNT(*) > 3;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT COUNT(DISTINCT city) FROM airports WHERE country = 'United States' GROUP BY city HAVING COUNT(*) > 3",
    "mongodb": ""
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine ORDER BY Price;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT DISTINCT Name FROM wine ORDER BY Price;', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine ORDER BY Price ASC",
    "mongodb": "db.wine.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Price\": 1} )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine ORDER BY Price ASC",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT DISTINCT Name FROM wine ORDER BY Price ASC', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine ORDER BY Price;",
    "mongodb": "db.wine.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Price\": 1} )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine ORDER BY Price ASC",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT DISTINCT Name FROM wine ORDER BY Price ASC', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Major FROM Student GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1;",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Major FROM Student GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T3.Major FROM Student AS T1 JOIN Major AS T2 ON T1.Major = T2.MajorID GROUP BY T3.Major ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Major | body={'db': 'allergy_1', 'sql': 'SELECT T3.Major FROM Student AS T1 JOIN Major AS T2 ON T1.Major = T2.MajorID GROUP BY T3.Major ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Major'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Major FROM Student GROUP BY Major ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Major FROM Student GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Character FROM actor ORDER BY age DESC",
    "mongodb": "db.actor.find({}, {\"Character\": 1, \"_id\": 0}).sort( {\"age\": -1} )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Character FROM actor ORDER BY age DESC",
    "mongodb": "db.actor.find({}, {\"Character\": 1, \"_id\": 0}).sort( {\"age\": -1} )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Character FROM actor ORDER BY age DESC",
    "mongodb": "db.actor.find({}, {\"Character\": 1, \"_id\": 0}).sort( {\"age\": -1} )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Character FROM actor ORDER BY age DESC",
    "mongodb": "db.actor.find({}, {\"Character\": 1, \"_id\": 0}).sort( {\"age\": -1} )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Character FROM actor ORDER BY age DESC",
    "mongodb": "db.actor.find({}, {\"Character\": 1, \"_id\": 0}).sort( {\"age\": -1} )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country, COUNT(*) FROM climber GROUP BY Country",
    "mongodb": "db.climber.aggregate([{\"$group\": {\"_id\": {\"Country\": \"$Country\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country, COUNT(*) FROM climber GROUP BY Country",
    "mongodb": "db.climber.aggregate([{\"$group\": {\"_id\": {\"Country\": \"$Country\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country, COUNT(*) FROM climber GROUP BY Country",
    "mongodb": "db.climber.aggregate([{\"$group\": {\"_id\": {\"Country\": \"$Country\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country, COUNT(*) FROM climber GROUP BY Country",
    "mongodb": "db.climber.aggregate([{\"$group\": {\"_id\": {\"Country\": \"$Country\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country, COUNT(*) FROM climber GROUP BY Country",
    "mongodb": "db.climber.aggregate([{\"$group\": {\"_id\": {\"Country\": \"$Country\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
    "mongodb": "db.county_public_safety.find({}, {\"Case_burden\": 1, \"_id\": 0}).sort( {\"Population\": -1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
    "mongodb": "db.county_public_safety.find({}, {\"Case_burden\": 1, \"_id\": 0}).sort( {\"Population\": -1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
    "mongodb": "db.county_public_safety.find({}, {\"Case_burden\": 1, \"_id\": 0}).sort( {\"Population\": -1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name, Population, Case_burden FROM county_public_safety ORDER BY Population DESC",
    "mongodb": "db.county_public_safety.find({}, {\"Name\": 1, \"Population\": 1, \"Case_burden\": 1, \"_id\": 0}).sort( {\"Population\": -1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name, Case_burden, Population FROM county_public_safety ORDER BY Population DESC, Case_burden DESC",
    "mongodb": "db.county_public_safety.find({}, {\"Name\": 1, \"Case_burden\": 1, \"Population\": 1, \"_id\": 0}).sort( {\"Population\": -1, \"Case_burden\": -1} )"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student GROUP BY Major HAVING COUNT(*) < 3",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student GROUP BY Major HAVING COUNT(*) < 3",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student GROUP BY Major HAVING COUNT(StuID) < 3",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major, COUNT(*) AS Student_Count FROM Student GROUP BY Major HAVING COUNT(*) < 3",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major, COUNT(*) FROM Student GROUP BY Major HAVING COUNT(*) < 3",
    "mongodb": ""
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID FROM Projects WHERE Project_ID IN (SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Project_ID FROM Projects WHERE Project_ID IN (SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Flag FROM Ship GROUP BY Flag ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Flag FROM Ship GROUP BY Flag ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Flag FROM Ship GROUP BY Flag ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Flag FROM Ship GROUP BY Flag ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Flag FROM Ship GROUP BY Flag ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 5 )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 5 )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 5 )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 5 )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
    "mongodb": "db.player.find({}, {\"Team\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 5 )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.DName, T2.Room FROM Course AS T1 JOIN Department AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = \"INTRODUCTION TO COMPUTER SCIENCE\";",
    "mongodb": "db.Course.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"CName\", \"foreignField\": \"INTRODUCTION TO COMPUTER SCIENCE\"}}}, {\"$lookup\": {\"from\": \"Department\", \"localField\": \"DNO\", \"foreignField\": \"DNO\", \"as\": \"Department\"}}, {\"$unwind\": \"$Department\"}, {\"$project\": {\"DName\": 1, \"Room\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.DName, T2.Room FROM Course AS T1 JOIN Department AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = \"INTRODUCTION TO COMPUTER SCIENCE\";",
    "mongodb": "db.Course.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"CName\", \"foreignField\": \"INTRODUCTION TO COMPUTER SCIENCE\"}}}, {\"$lookup\": {\"from\": \"Department\", \"localField\": \"DNO\", \"foreignField\": \"DNO\", \"as\": \"Department\"}}, {\"$unwind\": \"$Department\"}, {\"$project\": {\"DName\": 1, \"Room\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName, Room FROM Department WHERE DNO IN (SELECT DNO FROM Course WHERE CName = 'INTRODUCTION TO COMPUTER SCIENCE')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': \"SELECT DName, Room FROM Department WHERE DNO IN (SELECT DNO FROM Course WHERE CName = 'INTRODUCTION TO COMPUTER SCIENCE')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.DName, T2.Room FROM Course AS T1 JOIN Department AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = \"INTRODUCTION TO COMPUTER SCIENCE\";",
    "mongodb": "db.Course.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"CName\", \"foreignField\": \"INTRODUCTION TO COMPUTER SCIENCE\"}}}, {\"$lookup\": {\"from\": \"Department\", \"localField\": \"DNO\", \"foreignField\": \"DNO\", \"as\": \"Department\"}}, {\"$unwind\": \"$Department\"}, {\"$project\": {\"DName\": 1, \"Room\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DName, Room FROM Department JOIN Course ON Department.DNO = Course.DNO WHERE CName = \"INTRODUCTION TO COMPUTER SCIENCE\"",
    "mongodb": "db.Department.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"CName\", \"foreignField\": \"INTRODUCTION TO COMPUTER SCIENCE\"}}}, {\"$lookup\": {\"from\": \"Course\", \"localField\": \"DNO\", \"foreignField\": \"DNO\", \"as\": \"Course\"}}, {\"$unwind\": \"$Course\"}, {\"$project\": {\"DName\": 1, \"Room\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT T2.Title, MAX(T1.Price) FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T2.Title",
    "mongodb": "db.schedule.aggregate([{\"$lookup\": {\"from\": \"film\", \"localField\": \"Film_ID\", \"foreignField\": \"Film_ID\", \"as\": \"film\"}}, {\"$unwind\": \"$film\"}, {\"$group\": {\"_id\": {\"Title\": \"$Title\"}, \"Expr1\": {\"$max\": \"$Price\"}}}, {\"$project\": {\"Title\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT T2.Title, MAX(T1.Price) FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T2.Film_ID;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT T2.Title, MAX(T1.Price) FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T2.Film_ID;', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Title, MAX(Price) FROM schedule JOIN film ON schedule.Film_ID = film.Film_ID GROUP BY Title",
    "mongodb": "db.schedule.aggregate([{\"$lookup\": {\"from\": \"film\", \"localField\": \"schedule.Film_ID\", \"foreignField\": \"Film_ID\", \"as\": \"film\"}}, {\"$unwind\": \"$film\"}, {\"$group\": {\"_id\": {\"Title\": \"$Title\"}, \"Expr1\": {\"$max\": \"$Price\"}}}, {\"$project\": {\"Title\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Title, MAX(Price) FROM film JOIN schedule ON film.Film_ID = schedule.Film_ID GROUP BY film.Film_ID, Title",
    "mongodb": "db.film.aggregate([{\"$lookup\": {\"from\": \"schedule\", \"localField\": \"Film_ID\", \"foreignField\": \"schedule.Film_ID\", \"as\": \"schedule\"}}, {\"$unwind\": \"$schedule\"}, {\"$group\": {\"_id\": {\"Film_ID\": \"$Film_ID\", \"Title\": \"$Title\"}, \"Expr1\": {\"$max\": \"$Price\"}}}, {\"$project\": {\"Title\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT T2.Title, MAX(T1.Price) FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T1.Film_ID;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT T2.Title, MAX(T1.Price) FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T1.Film_ID;', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_description, T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_description, T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID, Document_Name FROM Documents;",
    "mongodb": "db.Documents.find({}, {\"Document_ID\": 1, \"Document_Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID, Document_Name FROM Documents",
    "mongodb": "db.Documents.find({}, {\"Document_ID\": 1, \"Document_Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID, Document_Name FROM Documents",
    "mongodb": "db.Documents.find({}, {\"Document_ID\": 1, \"Document_Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID, Document_Name FROM Documents",
    "mongodb": "db.Documents.find({}, {\"Document_ID\": 1, \"Document_Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID, Document_Name FROM Documents",
    "mongodb": "db.Documents.find({}, {\"Document_ID\": 1, \"Document_Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina';",
    "mongodb": "db.airports.find({\"$or\": [{\"country\": \"Cuba\"}, {\"country\": \"Argentina\"}]}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina'",
    "mongodb": "db.airports.find({\"$or\": [{\"country\": \"Cuba\"}, {\"country\": \"Argentina\"}]}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina';",
    "mongodb": "db.airports.find({\"$or\": [{\"country\": \"Cuba\"}, {\"country\": \"Argentina\"}]}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina'",
    "mongodb": "db.airports.find({\"$or\": [{\"country\": \"Cuba\"}, {\"country\": \"Argentina\"}]}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina'",
    "mongodb": "db.airports.find({\"$or\": [{\"country\": \"Cuba\"}, {\"country\": \"Argentina\"}]}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = \"operating system\" OR T2.course_name = \"data structure\"",
    "mongodb": "db.Course_Authors_and_Tutors.aggregate([{\"$match\": {\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"operating system\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"data structure\"}}]}}, {\"$lookup\": {\"from\": \"Courses\", \"localField\": \"author_id\", \"foreignField\": \"author_id\", \"as\": \"Courses\"}}, {\"$unwind\": \"$Courses\"}, {\"$project\": {\"address_line_1\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id JOIN Subjects AS T3 ON T2.subject_id = T3.subject_id WHERE T3.subject_name = \"operating system\" OR T3.subject_name = \"data structure\"",
    "mongodb": "db.Course_Authors_and_Tutors.aggregate([{\"$match\": {\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"subject_name\", \"foreignField\": \"operating system\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"subject_name\", \"foreignField\": \"data structure\"}}]}}, {\"$lookup\": {\"from\": \"Courses\", \"localField\": \"author_id\", \"foreignField\": \"author_id\", \"as\": \"Courses\"}}, {\"$unwind\": \"$Courses\"}, {\"$lookup\": {\"from\": \"Subjects\", \"localField\": \"subject_id\", \"foreignField\": \"subject_id\", \"as\": \"Subjects\"}}, {\"$unwind\": \"$Subjects\"}, {\"$project\": {\"address_line_1\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = \"operating system\" OR T2.course_name = \"data structure\"",
    "mongodb": "db.Course_Authors_and_Tutors.aggregate([{\"$match\": {\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"operating system\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"data structure\"}}]}}, {\"$lookup\": {\"from\": \"Courses\", \"localField\": \"author_id\", \"foreignField\": \"author_id\", \"as\": \"Courses\"}}, {\"$unwind\": \"$Courses\"}, {\"$project\": {\"address_line_1\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE author_id IN (SELECT author_id FROM Courses WHERE course_name = \"operating system\" OR course_name = \"data structure\")",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE author_id IN (SELECT author_id FROM Courses WHERE course_name = \"operating system\" OR course_name = \"data structure\")', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = \"operating system\" OR T2.course_name = \"data structure\"",
    "mongodb": "db.Course_Authors_and_Tutors.aggregate([{\"$match\": {\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"operating system\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"data structure\"}}]}}, {\"$lookup\": {\"from\": \"Courses\", \"localField\": \"author_id\", \"foreignField\": \"author_id\", \"as\": \"Courses\"}}, {\"$unwind\": \"$Courses\"}, {\"$project\": {\"address_line_1\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT email_address, phone_number FROM Customers ORDER BY email_address, phone_number;",
    "mongodb": "db.Customers.find({}, {\"email_address\": 1, \"phone_number\": 1, \"_id\": 0}).sort( {\"email_address\": 1, \"phone_number\": 1} )"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT email_address, phone_number FROM Customers ORDER BY email_address, phone_number;",
    "mongodb": "db.Customers.find({}, {\"email_address\": 1, \"phone_number\": 1, \"_id\": 0}).sort( {\"email_address\": 1, \"phone_number\": 1} )"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT email_address, phone_number FROM Customers ORDER BY email_address, phone_number",
    "mongodb": "db.Customers.find({}, {\"email_address\": 1, \"phone_number\": 1, \"_id\": 0}).sort( {\"email_address\": 1, \"phone_number\": 1} )"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT email_address, phone_number FROM Customers ORDER BY email_address, phone_number",
    "mongodb": "db.Customers.find({}, {\"email_address\": 1, \"phone_number\": 1, \"_id\": 0}).sort( {\"email_address\": 1, \"phone_number\": 1} )"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT email_address, phone_number FROM Customers ORDER BY email_address, phone_number;",
    "mongodb": "db.Customers.find({}, {\"email_address\": 1, \"phone_number\": 1, \"_id\": 0}).sort( {\"email_address\": 1, \"phone_number\": 1} )"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT LOCATION FROM cinema WHERE Cinema_ID NOT IN (SELECT Cinema_ID FROM cinema WHERE Capacity > 800)",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Capacity <= 800",
    "mongodb": "db.cinema.find({\"Capacity\": {\"$lte\": 800}}, {\"Location\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Cinema_ID NOT IN (SELECT Cinema_ID FROM cinema WHERE Capacity > 800)",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Capacity <= 800",
    "mongodb": "db.cinema.find({\"Capacity\": {\"$lte\": 800}}, {\"Location\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Capacity <= 800",
    "mongodb": "db.cinema.find({\"Capacity\": {\"$lte\": 800}}, {\"Location\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name, Location FROM shop ORDER BY Shop_Name ASC;",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"Location\": 1, \"_id\": 0}).sort( {\"Shop_Name\": 1} )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name, Location FROM shop ORDER BY Shop_Name ASC;",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"Location\": 1, \"_id\": 0}).sort( {\"Shop_Name\": 1} )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name, Location FROM shop ORDER BY Shop_Name ASC",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"Location\": 1, \"_id\": 0}).sort( {\"Shop_Name\": 1} )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name, Location FROM shop ORDER BY Shop_Name ASC",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"Location\": 1, \"_id\": 0}).sort( {\"Shop_Name\": 1} )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name, Location FROM shop ORDER BY Shop_Name ASC",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"Location\": 1, \"_id\": 0}).sort( {\"Shop_Name\": 1} )"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT T3.Pilot_name , T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID ORDER BY T3.Rank;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: pilot_record | body={'db': 'pilot_record', 'sql': 'SELECT T3.Pilot_name , T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID ORDER BY T3.Rank;', 'error': 'java.sql.SQLException: Non-existing table referenced: pilot_record'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT T2.Pilot_name, T1.Fleet_Series FROM pilot_record AS T3 JOIN aircraft AS T1 ON T3.Aircraft_ID = T1.Aircraft_ID JOIN pilot AS T2 ON T3.Pilot_ID = T2.Pilot_ID ORDER BY T2.Rank ASC;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: pilot_record | body={'db': 'pilot_record', 'sql': 'SELECT T2.Pilot_name, T1.Fleet_Series FROM pilot_record AS T3 JOIN aircraft AS T1 ON T3.Aircraft_ID = T1.Aircraft_ID JOIN pilot AS T2 ON T3.Pilot_ID = T2.Pilot_ID ORDER BY T2.Rank ASC;', 'error': 'java.sql.SQLException: Non-existing table referenced: pilot_record'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT T2.Pilot_name, T1.Fleet_Series FROM aircraft AS T1 JOIN pilot_record AS T3 ON T1.Aircraft_ID = T3.Aircraft_ID JOIN pilot AS T2 ON T3.Pilot_ID = T2.Pilot_ID ORDER BY T2.Rank ASC",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: pilot_record | body={'db': 'pilot_record', 'sql': 'SELECT T2.Pilot_name, T1.Fleet_Series FROM aircraft AS T1 JOIN pilot_record AS T3 ON T1.Aircraft_ID = T3.Aircraft_ID JOIN pilot AS T2 ON T3.Pilot_ID = T2.Pilot_ID ORDER BY T2.Rank ASC', 'error': 'java.sql.SQLException: Non-existing table referenced: pilot_record'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name, Fleet_Series FROM pilot JOIN pilot_record ON pilot.Pilot_ID = pilot_record.Pilot_ID JOIN aircraft ON pilot_record.Aircraft_ID = aircraft.Aircraft_ID ORDER BY Rank ASC",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: pilot_record | body={'db': 'pilot_record', 'sql': 'SELECT Pilot_name, Fleet_Series FROM pilot JOIN pilot_record ON pilot.Pilot_ID = pilot_record.Pilot_ID JOIN aircraft ON pilot_record.Aircraft_ID = aircraft.Aircraft_ID ORDER BY Rank ASC', 'error': 'java.sql.SQLException: Non-existing table referenced: pilot_record'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT T3.Pilot_name , T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID ORDER BY T3.Rank;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: pilot_record | body={'db': 'pilot_record', 'sql': 'SELECT T3.Pilot_name , T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID ORDER BY T3.Rank;', 'error': 'java.sql.SQLException: Non-existing table referenced: pilot_record'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T1.Location, T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID;",
    "mongodb": "db.school.aggregate([{\"$lookup\": {\"from\": \"school_details\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school_details\"}}, {\"$unwind\": \"$school_details\"}, {\"$project\": {\"Location\": 1, \"Nickname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T1.Location, T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
    "mongodb": "db.school.aggregate([{\"$lookup\": {\"from\": \"school_details\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school_details\"}}, {\"$unwind\": \"$school_details\"}, {\"$project\": {\"Location\": 1, \"Nickname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location, Nickname FROM school_details",
    "mongodb": "db.school_details.find({}, {\"Location\": 1, \"Nickname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT s.Location, sd.Nickname FROM school s JOIN school_details sd ON s.School_ID = sd.School_ID;",
    "mongodb": "db.school.aggregate([{\"$lookup\": {\"from\": \"school_details\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school_details\"}}, {\"$unwind\": \"$school_details\"}, {\"$project\": {\"Location\": 1, \"Nickname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T2.Nickname, T1.Location FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
    "mongodb": "db.school.aggregate([{\"$lookup\": {\"from\": \"school_details\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school_details\"}}, {\"$unwind\": \"$school_details\"}, {\"$project\": {\"Nickname\": 1, \"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
    "mongodb": "db.device.find({\"Software_Platform\": {\"$ne\": \"Android\"}}, {\"Carrier\": 1, \"_id\": 0})"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
    "mongodb": "db.device.find({\"Software_Platform\": {\"$ne\": \"Android\"}}, {\"Carrier\": 1, \"_id\": 0})"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
    "mongodb": "db.device.find({\"Software_Platform\": {\"$ne\": \"Android\"}}, {\"Carrier\": 1, \"_id\": 0})"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
    "mongodb": "db.device.find({\"Software_Platform\": {\"$ne\": \"Android\"}}, {\"Carrier\": 1, \"_id\": 0})"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device WHERE Software_Platform != \"Android\"",
    "mongodb": "db.device.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Software_Platform\", \"foreignField\": \"Android\"}}, {\"Carrier\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_description FROM Products WHERE product_name = \"Chocolate\";",
    "mongodb": "db.Products.find({\"$lookup\": {\"from\": \"\", \"localField\": \"product_name\", \"foreignField\": \"Chocolate\"}}, {\"product_description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_description FROM Products WHERE product_name = \"Chocolate\"",
    "mongodb": "db.Products.find({\"$lookup\": {\"from\": \"\", \"localField\": \"product_name\", \"foreignField\": \"Chocolate\"}}, {\"product_description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_description FROM Products WHERE product_name = \"Chocolate\"",
    "mongodb": "db.Products.find({\"$lookup\": {\"from\": \"\", \"localField\": \"product_name\", \"foreignField\": \"Chocolate\"}}, {\"product_description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT * FROM Products WHERE product_name = \"Chocolate\"",
    "mongodb": "db.Products.find({\"$lookup\": {\"from\": \"\", \"localField\": \"product_name\", \"foreignField\": \"Chocolate\"}}, {})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_description FROM Products WHERE product_name = \"Chocolate\"",
    "mongodb": "db.Products.find({\"$lookup\": {\"from\": \"\", \"localField\": \"product_name\", \"foreignField\": \"Chocolate\"}}, {\"product_description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT LName FROM Student WHERE Age = (SELECT MIN(Age) FROM Student)",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT LName FROM Student WHERE Age = (SELECT MIN(Age) FROM Student)",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT LName FROM Student WHERE Age = (SELECT MIN(Age) FROM Student)",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT LName FROM Student WHERE Age = (SELECT MIN(Age) FROM Student)",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT LName FROM Student ORDER BY Age LIMIT 1",
    "mongodb": "db.Student.find({}, {\"LName\": 1, \"_id\": 0}).sort( {\"Age\": 1} ).limit( 1 )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes AS r JOIN airports AS a ON r.dst_apid = a.apid WHERE a.country = 'Italy';",
    "mongodb": "db.routes.aggregate([{\"$match\": {\"country\": \"Italy\"}}, {\"$lookup\": {\"from\": \"airports\", \"localField\": \"dst_apid\", \"foreignField\": \"apid\", \"as\": \"airports\"}}, {\"$unwind\": \"$airports\"}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'",
    "mongodb": "db.routes.aggregate([{\"$match\": {\"country\": \"Italy\"}}, {\"$lookup\": {\"from\": \"airports\", \"localField\": \"dst_apid\", \"foreignField\": \"apid\", \"as\": \"airports\"}}, {\"$unwind\": \"$airports\"}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT COUNT(*) FROM routes JOIN airports ON routes.dst_apid = airports.apid WHERE airports.country = 'Italy';",
    "mongodb": "db.routes.aggregate([{\"$match\": {\"country\": \"Italy\"}}, {\"$lookup\": {\"from\": \"airports\", \"localField\": \"dst_apid\", \"foreignField\": \"apid\", \"as\": \"airports\"}}, {\"$unwind\": \"$airports\"}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'",
    "mongodb": "db.routes.aggregate([{\"$match\": {\"country\": \"Italy\"}}, {\"$lookup\": {\"from\": \"airports\", \"localField\": \"dst_apid\", \"foreignField\": \"apid\", \"as\": \"airports\"}}, {\"$unwind\": \"$airports\"}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country = 'Italy')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': \"SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country = 'Italy')\", 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop JOIN stock ON shop.Shop_ID = stock.Shop_ID GROUP BY shop.Shop_ID ORDER BY sum(Quantity) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Shop_Name FROM shop JOIN stock ON shop.Shop_ID = stock.Shop_ID GROUP BY shop.Shop_ID ORDER BY sum(Quantity) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop JOIN stock ON shop.Shop_ID = stock.Shop_ID GROUP BY shop.Shop_ID ORDER BY SUM(stock.Quantity) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Shop_Name FROM shop JOIN stock ON shop.Shop_ID = stock.Shop_ID GROUP BY shop.Shop_ID ORDER BY SUM(stock.Quantity) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT max(Years_Working) , min(Years_Working) , avg(Years_Working) FROM school_bus",
    "mongodb": "db.school_bus.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Years_Working\"}, \"Expr1\": {\"$min\": \"$Years_Working\"}, \"Expr2\": {\"$avg\": \"$Years_Working\"}}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT max(Years_Working), min(Years_Working), avg(Years_Working) FROM school_bus;",
    "mongodb": "db.school_bus.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Years_Working\"}, \"Expr1\": {\"$min\": \"$Years_Working\"}, \"Expr2\": {\"$avg\": \"$Years_Working\"}}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT max(Years_Working) , avg(Years_Working) , min(Years_Working) FROM school_bus",
    "mongodb": "db.school_bus.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Years_Working\"}, \"Expr1\": {\"$avg\": \"$Years_Working\"}, \"Expr2\": {\"$min\": \"$Years_Working\"}}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT avg(Years_Working), min(Years_Working), max(Years_Working) FROM school_bus",
    "mongodb": "db.school_bus.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Years_Working\"}, \"Expr1\": {\"$min\": \"$Years_Working\"}, \"Expr2\": {\"$max\": \"$Years_Working\"}}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT max(years_working) - min(years_working) AS range_years_working, avg(years_working) AS avg_years_working FROM school_bus",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT max(years_working) - min(years_working) AS range_years_working, avg(years_working) AS avg_years_working FROM school_bus', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT School, Type FROM school WHERE School_ID NOT IN (SELECT School_ID FROM school_bus)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT School, Type FROM school WHERE School_ID NOT IN (SELECT School_ID FROM school_bus)', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name, Type FROM school WHERE School_ID NOT IN (SELECT School_ID FROM school_bus)",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: Name | body={'db': 'school_bus', 'sql': 'SELECT Name, Type FROM school WHERE School_ID NOT IN (SELECT School_ID FROM school_bus)', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: Name'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT T1.School, T1.Type FROM school AS T1 LEFT JOIN school_bus AS T2 ON T1.School_ID = T2.School_ID WHERE T2.School_ID IS NULL",
    "mongodb": "db.school.aggregate([{\"$match\": {\"School_ID\": null}}, {\"$lookup\": {\"from\": \"school_bus\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school_bus\"}}, {\"$unwind\": \"$school_bus\"}, {\"$project\": {\"School\": 1, \"Type\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT T1.School, T1.Type FROM school AS T1 LEFT JOIN school_bus AS T2 ON T1.School_ID = T2.School_ID WHERE T2.School_ID IS NULL",
    "mongodb": "db.school.aggregate([{\"$match\": {\"School_ID\": null}}, {\"$lookup\": {\"from\": \"school_bus\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school_bus\"}}, {\"$unwind\": \"$school_bus\"}, {\"$project\": {\"School\": 1, \"Type\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name, Type FROM school WHERE School_ID NOT IN (SELECT School_ID FROM school_bus)",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: Name | body={'db': 'school_bus', 'sql': 'SELECT Name, Type FROM school WHERE School_ID NOT IN (SELECT School_ID FROM school_bus)', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: Name'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Age, COUNT(*) FROM Student GROUP BY Age",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Age\": \"$Age\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Age\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Age, COUNT(*) FROM Student GROUP BY Age",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Age\": \"$Age\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Age\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Age, COUNT(*) FROM Student GROUP BY Age",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Age\": \"$Age\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Age\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Age, COUNT(*) FROM Student GROUP BY Age",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Age\": \"$Age\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Age\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Age, COUNT(*) FROM Student GROUP BY Age",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Age\": \"$Age\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Age\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airlines AS a JOIN routes AS r ON a.alid = r.alid WHERE a.name = 'American Airlines';",
    "mongodb": "db.airlines.aggregate([{\"$match\": {\"name\": \"American Airlines\"}}, {\"$lookup\": {\"from\": \"routes\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"routes\"}}, {\"$unwind\": \"$routes\"}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines';",
    "mongodb": "db.airlines.aggregate([{\"$match\": {\"name\": \"American Airlines\"}}, {\"$lookup\": {\"from\": \"routes\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"routes\"}}, {\"$unwind\": \"$routes\"}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': \"SELECT count(*) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines')\", 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': \"SELECT count(*) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines')\", 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': \"SELECT count(*) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines')\", 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT count(*) FROM Student",
    "mongodb": "db.Student.find({}, {}).count()"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT count(*) FROM Student",
    "mongodb": "db.Student.find({}, {}).count()"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT count(*) FROM Student",
    "mongodb": "db.Student.find({}, {}).count()"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT COUNT(*) FROM Student;",
    "mongodb": "db.Student.find({}, {}).count()"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT count(*) FROM Student",
    "mongodb": "db.Student.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT departure_date, arrival_date FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu';",
    "mongodb": "db.flight.find({\"destination\": \"Honolulu\", \"origin\": \"Los Angeles\"}, {\"departure_date\": 1, \"arrival_date\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT departure_date , arrival_date FROM flight WHERE origin = \"Los Angeles\" AND destination = \"Honolulu\"",
    "mongodb": "db.flight.find({\"$lookup\": {\"from\": \"\", \"localField\": \"origin\", \"foreignField\": \"Los Angeles\"}}, {\"departure_date\": 1, \"arrival_date\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT departure_date, arrival_date FROM flight WHERE origin = \"Los Angeles\" AND destination = \"Honolulu\";",
    "mongodb": "db.flight.find({\"$lookup\": {\"from\": \"\", \"localField\": \"origin\", \"foreignField\": \"Los Angeles\"}}, {\"departure_date\": 1, \"arrival_date\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT departure_date, arrival_date FROM flight WHERE origin = \"Los Angeles\" AND destination = \"Honolulu\"",
    "mongodb": "db.flight.find({\"$lookup\": {\"from\": \"\", \"localField\": \"origin\", \"foreignField\": \"Los Angeles\"}}, {\"departure_date\": 1, \"arrival_date\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT departure_date, arrival_date FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu'",
    "mongodb": "db.flight.find({\"destination\": \"Honolulu\", \"origin\": \"Los Angeles\"}, {\"departure_date\": 1, \"arrival_date\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) >= 2;",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) >= 2;",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) >= 2;",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) >= 2;",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Cinema_ID IN (SELECT Cinema_ID FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING count(*) >= 2)",
    "mongodb": ""
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_name, product_category_code FROM Products ORDER BY product_price DESC LIMIT 1",
    "mongodb": "db.Products.find({}, {\"product_name\": 1, \"product_category_code\": 1, \"_id\": 0}).sort( {\"product_price\": -1} ).limit( 1 )"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_name , product_category_code FROM Products ORDER BY product_price DESC LIMIT 1",
    "mongodb": "db.Products.find({}, {\"product_name\": 1, \"product_category_code\": 1, \"_id\": 0}).sort( {\"product_price\": -1} ).limit( 1 )"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_name, product_category_code FROM Products ORDER BY product_price DESC LIMIT 1",
    "mongodb": "db.Products.find({}, {\"product_name\": 1, \"product_category_code\": 1, \"_id\": 0}).sort( {\"product_price\": -1} ).limit( 1 )"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_name, product_category_code FROM Products ORDER BY product_price DESC LIMIT 1",
    "mongodb": "db.Products.find({}, {\"product_name\": 1, \"product_category_code\": 1, \"_id\": 0}).sort( {\"product_price\": -1} ).limit( 1 )"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_name, product_category_code FROM Products ORDER BY product_price DESC LIMIT 1",
    "mongodb": "db.Products.find({}, {\"product_name\": 1, \"product_category_code\": 1, \"_id\": 0}).sort( {\"product_price\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(DISTINCT eid) FROM certificate",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT count(DISTINCT eid) FROM certificate', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(DISTINCT eid) FROM certificate",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT count(DISTINCT eid) FROM certificate', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(DISTINCT eid) FROM certificate",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT count(DISTINCT eid) FROM certificate', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT COUNT(DISTINCT eid) FROM certificate",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT COUNT(DISTINCT eid) FROM certificate', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT COUNT(DISTINCT eid) FROM certificate",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT COUNT(DISTINCT eid) FROM certificate', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t2.Rank = 'Midshipman' INTERSECT SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t2.Rank = 'Lieutenant'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': \"SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t2.Rank = 'Midshipman' INTERSECT SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t2.Rank = 'Lieutenant'\", 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t2.Rank = 'Midshipman' INTERSECT SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t2.Rank = 'Lieutenant'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': \"SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t2.Rank = 'Midshipman' INTERSECT SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t2.Rank = 'Lieutenant'\", 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT T2.Name FROM Ship AS T2 JOIN Captain AS T1 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Rank = 'Midshipman' INTERSECT SELECT T2.Name FROM Ship AS T2 JOIN Captain AS T1 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Rank = 'Lieutenant'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': \"SELECT T2.Name FROM Ship AS T2 JOIN Captain AS T1 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Rank = 'Midshipman' INTERSECT SELECT T2.Name FROM Ship AS T2 JOIN Captain AS T1 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Rank = 'Lieutenant'\", 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT t2.Name FROM captain AS t1 JOIN Ship AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t1.Rank = 'Midshipman' OR t1.Rank = 'Lieutenant'",
    "mongodb": "db.captain.aggregate([{\"$match\": {\"$or\": [{\"Rank\": \"Midshipman\"}, {\"Rank\": \"Lieutenant\"}]}}, {\"$lookup\": {\"from\": \"Ship\", \"localField\": \"Ship_ID\", \"foreignField\": \"Ship_ID\", \"as\": \"Ship\"}}, {\"$unwind\": \"$Ship\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT T2.Name FROM Ship AS T2 JOIN Captain AS T1 ON T2.Ship_ID = T1.Ship_ID WHERE T1.Rank = 'Midshipman' INTERSECT SELECT T2.Name FROM Ship AS T2 JOIN Captain AS T1 ON T2.Ship_ID = T1.Ship_ID WHERE T1.Rank = 'Lieutenant'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': \"SELECT T2.Name FROM Ship AS T2 JOIN Captain AS T1 ON T2.Ship_ID = T1.Ship_ID WHERE T1.Rank = 'Midshipman' INTERSECT SELECT T2.Name FROM Ship AS T2 JOIN Captain AS T1 ON T2.Ship_ID = T1.Ship_ID WHERE T1.Rank = 'Lieutenant'\", 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airlines GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airlines WHERE country IN (SELECT country FROM airlines WHERE active = 'Y') GROUP BY country ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name FROM captain WHERE Rank = 'Midshipman' OR Rank = 'Lieutenant'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': \"SELECT Name FROM captain WHERE Rank = 'Midshipman' OR Rank = 'Lieutenant'\", 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name FROM captain WHERE Rank = 'Midshipman' OR Rank = 'Lieutenant'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': \"SELECT Name FROM captain WHERE Rank = 'Midshipman' OR Rank = 'Lieutenant'\", 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name FROM captain WHERE Rank IN ('Midshipman', 'Lieutenant')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': \"SELECT Name FROM captain WHERE Rank IN ('Midshipman', 'Lieutenant')\", 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name FROM captain WHERE Rank = 'Midshipman' OR Rank = 'Lieutenant'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': \"SELECT Name FROM captain WHERE Rank = 'Midshipman' OR Rank = 'Lieutenant'\", 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name FROM captain WHERE Rank = \"Midshipman\" OR Rank = \"Lieutenant\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Name FROM captain WHERE Rank = \"Midshipman\" OR Rank = \"Lieutenant\"', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Major FROM Student",
    "mongodb": "db.Student.find({}, {\"Major\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT DISTINCT Major FROM Student",
    "mongodb": "db.Student.distinct(\"Major\", {})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Major FROM Student",
    "mongodb": "db.Student.find({}, {\"Major\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT DISTINCT Major FROM Student",
    "mongodb": "db.Student.distinct(\"Major\", {})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT DISTINCT Major FROM Student",
    "mongodb": "db.Student.distinct(\"Major\", {})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT avg(age) , sex FROM Student GROUP BY sex",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Sex\": \"$Sex\"}, \"Expr0\": {\"$avg\": \"$Age\"}}}, {\"$project\": {\"Sex\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT avg(age) , sex FROM Student GROUP BY sex",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Sex\": \"$Sex\"}, \"Expr0\": {\"$avg\": \"$Age\"}}}, {\"$project\": {\"Sex\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT avg(Age) , Sex FROM Student GROUP BY Sex",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Sex\": \"$Sex\"}, \"Expr0\": {\"$avg\": \"$Age\"}}}, {\"$project\": {\"Sex\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT avg(age) , sex FROM Student GROUP BY sex",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Sex\": \"$Sex\"}, \"Expr0\": {\"$avg\": \"$Age\"}}}, {\"$project\": {\"Sex\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT avg(Age), Sex FROM Student GROUP BY Sex",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Sex\": \"$Sex\"}, \"Expr0\": {\"$avg\": \"$Age\"}}}, {\"$project\": {\"Sex\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM musical WHERE Nominee = \"Bob Fosse\"",
    "mongodb": "db.musical.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Nominee\", \"foreignField\": \"Bob Fosse\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM musical WHERE Nominee = \"Bob Fosse\"",
    "mongodb": "db.musical.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Nominee\", \"foreignField\": \"Bob Fosse\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT T1.Name FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = \"Bob Fosse\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"Bob Fosse\" | body={'db': 'musical', 'sql': 'SELECT T1.Name FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = \"Bob Fosse\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"Bob Fosse\"'}"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM musical WHERE Nominee = \"Bob Fosse\"",
    "mongodb": "db.musical.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Nominee\", \"foreignField\": \"Bob Fosse\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM musical WHERE Nominee = \"Bob Fosse\";",
    "mongodb": "db.musical.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Nominee\", \"foreignField\": \"Bob Fosse\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Police_force FROM county_public_safety WHERE Location = \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE Location = \"West\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"East\" | body={'db': 'county_public_safety', 'sql': 'SELECT Police_force FROM county_public_safety WHERE Location = \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE Location = \"West\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"East\"'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Police_force FROM county_public_safety WHERE Location = \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE Location = \"West\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"East\" | body={'db': 'county_public_safety', 'sql': 'SELECT Police_force FROM county_public_safety WHERE Location = \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE Location = \"West\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"East\"'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T1.Police_force FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID WHERE T2.Location IN ('East', 'West') GROUP BY T1.Police_force HAVING COUNT(DISTINCT T2.Location) = 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': \"SELECT T1.Police_force FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID WHERE T2.Location IN ('East', 'West') GROUP BY T1.Police_force HAVING COUNT(DISTINCT T2.Location) = 2\", 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Police_force FROM county_public_safety WHERE Location = \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE Location = \"West\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"East\" | body={'db': 'county_public_safety', 'sql': 'SELECT Police_force FROM county_public_safety WHERE Location = \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE Location = \"West\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"East\"'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Police_force FROM county_public_safety WHERE Location = \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE Location = \"West\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"East\" | body={'db': 'county_public_safety', 'sql': 'SELECT Police_force FROM county_public_safety WHERE Location = \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE Location = \"West\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"East\"'}"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student WHERE Sex = 'F' GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student WHERE Sex = \"F\" GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"F\" | body={'db': 'voter_2', 'sql': 'SELECT Major FROM Student WHERE Sex = \"F\" GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"F\"'}"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student WHERE Sex = \"F\" GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"F\" | body={'db': 'voter_2', 'sql': 'SELECT Major FROM Student WHERE Sex = \"F\" GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1;', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"F\"'}"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student WHERE Sex = 'F' GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student WHERE Sex = \"F\" GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"F\" | body={'db': 'voter_2', 'sql': 'SELECT Major FROM Student WHERE Sex = \"F\" GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"F\"'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code, COUNT(*) FROM Documents_with_Expenses GROUP BY Budget_Type_Code;",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$group\": {\"_id\": {\"Budget_Type_Code\": \"$Budget_Type_Code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Budget_Type_Code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code, COUNT(*) FROM Documents_with_Expenses GROUP BY Budget_Type_Code",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$group\": {\"_id\": {\"Budget_Type_Code\": \"$Budget_Type_Code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Budget_Type_Code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code, COUNT(*) FROM Documents_with_Expenses GROUP BY Budget_Type_Code",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$group\": {\"_id\": {\"Budget_Type_Code\": \"$Budget_Type_Code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Budget_Type_Code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code, COUNT(Document_ID) FROM Documents_with_Expenses GROUP BY Budget_Type_Code",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$group\": {\"_id\": {\"Budget_Type_Code\": \"$Budget_Type_Code\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Document_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"Budget_Type_Code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code, COUNT(Document_ID) FROM Documents_with_Expenses GROUP BY Budget_Type_Code",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$group\": {\"_id\": {\"Budget_Type_Code\": \"$Budget_Type_Code\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Document_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"Budget_Type_Code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, Document_Type_Name, Document_Type_Description FROM Ref_Document_Types;",
    "mongodb": "db.Ref_Document_Types.find({}, {\"Document_Type_Code\": 1, \"Document_Type_Name\": 1, \"Document_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, Document_Type_Name, Document_Type_Description FROM Ref_Document_Types",
    "mongodb": "db.Ref_Document_Types.find({}, {\"Document_Type_Code\": 1, \"Document_Type_Name\": 1, \"Document_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, Document_Type_Name, Document_Type_Description FROM Ref_Document_Types",
    "mongodb": "db.Ref_Document_Types.find({}, {\"Document_Type_Code\": 1, \"Document_Type_Name\": 1, \"Document_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, Document_Type_Name, Document_Type_Description FROM Ref_Document_Types",
    "mongodb": "db.Ref_Document_Types.find({}, {\"Document_Type_Code\": 1, \"Document_Type_Name\": 1, \"Document_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, Document_Type_Name, Document_Type_Description FROM Ref_Document_Types",
    "mongodb": "db.Ref_Document_Types.find({}, {\"Document_Type_Code\": 1, \"Document_Type_Name\": 1, \"Document_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT DISTINCT President_Vote FROM Voting_record WHERE Registration_Date = \"08/30/2015\"",
    "mongodb": "db.Voting_record.distinct(\"President_Vote\", {\"$lookup\": {\"from\": \"\", \"localField\": \"Registration_Date\", \"foreignField\": \"08/30/2015\"}})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT DISTINCT President_Vote FROM Voting_record WHERE Registration_Date = \"08/30/2015\"",
    "mongodb": "db.Voting_record.distinct(\"President_Vote\", {\"$lookup\": {\"from\": \"\", \"localField\": \"Registration_Date\", \"foreignField\": \"08/30/2015\"}})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT DISTINCT President_Vote FROM Voting_record WHERE Election_Cycle = '08/30/2015'",
    "mongodb": "db.Voting_record.distinct(\"President_Vote\", {\"Election_Cycle\": \"08/30/2015\"})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT DISTINCT President_Vote FROM Voting_record WHERE Election_Cycle = '08/30/2015'",
    "mongodb": "db.Voting_record.distinct(\"President_Vote\", {\"Election_Cycle\": \"08/30/2015\"})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT DISTINCT President_Vote FROM Voting_record WHERE Registration_Date = \"08/30/2015\"",
    "mongodb": "db.Voting_record.distinct(\"President_Vote\", {\"$lookup\": {\"from\": \"\", \"localField\": \"Registration_Date\", \"foreignField\": \"08/30/2015\"}})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id, first_name, last_name, job_title FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_title = 'PU_MAN')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT employee_id, first_name, last_name, job_title FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_title = 'PU_MAN')\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id, first_name, last_name, job_id FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT employee_id, first_name, last_name, job_id FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id, first_name, last_name, job_title FROM employees JOIN jobs ON employees.job_id = jobs.job_id WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT employee_id, first_name, last_name, job_title FROM employees JOIN jobs ON employees.job_id = jobs.job_id WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id, first_name, last_name, job_id FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT employee_id, first_name, last_name, job_id FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT e.employee_id, e.first_name, e.last_name, j.job_title FROM employees e JOIN jobs j ON e.job_id = j.job_id WHERE e.salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT e.employee_id, e.first_name, e.last_name, j.job_title FROM employees e JOIN jobs j ON e.job_id = j.job_id WHERE e.salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT min(Age), avg(Age), max(Age) FROM Student",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$Age\"}, \"Expr1\": {\"$avg\": \"$Age\"}, \"Expr2\": {\"$max\": \"$Age\"}}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT min(Age) , avg(Age) , max(Age) FROM Student",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$Age\"}, \"Expr1\": {\"$avg\": \"$Age\"}, \"Expr2\": {\"$max\": \"$Age\"}}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT min(Age) , avg(Age) , max(Age) FROM Student",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$Age\"}, \"Expr1\": {\"$avg\": \"$Age\"}, \"Expr2\": {\"$max\": \"$Age\"}}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT min(Age) , avg(Age) , max(Age) FROM Student",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$Age\"}, \"Expr1\": {\"$avg\": \"$Age\"}, \"Expr2\": {\"$max\": \"$Age\"}}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT min(age) as youngest_age, avg(age) as average_age, max(age) as oldest_age FROM student",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": null, \"youngest_age\": {\"$min\": \"$Age\"}, \"average_age\": {\"$avg\": \"$Age\"}, \"oldest_age\": {\"$max\": \"$Age\"}}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Crime_rate < 100)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT Name FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Crime_rate < 100)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate < 100)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate < 100)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T2.Crime_rate < 100",
    "mongodb": "db.city.aggregate([{\"$match\": {\"Crime_rate\": {\"$lt\": 100}}}, {\"$lookup\": {\"from\": \"county_public_safety\", \"localField\": \"County_ID\", \"foreignField\": \"County_ID\", \"as\": \"county_public_safety\"}}, {\"$unwind\": \"$county_public_safety\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Crime_rate < 100)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT Name FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Crime_rate < 100)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Crime_rate < 100)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT Name FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Crime_rate < 100)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname, Lname FROM Faculty WHERE Sex = 'M' AND Building = 'NEB';",
    "mongodb": "db.Faculty.find({\"Building\": \"NEB\", \"Sex\": \"M\"}, {\"Fname\": 1, \"Lname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname, Lname FROM Faculty WHERE Sex = \"M\" AND Building = \"NEB\"",
    "mongodb": "db.Faculty.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Sex\", \"foreignField\": \"M\"}}, {\"Fname\": 1, \"Lname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T1.Fname, T1.Lname FROM Faculty AS T1 JOIN Member_of AS T2 ON T1.FacID = T2.FacID JOIN Department AS T3 ON T2.DNO = T3.DNO WHERE T1.Sex = 'M' AND T3.Building = 'NEB'",
    "mongodb": "db.Faculty.aggregate([{\"$match\": {\"Building\": \"NEB\", \"Sex\": \"M\"}}, {\"$lookup\": {\"from\": \"Member_of\", \"localField\": \"FacID\", \"foreignField\": \"FacID\", \"as\": \"Member_of\"}}, {\"$unwind\": \"$Member_of\"}, {\"$lookup\": {\"from\": \"Department\", \"localField\": \"DNO\", \"foreignField\": \"DNO\", \"as\": \"Department\"}}, {\"$unwind\": \"$Department\"}, {\"$project\": {\"Fname\": 1, \"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname, Lname FROM Faculty WHERE Sex = 'M' AND Building = 'NEB'",
    "mongodb": "db.Faculty.find({\"Building\": \"NEB\", \"Sex\": \"M\"}, {\"Fname\": 1, \"Lname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname, Lname FROM Faculty WHERE Sex = 'M' AND Building = 'NEB'",
    "mongodb": "db.Faculty.find({\"Building\": \"NEB\", \"Sex\": \"M\"}, {\"Fname\": 1, \"Lname\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school ORDER BY Founded DESC",
    "mongodb": "db.school.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Founded\": -1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school ORDER BY Founded DESC",
    "mongodb": "db.school.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Founded\": -1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school ORDER BY Founded DESC",
    "mongodb": "db.school.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Founded\": -1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school ORDER BY Founded DESC",
    "mongodb": "db.school.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Founded\": -1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school ORDER BY Founded DESC",
    "mongodb": "db.school.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Founded\": -1} )"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE Team != \"NYY\"",
    "mongodb": "db.technician.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"NYY\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE Team != \"NYY\"",
    "mongodb": "db.technician.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"NYY\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE Team != 'NYY'",
    "mongodb": "db.technician.find({\"Team\": {\"$ne\": \"NYY\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE Team != 'NYY'",
    "mongodb": "db.technician.find({\"Team\": {\"$ne\": \"NYY\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician WHERE Team != \"NYY\"",
    "mongodb": "db.technician.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"NYY\"}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school ORDER BY Enrollment ASC",
    "mongodb": "db.school.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Enrollment\": 1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school ORDER BY Enrollment ASC;",
    "mongodb": "db.school.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Enrollment\": 1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school ORDER BY Enrollment ASC",
    "mongodb": "db.school.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Enrollment\": 1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school ORDER BY Enrollment ASC",
    "mongodb": "db.school.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Enrollment\": 1} )"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school ORDER BY Enrollment ASC",
    "mongodb": "db.school.find({}, {\"Location\": 1, \"_id\": 0}).sort( {\"Enrollment\": 1} )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE aid IN (SELECT aid FROM aircraft WHERE name = 'Airbus A340-300');",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': \"SELECT flno FROM flight WHERE aid IN (SELECT aid FROM aircraft WHERE name = 'Airbus A340-300');\", 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Airbus A340-300');",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': \"SELECT flno FROM flight WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Airbus A340-300');\", 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE aid IN (SELECT aid FROM aircraft WHERE name = 'Airbus A340-300')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': \"SELECT flno FROM flight WHERE aid IN (SELECT aid FROM aircraft WHERE name = 'Airbus A340-300')\", 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.flno FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = \"Airbus A340-300\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT T1.flno FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = \"Airbus A340-300\"', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.flno FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = \"Airbus A340-300\";",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT T1.flno FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = \"Airbus A340-300\";', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T3.Manager_Name FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T1.Station_ID = T3.Station_ID WHERE T2.Company = 'ExxonMobil'",
    "mongodb": "db.station_company.aggregate([{\"$match\": {\"Company\": \"ExxonMobil\"}}, {\"$lookup\": {\"from\": \"company\", \"localField\": \"Company_ID\", \"foreignField\": \"Company_ID\", \"as\": \"company\"}}, {\"$unwind\": \"$company\"}, {\"$lookup\": {\"from\": \"gas_station\", \"localField\": \"Station_ID\", \"foreignField\": \"Station_ID\", \"as\": \"gas_station\"}}, {\"$unwind\": \"$gas_station\"}, {\"$project\": {\"Manager_Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T3.Manager_Name FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T1.Station_ID = T3.Station_ID WHERE T2.Company = 'ExxonMobil'",
    "mongodb": "db.station_company.aggregate([{\"$match\": {\"Company\": \"ExxonMobil\"}}, {\"$lookup\": {\"from\": \"company\", \"localField\": \"Company_ID\", \"foreignField\": \"Company_ID\", \"as\": \"company\"}}, {\"$unwind\": \"$company\"}, {\"$lookup\": {\"from\": \"gas_station\", \"localField\": \"Station_ID\", \"foreignField\": \"Station_ID\", \"as\": \"gas_station\"}}, {\"$unwind\": \"$gas_station\"}, {\"$project\": {\"Manager_Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT gas_station.Manager_Name FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID JOIN company ON station_company.Company_ID = company.Company_ID WHERE company.Company = \"ExxonMobil\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT gas_station.Manager_Name FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID JOIN company ON station_company.Company_ID = company.Company_ID WHERE company.Company = \"ExxonMobil\"', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Manager_Name FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID JOIN company ON station_company.Company_ID = company.Company_ID WHERE company.Company = \"ExxonMobil\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT Manager_Name FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID JOIN company ON station_company.Company_ID = company.Company_ID WHERE company.Company = \"ExxonMobil\"', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T2.Manager_Name FROM gas_station AS T1 JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID JOIN company AS T3 ON T2.Company_ID = T3.Company_ID WHERE T3.Company = \"ExxonMobil\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT T2.Manager_Name FROM gas_station AS T1 JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID JOIN company AS T3 ON T2.Company_ID = T3.Company_ID WHERE T3.Company = \"ExxonMobil\"', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Advisor FROM Student GROUP BY Advisor HAVING COUNT(*) > 2;",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Advisor FROM Student GROUP BY Advisor HAVING COUNT(*) > 2",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.Advisor GROUP BY T1.Advisor HAVING COUNT(*) > 2",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT T1.Advisor, COUNT(*) FROM Student AS T1 GROUP BY T1.Advisor HAVING COUNT(*) > 2",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Advisor FROM Student GROUP BY Advisor HAVING COUNT(*) > 2",
    "mongodb": ""
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Department WHERE Division = \"AS\"",
    "mongodb": "db.Department.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Division\", \"foreignField\": \"AS\"}}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Department WHERE Division = \"AS\"",
    "mongodb": "db.Department.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Division\", \"foreignField\": \"AS\"}}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Department WHERE Division = \"AS\"",
    "mongodb": "db.Department.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Division\", \"foreignField\": \"AS\"}}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT COUNT(*) FROM Department WHERE Division = 'AS'",
    "mongodb": "db.Department.find({\"Division\": \"AS\"}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Department WHERE Division = \"AS\"",
    "mongodb": "db.Department.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Division\", \"foreignField\": \"AS\"}}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Name, Document_ID FROM Documents WHERE Document_Type_Code = 'BK';",
    "mongodb": "db.Documents.find({\"Document_Type_Code\": \"BK\"}, {\"Document_Name\": 1, \"Document_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Name, Document_ID FROM Documents WHERE Document_Type_Code = \"BK\"",
    "mongodb": "db.Documents.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Document_Type_Code\", \"foreignField\": \"BK\"}}, {\"Document_Name\": 1, \"Document_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Name, Document_ID FROM Documents WHERE Document_Type_Code = \"BK\"",
    "mongodb": "db.Documents.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Document_Type_Code\", \"foreignField\": \"BK\"}}, {\"Document_Name\": 1, \"Document_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID, Document_Name FROM Documents WHERE Document_Type_Code = 'BK'",
    "mongodb": "db.Documents.find({\"Document_Type_Code\": \"BK\"}, {\"Document_ID\": 1, \"Document_Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Name, Document_ID FROM Documents WHERE Document_Type_Code = 'BK'",
    "mongodb": "db.Documents.find({\"Document_Type_Code\": \"BK\"}, {\"Document_Name\": 1, \"Document_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(distance) , avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"origin\": \"Los Angeles\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$distance\"}, \"Expr1\": {\"$avg\": \"$price\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(distance) , avg(price) FROM flight WHERE origin = \"Los Angeles\"",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"origin\", \"foreignField\": \"Los Angeles\"}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$distance\"}, \"Expr1\": {\"$avg\": \"$price\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(price), avg(distance) FROM flight WHERE origin = \"Los Angeles\"",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"origin\", \"foreignField\": \"Los Angeles\"}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$price\"}, \"Expr1\": {\"$avg\": \"$distance\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles';",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"origin\": \"Los Angeles\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$distance\"}, \"Expr1\": {\"$avg\": \"$price\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"origin\": \"Los Angeles\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$distance\"}, \"Expr1\": {\"$avg\": \"$price\"}}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) , project_id FROM Documents WHERE document_type_code = \"BK\" GROUP BY project_id",
    "mongodb": "db.Documents.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"document_type_code\", \"foreignField\": \"BK\"}}}, {\"$group\": {\"_id\": {\"project_id\": \"$project_id\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$project\": {\"project_id\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*), Project_ID FROM Documents WHERE Document_Type_Code = \"BK\" GROUP BY Project_ID;",
    "mongodb": "db.Documents.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Document_Type_Code\", \"foreignField\": \"BK\"}}}, {\"$group\": {\"_id\": {\"Project_ID\": \"$Project_ID\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$project\": {\"Project_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, COUNT(*) FROM Documents WHERE Document_Type_Code = 'BK' GROUP BY Project_ID",
    "mongodb": "db.Documents.aggregate([{\"$match\": {\"Document_Type_Code\": \"BK\"}}, {\"$group\": {\"_id\": {\"Project_ID\": \"$Project_ID\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Project_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, COUNT(*) FROM Documents WHERE Document_Type_Code = \"BK\" GROUP BY Project_ID",
    "mongodb": "db.Documents.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Document_Type_Code\", \"foreignField\": \"BK\"}}}, {\"$group\": {\"_id\": {\"Project_ID\": \"$Project_ID\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Project_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents WHERE Document_Type_Code = 'BK'",
    "mongodb": "db.Documents.find({\"Document_Type_Code\": \"BK\"}, {}).count()"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*) FROM university WHERE Location LIKE \"%NY%\"",
    "mongodb": "db.university.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Location\", \"foreignField\": \"%NY%\"}}, {}).count()"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*) FROM university WHERE Location LIKE \"%NY%\"",
    "mongodb": "db.university.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Location\", \"foreignField\": \"%NY%\"}}, {}).count()"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*) FROM university WHERE Location = 'New York';",
    "mongodb": "db.university.find({\"Location\": \"New York\"}, {}).count()"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT COUNT(*) FROM university WHERE Location LIKE \"%NY%\"",
    "mongodb": "db.university.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Location\", \"foreignField\": \"%NY%\"}}, {}).count()"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*) FROM university WHERE Location LIKE '%NY%'",
    "mongodb": "db.university.find({\"Location\": {\"$regularExpression\": {\"pattern\": \"^.*NY.*$\", \"options\": \"\"}}}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(DISTINCT city) FROM airports WHERE country = 'Greenland'",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(DISTINCT city) FROM airports WHERE country = 'Greenland';",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(DISTINCT city) FROM airports WHERE country = 'Greenland'",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT COUNT(DISTINCT city) FROM airports WHERE country = 'Greenland';",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(DISTINCT city) FROM airports WHERE country = 'Greenland';",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Allergy_Type WHERE AllergyType = \"animal\"",
    "mongodb": "db.Allergy_Type.find({\"$lookup\": {\"from\": \"\", \"localField\": \"AllergyType\", \"foreignField\": \"animal\"}}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Allergy_Type WHERE AllergyType = \"animal\"",
    "mongodb": "db.Allergy_Type.find({\"$lookup\": {\"from\": \"\", \"localField\": \"AllergyType\", \"foreignField\": \"animal\"}}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Allergy_Type WHERE AllergyType = 'animal'",
    "mongodb": "db.Allergy_Type.find({\"AllergyType\": \"animal\"}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Allergy_Type WHERE AllergyType = 'animal'",
    "mongodb": "db.Allergy_Type.find({\"AllergyType\": \"animal\"}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Allergy_Type WHERE AllergyType = 'Animal'",
    "mongodb": "db.Allergy_Type.find({\"AllergyType\": \"Animal\"}, {}).count()"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team, COUNT(*) FROM technician GROUP BY Team ORDER BY COUNT(*) DESC;",
    "mongodb": "db.technician.aggregate([{\"$group\": {\"_id\": {\"Team\": \"$Team\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": -1}}, {\"$project\": {\"Team\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team FROM technician GROUP BY Team ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T1.Team FROM technician AS T1 GROUP BY T1.Team ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team FROM technician GROUP BY Team ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Hispanic FROM city WHERE Black > 10",
    "mongodb": "db.city.find({\"Black\": {\"$gt\": 10}}, {\"Hispanic\": 1, \"_id\": 0})"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Hispanic FROM city WHERE Black > 10",
    "mongodb": "db.city.find({\"Black\": {\"$gt\": 10}}, {\"Hispanic\": 1, \"_id\": 0})"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Hispanic FROM city WHERE Black > 10",
    "mongodb": "db.city.find({\"Black\": {\"$gt\": 10}}, {\"Hispanic\": 1, \"_id\": 0})"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Hispanic FROM city WHERE Black > 10",
    "mongodb": "db.city.find({\"Black\": {\"$gt\": 10}}, {\"Hispanic\": 1, \"_id\": 0})"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Hispanic FROM city WHERE Black > 10",
    "mongodb": "db.city.find({\"Black\": {\"$gt\": 10}}, {\"Hispanic\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid FROM employee EXCEPT SELECT eid FROM certificate",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT eid FROM employee EXCEPT SELECT eid FROM certificate', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DISTINCT Fname FROM Student JOIN Enrolled_in ON Student.StuID = Enrolled_in.StuID JOIN Gradeconversion ON Enrolled_in.Grade = Gradeconversion.lettergrade WHERE Gradeconversion.gradepoint >= 3.8;",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"gradepoint\": {\"$gte\": 3.8}}}, {\"$lookup\": {\"from\": \"Enrolled_in\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Enrolled_in\"}}, {\"$unwind\": \"$Enrolled_in\"}, {\"$lookup\": {\"from\": \"Gradeconversion\", \"localField\": \"Grade\", \"foreignField\": \"lettergrade\", \"as\": \"Gradeconversion\"}}, {\"$unwind\": \"$Gradeconversion\"}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DISTINCT Fname FROM Student JOIN Enrolled_in ON Student.StuID = Enrolled_in.StuID JOIN Gradeconversion ON Enrolled_in.Grade = Gradeconversion.lettergrade WHERE Gradeconversion.gradepoint >= 3.8;",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"gradepoint\": {\"$gte\": 3.8}}}, {\"$lookup\": {\"from\": \"Enrolled_in\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Enrolled_in\"}}, {\"$unwind\": \"$Enrolled_in\"}, {\"$lookup\": {\"from\": \"Gradeconversion\", \"localField\": \"Grade\", \"foreignField\": \"lettergrade\", \"as\": \"Gradeconversion\"}}, {\"$unwind\": \"$Gradeconversion\"}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DISTINCT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Enrolled_in WHERE Grade IN (SELECT lettergrade FROM Gradeconversion WHERE gradepoint >= 3.8))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT DISTINCT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Enrolled_in WHERE Grade IN (SELECT lettergrade FROM Gradeconversion WHERE gradepoint >= 3.8))', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DISTINCT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Enrolled_in WHERE Grade IN (SELECT lettergrade FROM Gradeconversion WHERE gradepoint >= 3.8))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT DISTINCT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Enrolled_in WHERE Grade IN (SELECT lettergrade FROM Gradeconversion WHERE gradepoint >= 3.8))', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DISTINCT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Enrolled_in WHERE Grade IN (SELECT lettergrade FROM Gradeconversion WHERE gradepoint >= 3.8))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT DISTINCT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Enrolled_in WHERE Grade IN (SELECT lettergrade FROM Gradeconversion WHERE gradepoint >= 3.8))', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT DISTINCT Police_force FROM county_public_safety WHERE Location != \"East\"",
    "mongodb": "db.county_public_safety.distinct(\"Police_force\", {\"$lookup\": {\"from\": \"\", \"localField\": \"Location\", \"foreignField\": \"East\"}})"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT DISTINCT Police_force FROM county_public_safety WHERE Location != \"East\"",
    "mongodb": "db.county_public_safety.distinct(\"Police_force\", {\"$lookup\": {\"from\": \"\", \"localField\": \"Location\", \"foreignField\": \"East\"}})"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT DISTINCT Police_force FROM county_public_safety WHERE Location != \"East\"",
    "mongodb": "db.county_public_safety.distinct(\"Police_force\", {\"$lookup\": {\"from\": \"\", \"localField\": \"Location\", \"foreignField\": \"East\"}})"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT DISTINCT Police_force FROM county_public_safety WHERE Location != \"East\"",
    "mongodb": "db.county_public_safety.distinct(\"Police_force\", {\"$lookup\": {\"from\": \"\", \"localField\": \"Location\", \"foreignField\": \"East\"}})"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Police_force FROM county_public_safety WHERE Location != 'East'",
    "mongodb": "db.county_public_safety.find({\"Location\": {\"$ne\": \"East\"}}, {\"Police_force\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT count(*) FROM film WHERE Title LIKE \"%Dummy%\"",
    "mongodb": "db.film.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Title\", \"foreignField\": \"%Dummy%\"}}, {}).count()"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT count(*) FROM film WHERE Title LIKE \"%Dummy%\"",
    "mongodb": "db.film.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Title\", \"foreignField\": \"%Dummy%\"}}, {}).count()"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT count(*) FROM film WHERE Title LIKE \"%Dummy%\"",
    "mongodb": "db.film.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Title\", \"foreignField\": \"%Dummy%\"}}, {}).count()"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT count(*) FROM film WHERE Title LIKE \"%Dummy%\"",
    "mongodb": "db.film.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Title\", \"foreignField\": \"%Dummy%\"}}, {}).count()"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT count(*) FROM film WHERE Title LIKE \"%Dummy%\"",
    "mongodb": "db.film.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Title\", \"foreignField\": \"%Dummy%\"}}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Advisor FROM Student GROUP BY Advisor ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T2.Fname, T2.LName FROM Student AS T1 JOIN Faculty AS T2 ON T1.Advisor = T2.FacID GROUP BY T1.Advisor ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Faculty | body={'db': 'allergy_1', 'sql': 'SELECT T2.Fname, T2.LName FROM Student AS T1 JOIN Faculty AS T2 ON T1.Advisor = T2.FacID GROUP BY T1.Advisor ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Faculty'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Advisor, COUNT(StuID) AS StudentCount FROM Student GROUP BY Advisor ORDER BY StudentCount DESC LIMIT 1",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Advisor\": \"$Advisor\"}, \"StudentCount\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$StuID\", null]}, 1, 0]}}}}, {\"$sort\": {\"StudentCount\": -1}}, {\"$limit\": 1}, {\"$project\": {\"Advisor\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN (SELECT Advisor, COUNT(*) AS num_students FROM Student GROUP BY Advisor ORDER BY num_students DESC LIMIT 1) AS T2 ON T1.Advisor = T2.Advisor",
    "mongodb": ""
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Projects",
    "mongodb": "db.Projects.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Projects",
    "mongodb": "db.Projects.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Projects;",
    "mongodb": "db.Projects.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Projects",
    "mongodb": "db.Projects.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Projects",
    "mongodb": "db.Projects.find({}, {}).count()"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Manager_Name FROM gas_station WHERE Open_Year > 2000 GROUP BY Manager_Name ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Manager_Name FROM gas_station WHERE Open_Year > 2000 GROUP BY Manager_Name ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T1.Manager_Name FROM gas_station AS T1 JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID WHERE T1.Open_Year >= 2000 GROUP BY T1.Manager_Name ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT T1.Manager_Name FROM gas_station AS T1 JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID WHERE T1.Open_Year >= 2000 GROUP BY T1.Manager_Name ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T2.Manager_Name FROM gas_station AS T1 JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID WHERE T1.Open_Year > 2000 GROUP BY T2.Manager_Name ORDER BY COUNT(*) DESC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT T2.Manager_Name FROM gas_station AS T1 JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID WHERE T1.Open_Year > 2000 GROUP BY T2.Manager_Name ORDER BY COUNT(*) DESC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Manager_Name FROM gas_station WHERE Station_ID IN ( SELECT Station_ID FROM station_company WHERE Rank_of_the_Year > 2000 GROUP BY Station_ID ORDER BY count(*) DESC LIMIT 1 )",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT Manager_Name FROM gas_station WHERE Station_ID IN ( SELECT Station_ID FROM station_company WHERE Rank_of_the_Year > 2000 GROUP BY Station_ID ORDER BY count(*) DESC LIMIT 1 )', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT email_address , phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT email_address , phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT email_address , phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT email_address , phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT email_address, phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT email_address, phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT email_address, phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT email_address, phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT email_address, phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT email_address, phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Description FROM Ref_Budget_Codes WHERE Budget_Type_Code = \"ORG\"",
    "mongodb": "db.Ref_Budget_Codes.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Budget_Type_Code\", \"foreignField\": \"ORG\"}}, {\"Budget_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Description FROM Ref_Budget_Codes WHERE Budget_Type_Code = \"ORG\"",
    "mongodb": "db.Ref_Budget_Codes.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Budget_Type_Code\", \"foreignField\": \"ORG\"}}, {\"Budget_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Description FROM Ref_Budget_Codes WHERE Budget_Type_Code = \"ORG\";",
    "mongodb": "db.Ref_Budget_Codes.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Budget_Type_Code\", \"foreignField\": \"ORG\"}}, {\"Budget_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Description FROM Ref_Budget_Codes WHERE Budget_Type_Code = \"ORG\"",
    "mongodb": "db.Ref_Budget_Codes.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Budget_Type_Code\", \"foreignField\": \"ORG\"}}, {\"Budget_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Description FROM Ref_Budget_Codes WHERE Budget_Type_Code = 'ORG'",
    "mongodb": "db.Ref_Budget_Codes.find({\"Budget_Type_Code\": \"ORG\"}, {\"Budget_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT course_description FROM Courses WHERE course_name = \"database\"",
    "mongodb": "db.Courses.find({\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"database\"}}, {\"course_description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT course_description FROM Courses WHERE course_name = \"database\"",
    "mongodb": "db.Courses.find({\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"database\"}}, {\"course_description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT course_description FROM Courses WHERE course_name = \"database\"",
    "mongodb": "db.Courses.find({\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"database\"}}, {\"course_description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT course_description FROM Courses WHERE course_name = \"database\"",
    "mongodb": "db.Courses.find({\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"database\"}}, {\"course_description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT course_description FROM Courses WHERE course_name = \"database\"",
    "mongodb": "db.Courses.find({\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"database\"}}, {\"course_description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT POSITION FROM pilot WHERE Join_Year > 2005 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year < 2000",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Position FROM pilot WHERE Join_Year < 2000 UNION SELECT Position FROM pilot WHERE Join_Year > 2005",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Position FROM pilot WHERE Join_Year < 2000 INTERSECT SELECT Position FROM pilot WHERE Join_Year > 2005",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Position FROM pilot WHERE Join_Year < 2000 INTERSECT SELECT Position FROM pilot WHERE Join_Year > 2005",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT DISTINCT Position FROM pilot WHERE Pilot_ID IN (SELECT Pilot_ID FROM pilot WHERE Join_Year < 2000) OR Pilot_ID IN (SELECT Pilot_ID FROM pilot WHERE Join_Year > 2005)",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city FROM airports GROUP BY city HAVING count(*) = 2",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city FROM airports GROUP BY city HAVING COUNT(*) = 2",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city FROM airports GROUP BY city HAVING count(*) = 2;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city FROM airports GROUP BY city HAVING COUNT(*) = 2;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city FROM airports GROUP BY city HAVING count(*) = 2;",
    "mongodb": ""
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': 'SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)', 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': 'SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)', 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': 'SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN ( SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2 )",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': 'SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN ( SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2 )', 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name, contestant_number FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': 'SELECT contestant_name, contestant_number FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)', 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM actor WHERE Age != 20",
    "mongodb": "db.actor.find({\"age\": {\"$ne\": 20}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM actor WHERE Age != 20",
    "mongodb": "db.actor.find({\"age\": {\"$ne\": 20}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM actor WHERE Age < 20 OR Age > 20",
    "mongodb": "db.actor.find({\"$or\": [{\"age\": {\"$lt\": 20}}, {\"age\": {\"$gt\": 20}}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM actor WHERE age != 20",
    "mongodb": "db.actor.find({\"age\": {\"$ne\": 20}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM actor WHERE Age != 20",
    "mongodb": "db.actor.find({\"age\": {\"$ne\": 20}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT document_name , document_date FROM Documents AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'",
    "mongodb": "db.Documents.aggregate([{\"$match\": {\"Project_Details\": \"Graph Database project\"}}, {\"$lookup\": {\"from\": \"Projects\", \"localField\": \"Project_ID\", \"foreignField\": \"Project_ID\", \"as\": \"Projects\"}}, {\"$unwind\": \"$Projects\"}, {\"$project\": {\"document_name\": 1, \"document_date\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT document_name , document_date FROM Documents AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'",
    "mongodb": "db.Documents.aggregate([{\"$match\": {\"Project_Details\": \"Graph Database project\"}}, {\"$lookup\": {\"from\": \"Projects\", \"localField\": \"Project_ID\", \"foreignField\": \"Project_ID\", \"as\": \"Projects\"}}, {\"$unwind\": \"$Projects\"}, {\"$project\": {\"document_name\": 1, \"document_date\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Name, Document_Date FROM Documents WHERE Project_ID = (SELECT Project_ID FROM Projects WHERE Project_Details = 'Graph Database project')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT Document_Name, Document_Date FROM Documents WHERE Project_ID = (SELECT Project_ID FROM Projects WHERE Project_Details = 'Graph Database project')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Name, Document_Date FROM Documents WHERE Project_ID IN (SELECT Project_ID FROM Projects WHERE Project_Details = 'Graph Database project')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT Document_Name, Document_Date FROM Documents WHERE Project_ID IN (SELECT Project_ID FROM Projects WHERE Project_Details = 'Graph Database project')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Name, Document_Date FROM Documents WHERE Project_ID IN (SELECT Project_ID FROM Projects WHERE Project_Details = 'Graph Database project')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT Document_Name, Document_Date FROM Documents WHERE Project_ID IN (SELECT Project_ID FROM Projects WHERE Project_Details = 'Graph Database project')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT max(Age) , min(Age) FROM Student WHERE Major = 600",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"Major\": 600}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Age\"}, \"Expr1\": {\"$min\": \"$Age\"}}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT max(Age) , min(Age) FROM Student WHERE Major = 600",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"Major\": 600}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Age\"}, \"Expr1\": {\"$min\": \"$Age\"}}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT min(Age) as youngest_age, max(Age) as oldest_age FROM Student WHERE Major = 600",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"Major\": 600}}, {\"$group\": {\"_id\": null, \"youngest_age\": {\"$min\": \"$Age\"}, \"oldest_age\": {\"$max\": \"$Age\"}}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT max(Age), min(Age) FROM Student WHERE Major = 600",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"Major\": 600}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Age\"}, \"Expr1\": {\"$min\": \"$Age\"}}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT min(Age), max(Age) FROM Student WHERE Major = 600",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"Major\": 600}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$Age\"}, \"Expr1\": {\"$max\": \"$Age\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Founded FROM university WHERE Affiliation != 'Public' ORDER BY Founded DESC LIMIT 1",
    "mongodb": "db.university.find({\"Affiliation\": {\"$ne\": \"Public\"}}, {\"Founded\": 1, \"_id\": 0}).sort( {\"Founded\": -1} ).limit( 1 )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Founded FROM university WHERE Affiliation != 'Public' ORDER BY Founded DESC LIMIT 1",
    "mongodb": "db.university.find({\"Affiliation\": {\"$ne\": \"Public\"}}, {\"Founded\": 1, \"_id\": 0}).sort( {\"Founded\": -1} ).limit( 1 )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Founded FROM university WHERE Affiliation != 'Public' ORDER BY Founded DESC LIMIT 1",
    "mongodb": "db.university.find({\"Affiliation\": {\"$ne\": \"Public\"}}, {\"Founded\": 1, \"_id\": 0}).sort( {\"Founded\": -1} ).limit( 1 )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Founded FROM university WHERE Affiliation != 'Public' ORDER BY Founded DESC LIMIT 1",
    "mongodb": "db.university.find({\"Affiliation\": {\"$ne\": \"Public\"}}, {\"Founded\": 1, \"_id\": 0}).sort( {\"Founded\": -1} ).limit( 1 )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Founded FROM university WHERE Affiliation != 'Public' ORDER BY Founded DESC LIMIT 1",
    "mongodb": "db.university.find({\"Affiliation\": {\"$ne\": \"Public\"}}, {\"Founded\": 1, \"_id\": 0}).sort( {\"Founded\": -1} ).limit( 1 )"
  },
  {
    "db_id": "device",
    "sql": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(DISTINCT T1.Device_ID) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(DISTINCT T1.Device_ID) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(DISTINCT T1.Device_ID) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(DISTINCT T1.Device_ID) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN device AS T3 ON T1.Device_ID = T3.Device_ID GROUP BY T1.Shop_ID HAVING COUNT(DISTINCT T1.Device_ID) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN device AS T3 ON T1.Device_ID = T3.Device_ID GROUP BY T1.Shop_ID HAVING COUNT(DISTINCT T1.Device_ID) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_ID FROM stock GROUP BY Shop_ID HAVING COUNT(DISTINCT Device_ID) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Shop_ID FROM stock GROUP BY Shop_ID HAVING COUNT(DISTINCT Device_ID) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop WHERE Shop_ID IN (SELECT Shop_ID FROM stock GROUP BY Shop_ID HAVING COUNT(DISTINCT Device_ID) > 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Shop_Name FROM shop WHERE Shop_ID IN (SELECT Shop_ID FROM stock GROUP BY Shop_ID HAVING COUNT(DISTINCT Device_ID) > 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
    "mongodb": ""
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Age , COUNT(*) FROM editor GROUP BY Age",
    "mongodb": "db.editor.aggregate([{\"$group\": {\"_id\": {\"Age\": \"$Age\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Age\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Age, COUNT(*) FROM editor GROUP BY Age",
    "mongodb": "db.editor.aggregate([{\"$group\": {\"_id\": {\"Age\": \"$Age\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Age\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Age, COUNT(*) FROM editor GROUP BY Age",
    "mongodb": "db.editor.aggregate([{\"$group\": {\"_id\": {\"Age\": \"$Age\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Age\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Age, COUNT(*) FROM editor GROUP BY Age",
    "mongodb": "db.editor.aggregate([{\"$group\": {\"_id\": {\"Age\": \"$Age\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Age\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Age, COUNT(*) FROM editor GROUP BY Age",
    "mongodb": "db.editor.aggregate([{\"$group\": {\"_id\": {\"Age\": \"$Age\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Age\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes;",
    "mongodb": "db.Ref_Budget_Codes.find({}, {\"Budget_Type_Code\": 1, \"Budget_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes",
    "mongodb": "db.Ref_Budget_Codes.find({}, {\"Budget_Type_Code\": 1, \"Budget_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes",
    "mongodb": "db.Ref_Budget_Codes.find({}, {\"Budget_Type_Code\": 1, \"Budget_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes",
    "mongodb": "db.Ref_Budget_Codes.find({}, {\"Budget_Type_Code\": 1, \"Budget_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes",
    "mongodb": "db.Ref_Budget_Codes.find({}, {\"Budget_Type_Code\": 1, \"Budget_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE origin = \"Los Angeles\";",
    "mongodb": "db.flight.find({\"$lookup\": {\"from\": \"\", \"localField\": \"origin\", \"foreignField\": \"Los Angeles\"}}, {\"flno\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE origin = 'Los Angeles'",
    "mongodb": "db.flight.find({\"origin\": \"Los Angeles\"}, {\"flno\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE origin = 'Los Angeles';",
    "mongodb": "db.flight.find({\"origin\": \"Los Angeles\"}, {\"flno\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE origin = 'Los Angeles'",
    "mongodb": "db.flight.find({\"origin\": \"Los Angeles\"}, {\"flno\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT flno FROM flight WHERE origin = 'Los Angeles';",
    "mongodb": "db.flight.find({\"origin\": \"Los Angeles\"}, {\"flno\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Faculty WHERE Rank = \"Professor\" ORDER BY Fname;",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"Professor\" | body={'db': 'college_3', 'sql': 'SELECT Fname FROM Faculty WHERE Rank = \"Professor\" ORDER BY Fname;', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"Professor\"'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Faculty WHERE Rank = \"Professor\" ORDER BY Fname;",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"Professor\" | body={'db': 'college_3', 'sql': 'SELECT Fname FROM Faculty WHERE Rank = \"Professor\" ORDER BY Fname;', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"Professor\"'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Faculty ORDER BY Fname ASC;",
    "mongodb": "db.Faculty.find({}, {\"Fname\": 1, \"_id\": 0}).sort( {\"Fname\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Faculty WHERE Rank = 'Professor' ORDER BY Fname;",
    "mongodb": "ERROR: java.sql.SQLException: ClassCastException when changing type.  Value: Professor Current type: 12 New type: 4 | body={'db': 'college_3', 'sql': \"SELECT Fname FROM Faculty WHERE Rank = 'Professor' ORDER BY Fname;\", 'error': 'java.sql.SQLException: ClassCastException when changing type.  Value: Professor Current type: 12 New type: 4'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname FROM Faculty WHERE Rank = \"Professor\" ORDER BY Fname;",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"Professor\" | body={'db': 'college_3', 'sql': 'SELECT Fname FROM Faculty WHERE Rank = \"Professor\" ORDER BY Fname;', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"Professor\"'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students",
    "mongodb": ""
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students",
    "mongodb": ""
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.personal_name FROM Course_Authors_and_Tutors AS T1 JOIN Students AS T2 ON T1.personal_name = T2.personal_name",
    "mongodb": "db.Course_Authors_and_Tutors.aggregate([{\"$lookup\": {\"from\": \"Students\", \"localField\": \"personal_name\", \"foreignField\": \"personal_name\", \"as\": \"Students\"}}, {\"$unwind\": \"$Students\"}, {\"$project\": {\"personal_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name FROM Course_Authors_and_Tutors WHERE personal_name IN (SELECT personal_name FROM Students)",
    "mongodb": ""
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students",
    "mongodb": ""
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
    "mongodb": "db.county_public_safety.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Population\": -1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
    "mongodb": "db.county_public_safety.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Population\": -1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
    "mongodb": "db.county_public_safety.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Population\": -1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
    "mongodb": "db.county_public_safety.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Population\": -1} )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
    "mongodb": "db.county_public_safety.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Population\": -1} )"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT count(DISTINCT complaint_type_code) FROM Complaints",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT count(DISTINCT complaint_type_code) FROM Complaints', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT COUNT(DISTINCT complaint_type_code) FROM Complaints;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT COUNT(DISTINCT complaint_type_code) FROM Complaints;', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT count(DISTINCT complaint_type_code) FROM Complaints",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT count(DISTINCT complaint_type_code) FROM Complaints', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT count(DISTINCT complaint_type_code) FROM Complaints",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT count(DISTINCT complaint_type_code) FROM Complaints', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT complaint_type_code, count(*) FROM Complaints GROUP BY complaint_type_code;",
    "mongodb": "db.Complaints.aggregate([{\"$group\": {\"_id\": {\"complaint_type_code\": \"$complaint_type_code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"complaint_type_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.city_code = \"NYC\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.city_code = \"NYC\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.city_code = \"NYC\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.city_code = \"NYC\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.city_code = \"NYC\"",
    "mongodb": "ERROR: HTTP 500 | body={'mongo': \"ERROR: Invalid control character '\\\\n' at: line 1 column 363 (char 362)\"}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.city_code = \"NYC\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.city_code = \"NYC\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT max(gradepoint) , min(gradepoint) FROM Student AS s JOIN Minor_in AS m ON s.StuID = m.StuID JOIN Department AS d ON m.DNO = d.DNO WHERE s.city_code = \"NYC\"",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"NYC\"}}}, {\"$lookup\": {\"from\": \"Minor_in\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Minor_in\"}}, {\"$unwind\": \"$Minor_in\"}, {\"$lookup\": {\"from\": \"Department\", \"localField\": \"DNO\", \"foreignField\": \"DNO\", \"as\": \"Department\"}}, {\"$unwind\": \"$Department\"}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$gradepoint\"}, \"Expr1\": {\"$min\": \"$gradepoint\"}}}])"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT count(*) , flag FROM ship GROUP BY flag",
    "mongodb": "db.Ship.aggregate([{\"$group\": {\"_id\": {\"Flag\": \"$Flag\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$project\": {\"Flag\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT COUNT(*) , Flag FROM Ship GROUP BY Flag",
    "mongodb": "db.Ship.aggregate([{\"$group\": {\"_id\": {\"Flag\": \"$Flag\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$project\": {\"Flag\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT count(*) , Flag FROM Ship GROUP BY Flag",
    "mongodb": "db.Ship.aggregate([{\"$group\": {\"_id\": {\"Flag\": \"$Flag\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$project\": {\"Flag\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Flag, COUNT(*) FROM Ship GROUP BY Flag",
    "mongodb": "db.Ship.aggregate([{\"$group\": {\"_id\": {\"Flag\": \"$Flag\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Flag\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Flag, COUNT(*) FROM Ship GROUP BY Flag",
    "mongodb": "db.Ship.aggregate([{\"$group\": {\"_id\": {\"Flag\": \"$Flag\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Flag\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": -1} ).limit( 1 )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": -1} ).limit( 1 )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": -1} ).limit( 1 )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": -1} ).limit( 1 )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": -1} ).limit( 1 )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = \"The Phantom of the Opera\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"The Phantom of the Opera\" | body={'db': 'musical', 'sql': 'SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = \"The Phantom of the Opera\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"The Phantom of the Opera\"'}"
  },
  {
    "db_id": "musical",
    "sql": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = \"The Phantom of the Opera\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"The Phantom of the Opera\" | body={'db': 'musical', 'sql': 'SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = \"The Phantom of the Opera\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"The Phantom of the Opera\"'}"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM actor WHERE Musical_ID IN (SELECT Musical_ID FROM musical WHERE Name = \"The Phantom of the Opera\")",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"The Phantom of the Opera\" | body={'db': 'musical', 'sql': 'SELECT Name FROM actor WHERE Musical_ID IN (SELECT Musical_ID FROM musical WHERE Name = \"The Phantom of the Opera\")', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"The Phantom of the Opera\"'}"
  },
  {
    "db_id": "musical",
    "sql": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = \"The Phantom of the Opera\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"The Phantom of the Opera\" | body={'db': 'musical', 'sql': 'SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = \"The Phantom of the Opera\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"The Phantom of the Opera\"'}"
  },
  {
    "db_id": "musical",
    "sql": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = \"The Phantom of the Opera\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"The Phantom of the Opera\" | body={'db': 'musical', 'sql': 'SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = \"The Phantom of the Opera\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"The Phantom of the Opera\"'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT T3.Pilot_name , T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID",
    "mongodb": "db.pilot_record.aggregate([{\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"Aircraft_ID\", \"foreignField\": \"Aircraft_ID\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$lookup\": {\"from\": \"pilot\", \"localField\": \"Pilot_ID\", \"foreignField\": \"Pilot_ID\", \"as\": \"pilot\"}}, {\"$unwind\": \"$pilot\"}, {\"$project\": {\"Pilot_name\": 1, \"Model\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT T2.Pilot_name, T1.Model FROM pilot_record AS T3 JOIN aircraft AS T1 ON T3.Aircraft_ID = T1.Aircraft_ID JOIN pilot AS T2 ON T3.Pilot_ID = T2.Pilot_ID;",
    "mongodb": "db.pilot_record.aggregate([{\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"Aircraft_ID\", \"foreignField\": \"Aircraft_ID\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$lookup\": {\"from\": \"pilot\", \"localField\": \"Pilot_ID\", \"foreignField\": \"Pilot_ID\", \"as\": \"pilot\"}}, {\"$unwind\": \"$pilot\"}, {\"$project\": {\"Pilot_name\": 1, \"Model\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT T2.Pilot_name, T1.Model FROM pilot_record AS T3 JOIN pilot AS T2 ON T3.Pilot_ID = T2.Pilot_ID JOIN aircraft AS T1 ON T3.Aircraft_ID = T1.Aircraft_ID;",
    "mongodb": "db.pilot_record.aggregate([{\"$lookup\": {\"from\": \"pilot\", \"localField\": \"Pilot_ID\", \"foreignField\": \"Pilot_ID\", \"as\": \"pilot\"}}, {\"$unwind\": \"$pilot\"}, {\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"Aircraft_ID\", \"foreignField\": \"Aircraft_ID\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$project\": {\"Pilot_name\": 1, \"Model\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT T2.Pilot_name, T1.Model FROM aircraft AS T1 JOIN pilot_record AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID;",
    "mongodb": "db.aircraft.aggregate([{\"$lookup\": {\"from\": \"pilot_record\", \"localField\": \"Aircraft_ID\", \"foreignField\": \"Aircraft_ID\", \"as\": \"pilot_record\"}}, {\"$unwind\": \"$pilot_record\"}, {\"$project\": {\"Pilot_name\": 1, \"Model\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT T2.Pilot_name, T1.Model FROM pilot_record AS T3 JOIN aircraft AS T1 ON T3.Aircraft_ID = T1.Aircraft_ID JOIN pilot AS T2 ON T3.Pilot_ID = T2.Pilot_ID;",
    "mongodb": "db.pilot_record.aggregate([{\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"Aircraft_ID\", \"foreignField\": \"Aircraft_ID\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$lookup\": {\"from\": \"pilot\", \"localField\": \"Pilot_ID\", \"foreignField\": \"Pilot_ID\", \"as\": \"pilot\"}}, {\"$unwind\": \"$pilot\"}, {\"$project\": {\"Pilot_name\": 1, \"Model\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Course WHERE Credits > 2;",
    "mongodb": "db.Course.find({\"Credits\": {\"$gt\": 2}}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT COUNT(*) FROM Course WHERE Credits > 2;",
    "mongodb": "db.Course.find({\"Credits\": {\"$gt\": 2}}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Course WHERE Credits > 2",
    "mongodb": "db.Course.find({\"Credits\": {\"$gt\": 2}}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Course WHERE Credits > 2",
    "mongodb": "db.Course.find({\"Credits\": {\"$gt\": 2}}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT count(*) FROM Course WHERE Credits > 2;",
    "mongodb": "db.Course.find({\"Credits\": {\"$gt\": 2}}, {}).count()"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT LOCATION, COUNT(*) FROM cinema GROUP BY LOCATION;",
    "mongodb": "db.cinema.aggregate([{\"$group\": {\"_id\": {\"Location\": \"$Location\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location, COUNT(*) FROM cinema GROUP BY Location",
    "mongodb": "db.cinema.aggregate([{\"$group\": {\"_id\": {\"Location\": \"$Location\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location, COUNT(*) FROM cinema GROUP BY Location",
    "mongodb": "db.cinema.aggregate([{\"$group\": {\"_id\": {\"Location\": \"$Location\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location, COUNT(*) FROM cinema GROUP BY Location",
    "mongodb": "db.cinema.aggregate([{\"$group\": {\"_id\": {\"Location\": \"$Location\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location, COUNT(*) FROM cinema GROUP BY Location",
    "mongodb": "db.cinema.aggregate([{\"$group\": {\"_id\": {\"Location\": \"$Location\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.statement_details , T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id = T2.document_id WHERE T1.statement_details = 'Private Project'",
    "mongodb": "db.Statements.aggregate([{\"$match\": {\"statement_details\": \"Private Project\"}}, {\"$lookup\": {\"from\": \"Documents\", \"localField\": \"statement_id\", \"foreignField\": \"document_id\", \"as\": \"Documents\"}}, {\"$unwind\": \"$Documents\"}, {\"$project\": {\"statement_details\": 1, \"document_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.statement_details, T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id = T2.document_id WHERE T1.statement_details = 'Private Project'",
    "mongodb": "db.Statements.aggregate([{\"$match\": {\"statement_details\": \"Private Project\"}}, {\"$lookup\": {\"from\": \"Documents\", \"localField\": \"statement_id\", \"foreignField\": \"document_id\", \"as\": \"Documents\"}}, {\"$unwind\": \"$Documents\"}, {\"$project\": {\"statement_details\": 1, \"document_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT t2.Statement_Details, t1.Document_Name FROM Statements AS t2 JOIN Documents AS t1 ON t2.Statement_ID = t1.Document_ID WHERE t1.Document_Type_Code = (SELECT Document_Type_Code FROM Ref_Document_Types WHERE Document_Type_Name = 'Private Project')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Statements | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT t2.Statement_Details, t1.Document_Name FROM Statements AS t2 JOIN Documents AS t1 ON t2.Statement_ID = t1.Document_ID WHERE t1.Document_Type_Code = (SELECT Document_Type_Code FROM Ref_Document_Types WHERE Document_Type_Name = 'Private Project')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Statements'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT S.Statement_Details, D.Document_Name FROM Statements AS S JOIN Documents AS D ON S.Statement_ID = D.Document_ID JOIN Ref_Document_Types AS R ON D.Document_Type_Code = R.Document_Type_Code WHERE R.Document_Type_Name = 'Private Project'",
    "mongodb": "db.Statements.aggregate([{\"$match\": {\"Document_Type_Name\": \"Private Project\"}}, {\"$lookup\": {\"from\": \"Documents\", \"localField\": \"Statement_ID\", \"foreignField\": \"Document_ID\", \"as\": \"Documents\"}}, {\"$unwind\": \"$Documents\"}, {\"$lookup\": {\"from\": \"Ref_Document_Types\", \"localField\": \"Document_Type_Code\", \"foreignField\": \"Document_Type_Code\", \"as\": \"Ref_Document_Types\"}}, {\"$unwind\": \"$Ref_Document_Types\"}, {\"$project\": {\"Statement_Details\": 1, \"Document_Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Statement_Details, T2.Document_Name FROM Statements AS T1 JOIN Documents AS T2 ON T1.Statement_ID = T2.Document_ID WHERE T1.Statement_Details = 'Private Project'",
    "mongodb": "db.Statements.aggregate([{\"$match\": {\"Statement_Details\": \"Private Project\"}}, {\"$lookup\": {\"from\": \"Documents\", \"localField\": \"Statement_ID\", \"foreignField\": \"Document_ID\", \"as\": \"Documents\"}}, {\"$unwind\": \"$Documents\"}, {\"$project\": {\"Statement_Details\": 1, \"Document_Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*) > 1",
    "mongodb": ""
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*) > 1",
    "mongodb": ""
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination, COUNT(*) FROM school GROUP BY Denomination HAVING COUNT(*) > 1",
    "mongodb": ""
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*) > 1",
    "mongodb": ""
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*) > 1",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain ORDER BY Name ASC",
    "mongodb": "db.mountain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain ORDER BY Name ASC",
    "mongodb": "db.mountain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain ORDER BY Name ASC",
    "mongodb": "db.mountain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain ORDER BY Name ASC",
    "mongodb": "db.mountain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain ORDER BY Name",
    "mongodb": "db.mountain.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Rank FROM company ORDER BY Sales_billion DESC;",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Rank FROM company ORDER BY Sales_billion DESC;",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Rank FROM company ORDER BY Sales_billion DESC",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Rank FROM company ORDER BY Sales_billion DESC",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Rank, Sales_billion FROM company ORDER BY Sales_billion DESC",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' INTERSECT SELECT Headquarters FROM company WHERE Main_Industry = 'Oil and gas'",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' INTERSECT SELECT Headquarters FROM company WHERE Main_Industry = 'Oil and gas'",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' INTERSECT SELECT Headquarters FROM company WHERE Main_Industry = 'Oil and gas'",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' INTERSECT SELECT Headquarters FROM company WHERE Main_Industry = 'Oil & Gas'",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Company_ID IN ( SELECT Company_ID FROM station_company WHERE Company_ID IN ( SELECT Company_ID FROM company WHERE Main_Industry = 'Banking' ) AND Company_ID IN ( SELECT Company_ID FROM company WHERE Main_Industry = 'Oil and gas' ) )",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': \"SELECT Headquarters FROM company WHERE Company_ID IN ( SELECT Company_ID FROM station_company WHERE Company_ID IN ( SELECT Company_ID FROM company WHERE Main_Industry = 'Banking' ) AND Company_ID IN ( SELECT Company_ID FROM company WHERE Main_Industry = 'Oil and gas' ) )\", 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT document_type_code, document_name, document_description FROM Documents WHERE document_name = 'Noel CV' OR document_name = 'King Book'",
    "mongodb": "db.Documents.find({\"$or\": [{\"document_name\": \"Noel CV\"}, {\"document_name\": \"King Book\"}]}, {\"document_type_code\": 1, \"document_name\": 1, \"document_description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT document_type_code , document_name , document_description FROM Documents WHERE document_name = 'Noel CV' OR document_name = 'King Book'",
    "mongodb": "db.Documents.find({\"$or\": [{\"document_name\": \"Noel CV\"}, {\"document_name\": \"King Book\"}]}, {\"document_type_code\": 1, \"document_name\": 1, \"document_description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, Document_Name, Document_Description FROM Documents WHERE Document_Name = 'Noel CV' OR Document_Name = 'King Book';",
    "mongodb": "db.Documents.find({\"$or\": [{\"Document_Name\": \"Noel CV\"}, {\"Document_Name\": \"King Book\"}]}, {\"Document_Type_Code\": 1, \"Document_Name\": 1, \"Document_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, Document_Name, Document_Description FROM Documents WHERE Document_Name = 'Noel CV' OR Document_Name = 'King Book';",
    "mongodb": "db.Documents.find({\"$or\": [{\"Document_Name\": \"Noel CV\"}, {\"Document_Name\": \"King Book\"}]}, {\"Document_Type_Code\": 1, \"Document_Name\": 1, \"Document_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code, Document_Name, Document_Description FROM Documents WHERE Document_Name = 'Noel CV' OR Document_Name = 'King Book'",
    "mongodb": "db.Documents.find({\"$or\": [{\"Document_Name\": \"Noel CV\"}, {\"Document_Name\": \"King Book\"}]}, {\"Document_Type_Code\": 1, \"Document_Name\": 1, \"Document_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_allergy | body={'db': 'allergy_1', 'sql': 'SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airports WHERE name LIKE '%International%'",
    "mongodb": "db.airports.find({\"name\": {\"$regularExpression\": {\"pattern\": \"^.*International.*$\", \"options\": \"\"}}}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airports WHERE name LIKE '%International%'",
    "mongodb": "db.airports.find({\"name\": {\"$regularExpression\": {\"pattern\": \"^.*International.*$\", \"options\": \"\"}}}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airports WHERE name LIKE \"%International%\"",
    "mongodb": "db.airports.find({\"$lookup\": {\"from\": \"\", \"localField\": \"name\", \"foreignField\": \"%International%\"}}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airports WHERE name LIKE \"%International%\"",
    "mongodb": "db.airports.find({\"$lookup\": {\"from\": \"\", \"localField\": \"name\", \"foreignField\": \"%International%\"}}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airports WHERE name LIKE '%International%'",
    "mongodb": "db.airports.find({\"name\": {\"$regularExpression\": {\"pattern\": \"^.*International.*$\", \"options\": \"\"}}}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student WHERE Age = 18",
    "mongodb": "db.Student.find({\"Age\": 18}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student WHERE Age = 18;",
    "mongodb": "db.Student.find({\"Age\": 18}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student WHERE Age = 18",
    "mongodb": "db.Student.find({\"Age\": 18}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student WHERE Age = 18;",
    "mongodb": "db.Student.find({\"Age\": 18}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student WHERE Age = 18",
    "mongodb": "db.Student.find({\"Age\": 18}, {}).count()"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': \"SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': \"SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': \"SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': \"SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': \"SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT AVG(Price) , AVG(Cases) FROM wine WHERE Year = 2009 AND Grape = \"Zinfandel\"",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Grape\", \"foreignField\": \"Zinfandel\"}, \"Year\": 2009}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Price\"}, \"Expr1\": {\"$avg\": \"$Cases\"}}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT AVG(Price) , AVG(Cases) FROM wine WHERE Year = 2009 AND Grape = \"Zinfandel\"",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Grape\", \"foreignField\": \"Zinfandel\"}, \"Year\": 2009}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Price\"}, \"Expr1\": {\"$avg\": \"$Cases\"}}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT avg(Price), avg(Cases) FROM wine WHERE Grape = 'Zinfandel' AND Year = 2009",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"Year\": 2009, \"Grape\": \"Zinfandel\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Price\"}, \"Expr1\": {\"$avg\": \"$Cases\"}}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT AVG(Cases), AVG(Price) FROM wine WHERE Grape = 'Zinfandel' AND Year = 2009;",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"Year\": 2009, \"Grape\": \"Zinfandel\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Cases\"}, \"Expr1\": {\"$avg\": \"$Price\"}}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT avg(Price), sum(Cases) FROM wine WHERE Grape = 'Zinfandel' AND Year = 2009",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"Year\": 2009, \"Grape\": \"Zinfandel\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Price\"}, \"Expr1\": {\"$sum\": \"$Cases\"}}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major, COUNT(*) AS Total_Students FROM Student GROUP BY Major ORDER BY Total_Students DESC LIMIT 1",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Major\": \"$Major\"}, \"Total_Students\": {\"$sum\": 1}}}, {\"$sort\": {\"Total_Students\": -1}}, {\"$limit\": 1}, {\"$project\": {\"Major\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major, COUNT(*) AS Enrollment FROM Student GROUP BY Major ORDER BY Enrollment DESC LIMIT 1",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Major\": \"$Major\"}, \"Enrollment\": {\"$sum\": 1}}}, {\"$sort\": {\"Enrollment\": -1}}, {\"$limit\": 1}, {\"$project\": {\"Major\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Major FROM Student GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
    "mongodb": "db.technician.find({}, {\"Starting_Year\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
    "mongodb": "db.technician.find({}, {\"Starting_Year\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
    "mongodb": "db.technician.find({}, {\"Starting_Year\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
    "mongodb": "db.technician.find({}, {\"Starting_Year\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
    "mongodb": "db.technician.find({}, {\"Starting_Year\": 1, \"_id\": 0}).sort( {\"Age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Boeing 737-800\" INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Airbus A340-300\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Boeing 737-800\" INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Airbus A340-300\"', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Airbus A340-300';",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': \"SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Airbus A340-300';\", 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T2.aid = T3.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T2.aid = T3.aid WHERE T3.name = 'Airbus A340-300'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': \"SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T2.aid = T3.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T2.aid = T3.aid WHERE T3.name = 'Airbus A340-300'\", 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Airbus A340-300'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': \"SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Airbus A340-300'\", 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Boeing 737-800\" INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Airbus A340-300\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Boeing 737-800\" INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Airbus A340-300\"', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Main_Industry FROM company WHERE Headquarters != 'USA'",
    "mongodb": "db.company.find({\"Headquarters\": {\"$ne\": \"USA\"}}, {\"Company\": 1, \"Main_Industry\": 1, \"_id\": 0})"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Main_Industry FROM company WHERE Headquarters != 'USA'",
    "mongodb": "db.company.find({\"Headquarters\": {\"$ne\": \"USA\"}}, {\"Company\": 1, \"Main_Industry\": 1, \"_id\": 0})"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Main_Industry FROM company WHERE Headquarters NOT LIKE '%USA%'",
    "mongodb": "db.company.find({\"Headquarters\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*USA.*$\", \"options\": \"\"}}}}, {\"Company\": 1, \"Main_Industry\": 1, \"_id\": 0})"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Main_Industry FROM company WHERE Headquarters != 'USA';",
    "mongodb": "db.company.find({\"Headquarters\": {\"$ne\": \"USA\"}}, {\"Company\": 1, \"Main_Industry\": 1, \"_id\": 0})"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Main_Industry FROM company WHERE Headquarters != 'USA'",
    "mongodb": "db.company.find({\"Headquarters\": {\"$ne\": \"USA\"}}, {\"Company\": 1, \"Main_Industry\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT COUNT(DISTINCT Country) FROM climber",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT COUNT(DISTINCT Country) FROM climber', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT COUNT(DISTINCT Country) FROM climber",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT COUNT(DISTINCT Country) FROM climber', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT count(DISTINCT Country) FROM climber",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT count(DISTINCT Country) FROM climber', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT COUNT(DISTINCT Country) FROM climber",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT COUNT(DISTINCT Country) FROM climber', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT COUNT(DISTINCT Country) FROM climber",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT COUNT(DISTINCT Country) FROM climber', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "musical",
    "sql": "SELECT count(*) FROM actor",
    "mongodb": "db.actor.find({}, {}).count()"
  },
  {
    "db_id": "musical",
    "sql": "SELECT count(*) FROM actor",
    "mongodb": "db.actor.find({}, {}).count()"
  },
  {
    "db_id": "musical",
    "sql": "SELECT count(*) FROM actor",
    "mongodb": "db.actor.find({}, {}).count()"
  },
  {
    "db_id": "musical",
    "sql": "SELECT count(*) FROM actor",
    "mongodb": "db.actor.find({}, {}).count()"
  },
  {
    "db_id": "musical",
    "sql": "SELECT count(*) FROM actor",
    "mongodb": "db.actor.find({}, {}).count()"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Price FROM wine WHERE Year < 2010",
    "mongodb": "db.wine.find({\"Year\": {\"$lt\": 2010}}, {\"Price\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Price FROM wine WHERE Year < 2010",
    "mongodb": "db.wine.find({\"Year\": {\"$lt\": 2010}}, {\"Price\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Price FROM wine WHERE Year < 2010",
    "mongodb": "db.wine.find({\"Year\": {\"$lt\": 2010}}, {\"Price\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Price FROM wine WHERE Year < 2010",
    "mongodb": "db.wine.find({\"Year\": {\"$lt\": 2010}}, {\"Price\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Price FROM wine WHERE Year < 2010",
    "mongodb": "db.wine.find({\"Year\": {\"$lt\": 2010}}, {\"Price\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) , city FROM airports WHERE country = 'United States' GROUP BY city ORDER BY count(*) DESC;",
    "mongodb": "db.airports.aggregate([{\"$match\": {\"country\": \"United States\"}}, {\"$group\": {\"_id\": {\"city\": \"$city\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr0\": -1}}, {\"$project\": {\"city\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) , city FROM airports WHERE country = 'United States' GROUP BY city ORDER BY count(*) DESC",
    "mongodb": "db.airports.aggregate([{\"$match\": {\"country\": \"United States\"}}, {\"$group\": {\"_id\": {\"city\": \"$city\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr0\": -1}}, {\"$project\": {\"city\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) , city FROM airports WHERE country = 'United States' GROUP BY city ORDER BY count(*) DESC",
    "mongodb": "db.airports.aggregate([{\"$match\": {\"country\": \"United States\"}}, {\"$group\": {\"_id\": {\"city\": \"$city\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr0\": -1}}, {\"$project\": {\"city\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city, count(*) as num_airports FROM airports WHERE country = \"United States\" GROUP BY city ORDER BY num_airports DESC;",
    "mongodb": "db.airports.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"country\", \"foreignField\": \"United States\"}}}, {\"$group\": {\"_id\": {\"city\": \"$city\"}, \"num_airports\": {\"$sum\": 1}}}, {\"$sort\": {\"num_airports\": -1}}, {\"$project\": {\"city\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*), city FROM airports WHERE country = 'United States' GROUP BY city ORDER BY count(*) DESC;",
    "mongodb": "db.airports.aggregate([{\"$match\": {\"country\": \"United States\"}}, {\"$group\": {\"_id\": {\"city\": \"$city\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr0\": -1}}, {\"$project\": {\"city\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*) FROM university WHERE School_ID NOT IN (SELECT School_ID FROM basketball_match)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT count(*) FROM university WHERE School_ID NOT IN (SELECT School_ID FROM basketball_match)', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*) FROM university WHERE School_ID NOT IN (SELECT School_ID FROM basketball_match)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT count(*) FROM university WHERE School_ID NOT IN (SELECT School_ID FROM basketball_match)', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT MAX(Price), MAX(Score), Year FROM wine GROUP BY Year;",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Year\": \"$Year\"}, \"Expr0\": {\"$max\": \"$Price\"}, \"Expr1\": {\"$max\": \"$Score\"}}}, {\"$project\": {\"Year\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT MAX(Price), MAX(Score), Year FROM wine GROUP BY Year;",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Year\": \"$Year\"}, \"Expr0\": {\"$max\": \"$Price\"}, \"Expr1\": {\"$max\": \"$Score\"}}}, {\"$project\": {\"Year\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT max(Price) , max(Score) , Year FROM wine GROUP BY Year",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Year\": \"$Year\"}, \"Expr0\": {\"$max\": \"$Price\"}, \"Expr1\": {\"$max\": \"$Score\"}}}, {\"$project\": {\"Year\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Year, MAX(Price) AS Highest_Price, MAX(Score) AS Highest_Score FROM wine GROUP BY Year",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Year\": \"$Year\"}, \"Highest_Price\": {\"$max\": \"$Price\"}, \"Highest_Score\": {\"$max\": \"$Score\"}}}, {\"$project\": {\"Year\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT max(Price), max(Score), Year FROM wine GROUP BY Year",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Year\": \"$Year\"}, \"Expr0\": {\"$max\": \"$Price\"}, \"Expr1\": {\"$max\": \"$Score\"}}}, {\"$project\": {\"Year\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT department_id, SUM(salary) FROM employees GROUP BY department_id HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT department_id, SUM(salary) FROM employees GROUP BY department_id HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT department_id, SUM(salary) FROM employees GROUP BY department_id HAVING COUNT(*) > 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT department_id, SUM(salary) FROM employees GROUP BY department_id HAVING COUNT(*) > 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT DEPARTMENT_ID, SUM(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID HAVING COUNT(*) >= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: EMPLOYEES | body={'db': 'hr_1', 'sql': 'SELECT DEPARTMENT_ID, SUM(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID HAVING COUNT(*) >= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: EMPLOYEES'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT DEPARTMENT_ID, SUM(SALARY) FROM employees GROUP BY DEPARTMENT_ID HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT DEPARTMENT_ID, SUM(SALARY) FROM employees GROUP BY DEPARTMENT_ID HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT DEPARTMENT_ID, SUM(SALARY) FROM employees GROUP BY DEPARTMENT_ID HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT DEPARTMENT_ID, SUM(SALARY) FROM employees GROUP BY DEPARTMENT_ID HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Built_Year FROM Ship GROUP BY Built_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Built_Year FROM Ship GROUP BY Built_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Built_Year FROM Ship GROUP BY Built_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Built_Year FROM Ship GROUP BY Built_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Built_Year FROM Ship GROUP BY Built_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid, salary FROM employee WHERE name = 'Mark Young';",
    "mongodb": "db.employee.find({\"name\": \"Mark Young\"}, {\"eid\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid, salary FROM employee WHERE name = 'Mark Young';",
    "mongodb": "db.employee.find({\"name\": \"Mark Young\"}, {\"eid\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid, salary FROM employee WHERE name = 'Mark Young'",
    "mongodb": "db.employee.find({\"name\": \"Mark Young\"}, {\"eid\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid, salary FROM employee WHERE name = 'Mark Young';",
    "mongodb": "db.employee.find({\"name\": \"Mark Young\"}, {\"eid\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid, salary FROM employee WHERE name = \"Mark Young\"",
    "mongodb": "db.employee.find({\"$lookup\": {\"from\": \"\", \"localField\": \"name\", \"foreignField\": \"Mark Young\"}}, {\"eid\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid FROM employee WHERE salary > 100000;",
    "mongodb": "db.employee.find({\"salary\": {\"$gt\": 100000}}, {\"eid\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid FROM employee WHERE salary >= 100000;",
    "mongodb": "db.employee.find({\"salary\": {\"$gte\": 100000}}, {\"eid\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid FROM employee WHERE salary >= 100000",
    "mongodb": "db.employee.find({\"salary\": {\"$gte\": 100000}}, {\"eid\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid FROM employee WHERE salary >= 100000",
    "mongodb": "db.employee.find({\"salary\": {\"$gte\": 100000}}, {\"eid\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid FROM employee WHERE salary >= 100000",
    "mongodb": "db.employee.find({\"salary\": {\"$gte\": 100000}}, {\"eid\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT count(*) , Grape FROM wine GROUP BY Grape",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Grape\": \"$Grape\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$project\": {\"Grape\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, COUNT(*) FROM wine GROUP BY Grape",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Grape\": \"$Grape\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Grape\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, COUNT(*) FROM wine GROUP BY Grape",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Grape\": \"$Grape\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Grape\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, COUNT(*) FROM wine GROUP BY Grape",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Grape\": \"$Grape\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Grape\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, COUNT(DISTINCT Name) FROM wine GROUP BY Grape",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Grape, COUNT(DISTINCT Name) FROM wine GROUP BY Grape', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: pilot_record | body={'db': 'pilot_record', 'sql': 'SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)', 'error': 'java.sql.SQLException: Non-existing table referenced: pilot_record'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: pilot_record | body={'db': 'pilot_record', 'sql': 'SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)', 'error': 'java.sql.SQLException: Non-existing table referenced: pilot_record'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: pilot_record | body={'db': 'pilot_record', 'sql': 'SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)', 'error': 'java.sql.SQLException: Non-existing table referenced: pilot_record'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: pilot_record | body={'db': 'pilot_record', 'sql': 'SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)', 'error': 'java.sql.SQLException: Non-existing table referenced: pilot_record'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: pilot_record | body={'db': 'pilot_record', 'sql': 'SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)', 'error': 'java.sql.SQLException: Non-existing table referenced: pilot_record'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Class, Rank FROM captain",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Name, Class, Rank FROM captain', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Class, Rank FROM captain",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Name, Class, Rank FROM captain', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Class, Rank FROM captain",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Name, Class, Rank FROM captain', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT C.Name AS Captain_Name, C.Class AS Captain_Classification, C.Rank AS Captain_Rank, S.Name AS Ship_Name FROM Captain AS C JOIN Ship AS S ON C.Ship_ID = S.Ship_ID;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': 'SELECT C.Name AS Captain_Name, C.Class AS Captain_Classification, C.Rank AS Captain_Rank, S.Name AS Ship_Name FROM Captain AS C JOIN Ship AS S ON C.Ship_ID = S.Ship_ID;', 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Class, Rank FROM captain;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Name, Class, Rank FROM captain;', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC",
    "mongodb": ""
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Credits = 3 OR (Credits = 1 AND Hours = '4 hours');",
    "mongodb": "db.Course.find({\"$or\": [{\"Credits\": 3}, {\"$and\": [{\"Credits\": 1}, {\"Hours\": \"4 hours\"}]}]}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Credits = 3 UNION SELECT CName FROM Course WHERE Credits = 1 AND Hours = '4'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': \"SELECT CName FROM Course WHERE Credits = 3 UNION SELECT CName FROM Course WHERE Credits = 1 AND Hours = '4'\", 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Credits = 3 OR (Credits = 1 AND Hours = '4 hours')",
    "mongodb": "db.Course.find({\"$or\": [{\"Credits\": 3}, {\"$and\": [{\"Credits\": 1}, {\"Hours\": \"4 hours\"}]}]}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Credits = 3 OR (Credits = 1 AND Hours = '4')",
    "mongodb": "db.Course.find({\"$or\": [{\"Credits\": 3}, {\"$and\": [{\"Credits\": 1}, {\"Hours\": \"4\"}]}]}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Credits = 3 OR (Credits = 1 AND Hours = '4 hours')",
    "mongodb": "db.Course.find({\"$or\": [{\"Credits\": 3}, {\"$and\": [{\"Credits\": 1}, {\"Hours\": \"4 hours\"}]}]}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': \"SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'\", 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': \"SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'\", 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT COUNT(DISTINCT dst_apid) FROM routes WHERE alid = (SELECT alid FROM airlines WHERE name = 'American Airlines')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': \"SELECT COUNT(DISTINCT dst_apid) FROM routes WHERE alid = (SELECT alid FROM airlines WHERE name = 'American Airlines')\", 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(DISTINCT dst_apid) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': \"SELECT count(DISTINCT dst_apid) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines')\", 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT COUNT(DISTINCT dst_apid) FROM airlines AS a JOIN routes AS r ON a.alid = r.alid WHERE a.name = 'American Airlines';",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': \"SELECT COUNT(DISTINCT dst_apid) FROM airlines AS a JOIN routes AS r ON a.alid = r.alid WHERE a.name = 'American Airlines';\", 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT count(*) FROM driver",
    "mongodb": "db.driver.find({}, {}).count()"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT count(*) FROM driver",
    "mongodb": "db.driver.find({}, {}).count()"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT count(*) FROM driver",
    "mongodb": "db.driver.find({}, {}).count()"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT count(*) FROM driver",
    "mongodb": "db.driver.find({}, {}).count()"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT count(*) FROM driver",
    "mongodb": "db.driver.find({}, {}).count()"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Advisor FROM Student WHERE city_code = \"BAL\"",
    "mongodb": "db.Student.find({\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"BAL\"}}, {\"Advisor\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Advisor FROM Student WHERE city_code = \"BAL\"",
    "mongodb": "db.Student.find({\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"BAL\"}}, {\"Advisor\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT T2.Fname, T2.LName FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.StuID WHERE T1.city_code = \"BAL\"",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"BAL\"}}}, {\"$lookup\": {\"from\": \"Student\", \"localField\": \"Advisor\", \"foreignField\": \"StuID\", \"as\": \"Student\"}}, {\"$unwind\": \"$Student\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Advisor FROM Student WHERE city_code = \"BAL\"",
    "mongodb": "db.Student.find({\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"BAL\"}}, {\"Advisor\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.StuID WHERE T1.city_code = \"BAL\"",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"BAL\"}}}, {\"$lookup\": {\"from\": \"Student\", \"localField\": \"Advisor\", \"foreignField\": \"StuID\", \"as\": \"Student\"}}, {\"$unwind\": \"$Student\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Advisor\": \"$Advisor\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Advisor\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Advisor\": \"$Advisor\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Advisor\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Advisor\": \"$Advisor\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Advisor\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT T1.Advisor, COUNT(*) FROM Student AS T1 GROUP BY T1.Advisor",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Advisor\": \"$Advisor\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Advisor\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT count(*) , Advisor FROM Student GROUP BY Advisor",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Advisor\": \"$Advisor\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$project\": {\"Advisor\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT T2.Shop_Name, T1.Carrier FROM stock AS T3 JOIN device AS T1 ON T3.Device_ID = T1.Device_ID JOIN shop AS T2 ON T3.Shop_ID = T2.Shop_ID",
    "mongodb": "db.stock.aggregate([{\"$lookup\": {\"from\": \"device\", \"localField\": \"Device_ID\", \"foreignField\": \"Device_ID\", \"as\": \"device\"}}, {\"$unwind\": \"$device\"}, {\"$lookup\": {\"from\": \"shop\", \"localField\": \"Shop_ID\", \"foreignField\": \"Shop_ID\", \"as\": \"shop\"}}, {\"$unwind\": \"$shop\"}, {\"$project\": {\"Shop_Name\": 1, \"Carrier\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT T2.Shop_Name, T1.Carrier FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID",
    "mongodb": "db.device.aggregate([{\"$lookup\": {\"from\": \"stock\", \"localField\": \"Device_ID\", \"foreignField\": \"Device_ID\", \"as\": \"stock\"}}, {\"$unwind\": \"$stock\"}, {\"$lookup\": {\"from\": \"shop\", \"localField\": \"Shop_ID\", \"foreignField\": \"Shop_ID\", \"as\": \"shop\"}}, {\"$unwind\": \"$shop\"}, {\"$project\": {\"Shop_Name\": 1, \"Carrier\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT T2.Shop_Name, T1.Carrier FROM stock AS T3 JOIN device AS T1 ON T3.Device_ID = T1.Device_ID JOIN shop AS T2 ON T3.Shop_ID = T2.Shop_ID;",
    "mongodb": "db.stock.aggregate([{\"$lookup\": {\"from\": \"device\", \"localField\": \"Device_ID\", \"foreignField\": \"Device_ID\", \"as\": \"device\"}}, {\"$unwind\": \"$device\"}, {\"$lookup\": {\"from\": \"shop\", \"localField\": \"Shop_ID\", \"foreignField\": \"Shop_ID\", \"as\": \"shop\"}}, {\"$unwind\": \"$shop\"}, {\"$project\": {\"Shop_Name\": 1, \"Carrier\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT T2.Shop_Name, T1.Carrier FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID;",
    "mongodb": "db.device.aggregate([{\"$lookup\": {\"from\": \"stock\", \"localField\": \"Device_ID\", \"foreignField\": \"Device_ID\", \"as\": \"stock\"}}, {\"$unwind\": \"$stock\"}, {\"$lookup\": {\"from\": \"shop\", \"localField\": \"Shop_ID\", \"foreignField\": \"Shop_ID\", \"as\": \"shop\"}}, {\"$unwind\": \"$shop\"}, {\"$project\": {\"Shop_Name\": 1, \"Carrier\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop.Shop_Name, Device.Carrier FROM shop JOIN stock ON shop.Shop_ID = stock.Shop_ID JOIN device ON stock.Device_ID = device.Device_ID",
    "mongodb": "db.shop.aggregate([{\"$lookup\": {\"from\": \"stock\", \"localField\": \"Shop_ID\", \"foreignField\": \"stock.Shop_ID\", \"as\": \"stock\"}}, {\"$unwind\": \"$stock\"}, {\"$lookup\": {\"from\": \"device\", \"localField\": \"stock.Device_ID\", \"foreignField\": \"Device_ID\", \"as\": \"device\"}}, {\"$unwind\": \"$device\"}, {\"$project\": {\"Shop_Name\": 1, \"Carrier\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Sex = 'M'",
    "mongodb": "db.Student.find({\"Sex\": \"M\"}, {\"StuID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Sex = 'M'",
    "mongodb": "db.Student.find({\"Sex\": \"M\"}, {\"StuID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Sex = 'M'",
    "mongodb": "db.Student.find({\"Sex\": \"M\"}, {\"StuID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Sex = 'M'",
    "mongodb": "db.Student.find({\"Sex\": \"M\"}, {\"StuID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Sex = 'M'",
    "mongodb": "db.Student.find({\"Sex\": \"M\"}, {\"StuID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Advisor FROM Student WHERE StuID = 1004;",
    "mongodb": "db.Student.find({\"StuID\": 1004}, {\"Advisor\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Advisor FROM Student WHERE StuID = 1004",
    "mongodb": "db.Student.find({\"StuID\": 1004}, {\"Advisor\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Advisor FROM Student WHERE StuID = 1004",
    "mongodb": "db.Student.find({\"StuID\": 1004}, {\"Advisor\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T2.Fname, T2.LName FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.StuID WHERE T1.StuID = 1004;",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"StuID\": 1004}}, {\"$lookup\": {\"from\": \"Student\", \"localField\": \"Advisor\", \"foreignField\": \"StuID\", \"as\": \"Student\"}}, {\"$unwind\": \"$Student\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T2.Fname, T2.LName FROM Student AS T1 JOIN Advisor AS T2 ON T1.Advisor = T2.Advisor_ID WHERE T1.StuID = 1004",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"StuID\": 1004}}, {\"$lookup\": {\"from\": \"Advisor\", \"localField\": \"Advisor\", \"foreignField\": \"Advisor_ID\", \"as\": \"Advisor\"}}, {\"$unwind\": \"$Advisor\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school WHERE School_ID NOT IN (SELECT School_ID FROM player)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT Location FROM school WHERE School_ID NOT IN (SELECT School_ID FROM player)', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Player | body={'db': 'school_player', 'sql': 'SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)', 'error': 'java.sql.SQLException: Non-existing table referenced: Player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school WHERE School_ID NOT IN (SELECT School_ID FROM player)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT Location FROM school WHERE School_ID NOT IN (SELECT School_ID FROM player)', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school WHERE School_ID NOT IN (SELECT School_ID FROM player)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT Location FROM school WHERE School_ID NOT IN (SELECT School_ID FROM player)', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Location FROM school WHERE School_ID NOT IN (SELECT School_ID FROM player)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: player | body={'db': 'school_player', 'sql': 'SELECT Location FROM school WHERE School_ID NOT IN (SELECT School_ID FROM player)', 'error': 'java.sql.SQLException: Non-existing table referenced: player'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Winery FROM wine GROUP BY Winery HAVING COUNT(*) >= 4",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Winery FROM wine GROUP BY Winery HAVING COUNT(*) >= 4', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Winery FROM wine GROUP BY Winery HAVING count(*) >= 4",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Winery FROM wine GROUP BY Winery HAVING count(*) >= 4', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Winery FROM wine GROUP BY Winery HAVING COUNT(DISTINCT Name) >= 4",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Winery FROM wine GROUP BY Winery HAVING COUNT(DISTINCT Name) >= 4', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Winery FROM wine GROUP BY Winery HAVING COUNT(DISTINCT Name) >= 4;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Winery FROM wine GROUP BY Winery HAVING COUNT(DISTINCT Name) >= 4;', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Winery FROM wine GROUP BY Winery HAVING count(*) >= 4;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Winery FROM wine GROUP BY Winery HAVING count(*) >= 4;', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name = \"Film\"",
    "mongodb": "db.Ref_Document_Types.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Document_Type_Name\", \"foreignField\": \"Film\"}}, {\"Document_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Description FROM Ref_Document_Types WHERE Document_Type_Name = \"Film\"",
    "mongodb": "db.Ref_Document_Types.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Document_Type_Name\", \"foreignField\": \"Film\"}}, {\"Document_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Description FROM Ref_Document_Types WHERE Document_Type_Name = \"Film\";",
    "mongodb": "db.Ref_Document_Types.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Document_Type_Name\", \"foreignField\": \"Film\"}}, {\"Document_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Description FROM Ref_Document_Types WHERE Document_Type_Name = 'Film'",
    "mongodb": "db.Ref_Document_Types.find({\"Document_Type_Name\": \"Film\"}, {\"Document_Type_Description\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT * FROM Ref_Document_Types WHERE Document_Type_Name = \"Film\"",
    "mongodb": "db.Ref_Document_Types.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Document_Type_Name\", \"foreignField\": \"Film\"}}, {})"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"",
    "mongodb": "db.school.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Denomination\", \"foreignField\": \"Catholic\"}}, {\"Enrollment\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"",
    "mongodb": "db.school.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Denomination\", \"foreignField\": \"Catholic\"}}, {\"Enrollment\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
    "mongodb": "db.school.find({\"Denomination\": {\"$ne\": \"Catholic\"}}, {\"Enrollment\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Enrollment FROM school WHERE Denomination != 'Catholic'",
    "mongodb": "db.school.find({\"Denomination\": {\"$ne\": \"Catholic\"}}, {\"Enrollment\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT School, Enrollment FROM school WHERE Denomination != \"Catholic\"",
    "mongodb": "db.school.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Denomination\", \"foreignField\": \"Catholic\"}}, {\"School\": 1, \"Enrollment\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*) , affiliation FROM university WHERE enrollment > 20000 GROUP BY affiliation",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Enrollment\": {\"$gt\": 20000}}}, {\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*) , affiliation FROM university WHERE enrollment > 20000 GROUP BY affiliation",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Enrollment\": {\"$gt\": 20000}}}, {\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*), Affiliation FROM university WHERE Enrollment > 20000 GROUP BY Affiliation",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Enrollment\": {\"$gt\": 20000}}}, {\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Affiliation, COUNT(*) FROM university WHERE Enrollment > 20000 GROUP BY Affiliation",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Enrollment\": {\"$gt\": 20000}}}, {\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Affiliation, COUNT(*) FROM university WHERE Enrollment > 20000 GROUP BY Affiliation",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Enrollment\": {\"$gt\": 20000}}}, {\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop ORDER BY Open_Year",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop ORDER BY Open_Year",
    "mongodb": "db.shop.find({}, {\"Shop_Name\": 1, \"_id\": 0}).sort( {\"Open_Year\": 1} )"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT document_id FROM Documents WHERE document_type_code = \"CV\" AND document_id NOT IN (SELECT document_id FROM Documents_with_Expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT document_id FROM Documents WHERE document_type_code = \"CV\" AND document_id NOT IN (SELECT document_id FROM Documents_with_Expenses)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID FROM Documents WHERE Document_Type_Code = 'CV' AND Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT Document_ID FROM Documents WHERE Document_Type_Code = 'CV' AND Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)\", 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT document_id FROM Documents WHERE document_type_code = \"CV\" AND document_id NOT IN (SELECT document_id FROM Documents_with_expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT document_id FROM Documents WHERE document_type_code = \"CV\" AND document_id NOT IN (SELECT document_id FROM Documents_with_expenses)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID FROM Documents WHERE Document_Type_Code = 'CV' AND Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT Document_ID FROM Documents WHERE Document_Type_Code = 'CV' AND Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)\", 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID FROM Documents WHERE Document_Type_Code = 'CV' AND Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT Document_ID FROM Documents WHERE Document_Type_Code = 'CV' AND Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)\", 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Statements",
    "mongodb": "db.Statements.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Statements",
    "mongodb": "db.Statements.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Statements",
    "mongodb": "db.Statements.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Statements",
    "mongodb": "db.Statements.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Statements",
    "mongodb": "db.Statements.find({}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT test_result , COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC",
    "mongodb": "db.Student_Tests_Taken.aggregate([{\"$group\": {\"_id\": {\"test_result\": \"$test_result\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": -1}}, {\"$project\": {\"test_result\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT test_result, COUNT(DISTINCT student_id) FROM Student_Tests_Taken INNER JOIN Student_Course_Enrolment ON Student_Tests_Taken.registration_id = Student_Course_Enrolment.registration_id GROUP BY test_result",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Tests_Taken | body={'db': 'e_learning', 'sql': 'SELECT test_result, COUNT(DISTINCT student_id) FROM Student_Tests_Taken INNER JOIN Student_Course_Enrolment ON Student_Tests_Taken.registration_id = Student_Course_Enrolment.registration_id GROUP BY test_result', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Tests_Taken'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT test_result, COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC",
    "mongodb": "db.Student_Tests_Taken.aggregate([{\"$group\": {\"_id\": {\"test_result\": \"$test_result\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": -1}}, {\"$project\": {\"test_result\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT test_result, COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC",
    "mongodb": "db.Student_Tests_Taken.aggregate([{\"$group\": {\"_id\": {\"test_result\": \"$test_result\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": -1}}, {\"$project\": {\"test_result\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT test_result, COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC",
    "mongodb": "db.Student_Tests_Taken.aggregate([{\"$group\": {\"_id\": {\"test_result\": \"$test_result\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": -1}}, {\"$project\": {\"test_result\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Founded FROM university WHERE School_ID = (SELECT School_ID FROM university ORDER BY Enrollment DESC LIMIT 1)",
    "mongodb": ""
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Founded FROM university ORDER BY Enrollment DESC LIMIT 1",
    "mongodb": "db.university.find({}, {\"Founded\": 1, \"_id\": 0}).sort( {\"Enrollment\": -1} ).limit( 1 )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Founded FROM university ORDER BY Enrollment DESC LIMIT 1",
    "mongodb": "db.university.find({}, {\"Founded\": 1, \"_id\": 0}).sort( {\"Enrollment\": -1} ).limit( 1 )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Founded FROM university WHERE Enrollment = (SELECT MAX(Enrollment) FROM university)",
    "mongodb": ""
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Founded FROM university WHERE Enrollment = (SELECT MAX(Enrollment) FROM university)",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Fname, Lname FROM Student",
    "mongodb": "db.Student.find({}, {\"Fname\": 1, \"LName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Fname, Lname FROM Student",
    "mongodb": "db.Student.find({}, {\"Fname\": 1, \"LName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Fname, LName FROM Student",
    "mongodb": "db.Student.find({}, {\"Fname\": 1, \"LName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Fname, LName FROM Student",
    "mongodb": "db.Student.find({}, {\"Fname\": 1, \"LName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Fname, LName FROM Student",
    "mongodb": "db.Student.find({}, {\"Fname\": 1, \"LName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT * FROM basketball_match",
    "mongodb": "db.basketball_match.find({}, {})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT * FROM basketball_match",
    "mongodb": "db.basketball_match.find({}, {})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT * FROM basketball_match",
    "mongodb": "db.basketball_match.find({}, {})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT * FROM basketball_match",
    "mongodb": "db.basketball_match.find({}, {})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT * FROM basketball_match",
    "mongodb": "db.basketball_match.find({}, {})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu';",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"destination\": \"Honolulu\", \"origin\": \"Los Angeles\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$price\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu'",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"destination\": \"Honolulu\", \"origin\": \"Los Angeles\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$price\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu'",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"destination\": \"Honolulu\", \"origin\": \"Los Angeles\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$price\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu'",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"destination\": \"Honolulu\", \"origin\": \"Los Angeles\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$price\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu'",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"destination\": \"Honolulu\", \"origin\": \"Los Angeles\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$price\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "mongodb": "db.aircraft.find({}, {\"aid\": 1, \"name\": 1, \"_id\": 0}).sort( {\"distance\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "mongodb": "db.aircraft.find({}, {\"aid\": 1, \"name\": 1, \"_id\": 0}).sort( {\"distance\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "mongodb": "db.aircraft.find({}, {\"aid\": 1, \"name\": 1, \"_id\": 0}).sort( {\"distance\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "mongodb": "db.aircraft.find({}, {\"aid\": 1, \"name\": 1, \"_id\": 0}).sort( {\"distance\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1",
    "mongodb": "db.aircraft.find({}, {\"aid\": 1, \"name\": 1, \"_id\": 0}).sort( {\"distance\": -1} ).limit( 1 )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Credits = 1;",
    "mongodb": "db.Course.find({\"Credits\": 1}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Credits = 1;",
    "mongodb": "db.Course.find({\"Credits\": 1}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Credits = 1",
    "mongodb": "db.Course.find({\"Credits\": 1}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Credits = 1",
    "mongodb": "db.Course.find({\"Credits\": 1}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE Credits = 1;",
    "mongodb": "db.Course.find({\"Credits\": 1}, {\"CName\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country, COUNT(*) AS num_airlines FROM airlines GROUP BY country ORDER BY num_airlines DESC;",
    "mongodb": "db.airlines.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"num_airlines\": {\"$sum\": 1}}}, {\"$sort\": {\"num_airlines\": -1}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country, COUNT(DISTINCT alid) AS num_airlines FROM airlines GROUP BY country ORDER BY num_airlines DESC;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country, COUNT(*) AS num_airlines FROM airlines GROUP BY country ORDER BY num_airlines DESC;",
    "mongodb": "db.airlines.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"num_airlines\": {\"$sum\": 1}}}, {\"$sort\": {\"num_airlines\": -1}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) , country FROM airlines GROUP BY country ORDER BY count(*) DESC",
    "mongodb": "db.airlines.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"Expr0\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr0\": -1}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country, COUNT(*) AS airline_count FROM airlines GROUP BY country ORDER BY airline_count DESC;",
    "mongodb": "db.airlines.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"airline_count\": {\"$sum\": 1}}}, {\"$sort\": {\"airline_count\": -1}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT subject_name FROM Subjects;",
    "mongodb": "db.Subjects.find({}, {\"subject_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT subject_name FROM Subjects;",
    "mongodb": "db.Subjects.find({}, {\"subject_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT subject_name FROM Subjects",
    "mongodb": "db.Subjects.find({}, {\"subject_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT subject_name FROM Subjects;",
    "mongodb": "db.Subjects.find({}, {\"subject_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT subject_name FROM Subjects;",
    "mongodb": "db.Subjects.find({}, {\"subject_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT avg(Price) FROM wine WHERE Appelation NOT IN (SELECT Appelation FROM appellations WHERE County != 'Sonoma')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT avg(Price) FROM wine WHERE Appelation NOT IN (SELECT Appelation FROM appellations WHERE County != 'Sonoma')\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT avg(Price) FROM wine WHERE Appelation NOT IN (SELECT Appelation FROM appellations WHERE County != 'Sonoma')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT avg(Price) FROM wine WHERE Appelation NOT IN (SELECT Appelation FROM appellations WHERE County != 'Sonoma')\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT avg(Price) FROM wine WHERE Appelation NOT IN (SELECT Appelation FROM appellations WHERE County != 'Sonoma')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT avg(Price) FROM wine WHERE Appelation NOT IN (SELECT Appelation FROM appellations WHERE County != 'Sonoma')\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT AVG(Price) FROM wine WHERE State != 'Sonoma County'",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"State\": {\"$ne\": \"Sonoma County\"}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Price\"}}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT avg(Price) FROM wine WHERE State != 'Sonoma County'",
    "mongodb": "db.wine.aggregate([{\"$match\": {\"State\": {\"$ne\": \"Sonoma County\"}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Price\"}}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id;",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"first_name\": 1, \"last_name\": 1, \"hire_date\": 1, \"salary\": 1, \"department_id\": 1, \"_id\": 0}).sort( {\"department_id\": 1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id;",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"first_name\": 1, \"last_name\": 1, \"hire_date\": 1, \"salary\": 1, \"department_id\": 1, \"_id\": 0}).sort( {\"department_id\": 1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id;",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"first_name\": 1, \"last_name\": 1, \"hire_date\": 1, \"salary\": 1, \"department_id\": 1, \"_id\": 0}).sort( {\"department_id\": 1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id;",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"first_name\": 1, \"last_name\": 1, \"hire_date\": 1, \"salary\": 1, \"department_id\": 1, \"_id\": 0}).sort( {\"department_id\": 1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id;",
    "mongodb": "db.employees.find({\"first_name\": {\"$not\": {\"$regularExpression\": {\"pattern\": \"^.*M.*$\", \"options\": \"\"}}}}, {\"first_name\": 1, \"last_name\": 1, \"hire_date\": 1, \"salary\": 1, \"department_id\": 1, \"_id\": 0}).sort( {\"department_id\": 1} )"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Home_city FROM driver WHERE age > 40 GROUP BY home_city HAVING count(*) >= 2",
    "mongodb": ""
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Home_city FROM driver WHERE Age > 40 GROUP BY Home_city HAVING count(*) >= 2;",
    "mongodb": ""
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Home_city FROM driver WHERE Age > 40 GROUP BY Home_city HAVING count(*) >= 2",
    "mongodb": ""
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Home_city FROM driver WHERE Age > 40 GROUP BY Home_city HAVING count(*) >= 2",
    "mongodb": ""
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Home_city FROM driver WHERE age > 40 GROUP BY Home_city HAVING COUNT(*) >= 2",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Height FROM mountain WHERE Mountain_ID = (SELECT Mountain_ID FROM climber ORDER BY Points DESC LIMIT 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT Height FROM mountain WHERE Mountain_ID = (SELECT Mountain_ID FROM climber ORDER BY Points DESC LIMIT 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT t1.Height * t2.Points AS Scaled_Height FROM mountain AS t1 JOIN climber AS t2 ON t1.Mountain_ID = t2.Mountain_ID ORDER BY t2.Points DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT t1.Height * t2.Points AS Scaled_Height FROM mountain AS t1 JOIN climber AS t2 ON t1.Mountain_ID = t2.Mountain_ID ORDER BY t2.Points DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*) >= 2",
    "mongodb": ""
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*) >= 2;",
    "mongodb": ""
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*) >= 2",
    "mongodb": ""
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*) >= 2",
    "mongodb": ""
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*) >= 2",
    "mongodb": ""
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, COUNT(Document_ID) FROM Documents GROUP BY Project_ID",
    "mongodb": "db.Documents.aggregate([{\"$group\": {\"_id\": {\"Project_ID\": \"$Project_ID\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Document_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"Project_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, COUNT(*) FROM Documents GROUP BY Project_ID",
    "mongodb": "db.Documents.aggregate([{\"$group\": {\"_id\": {\"Project_ID\": \"$Project_ID\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Project_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, COUNT(*) FROM Documents GROUP BY Project_ID",
    "mongodb": "db.Documents.aggregate([{\"$group\": {\"_id\": {\"Project_ID\": \"$Project_ID\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Project_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, COUNT(*) FROM Documents GROUP BY Project_ID;",
    "mongodb": "db.Documents.aggregate([{\"$group\": {\"_id\": {\"Project_ID\": \"$Project_ID\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Project_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, COUNT(*) FROM Documents GROUP BY Project_ID;",
    "mongodb": "db.Documents.aggregate([{\"$group\": {\"_id\": {\"Project_ID\": \"$Project_ID\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Project_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT T2.Name, SUM(T1.Show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.Cinema_ID = T2.Cinema_ID GROUP BY T1.Cinema_ID",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT T2.Name, SUM(T1.Show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.Cinema_ID = T2.Cinema_ID GROUP BY T1.Cinema_ID', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Cinema_ID, SUM(Show_times_per_day) AS Total_Show_Times_Per_Day FROM schedule GROUP BY Cinema_ID",
    "mongodb": "db.schedule.aggregate([{\"$group\": {\"_id\": {\"Cinema_ID\": \"$Cinema_ID\"}, \"Total_Show_Times_Per_Day\": {\"$sum\": \"$Show_times_per_day\"}}}, {\"$project\": {\"Cinema_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT sum(Show_times_per_day) , Cinema_ID FROM schedule GROUP BY Cinema_ID",
    "mongodb": "db.schedule.aggregate([{\"$group\": {\"_id\": {\"Cinema_ID\": \"$Cinema_ID\"}, \"Expr0\": {\"$sum\": \"$Show_times_per_day\"}}}, {\"$project\": {\"Cinema_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Cinema_ID, SUM(Show_times_per_day) FROM schedule GROUP BY Cinema_ID",
    "mongodb": "db.schedule.aggregate([{\"$group\": {\"_id\": {\"Cinema_ID\": \"$Cinema_ID\"}, \"Expr1\": {\"$sum\": \"$Show_times_per_day\"}}}, {\"$project\": {\"Cinema_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT sum(Show_times_per_day), Cinema_ID FROM schedule GROUP BY Cinema_ID",
    "mongodb": "db.schedule.aggregate([{\"$group\": {\"_id\": {\"Cinema_ID\": \"$Cinema_ID\"}, \"Expr0\": {\"$sum\": \"$Show_times_per_day\"}}}, {\"$project\": {\"Cinema_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT Courses.course_name FROM Courses JOIN Student_Course_Enrolment ON Courses.course_id = Student_Course_Enrolment.course_id GROUP BY Courses.course_name HAVING COUNT(DISTINCT Student_Course_Enrolment.student_id) = 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT Courses.course_name FROM Courses JOIN Student_Course_Enrolment ON Courses.course_id = Student_Course_Enrolment.course_id GROUP BY Courses.course_name HAVING COUNT(DISTINCT Student_Course_Enrolment.student_id) = 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform",
    "mongodb": "db.device.aggregate([{\"$group\": {\"_id\": {\"Software_Platform\": \"$Software_Platform\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Software_Platform\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform, COUNT(Device_ID) FROM device GROUP BY Software_Platform",
    "mongodb": "db.device.aggregate([{\"$group\": {\"_id\": {\"Software_Platform\": \"$Software_Platform\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Device_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"Software_Platform\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform, COUNT(Device_ID) FROM device GROUP BY Software_Platform",
    "mongodb": "db.device.aggregate([{\"$group\": {\"_id\": {\"Software_Platform\": \"$Software_Platform\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Device_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"Software_Platform\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform, COUNT(Device_ID) FROM device GROUP BY Software_Platform",
    "mongodb": "db.device.aggregate([{\"$group\": {\"_id\": {\"Software_Platform\": \"$Software_Platform\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Device_ID\", null]}, 1, 0]}}}}, {\"$project\": {\"Software_Platform\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform, COUNT(*) FROM device GROUP BY Software_Platform",
    "mongodb": "db.device.aggregate([{\"$group\": {\"_id\": {\"Software_Platform\": \"$Software_Platform\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Software_Platform\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType, COUNT(Allergy) FROM Allergy_Type GROUP BY AllergyType",
    "mongodb": "db.Allergy_Type.aggregate([{\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Allergy\", null]}, 1, 0]}}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType, COUNT(Allergy) FROM Allergy_Type GROUP BY AllergyType",
    "mongodb": "db.Allergy_Type.aggregate([{\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Allergy\", null]}, 1, 0]}}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType, COUNT(*) FROM Allergy_Type GROUP BY AllergyType",
    "mongodb": "db.Allergy_Type.aggregate([{\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType, COUNT(Allergy) FROM Allergy_Type JOIN Has_Allergy ON Allergy_Type.Allergy = Has_Allergy.Allergy GROUP BY AllergyType",
    "mongodb": "db.Allergy_Type.aggregate([{\"$lookup\": {\"from\": \"Has_Allergy\", \"localField\": \"Allergy\", \"foreignField\": \"Allergy\", \"as\": \"Has_Allergy\"}}, {\"$unwind\": \"$Has_Allergy\"}, {\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Allergy\", null]}, 1, 0]}}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType, COUNT(Allergy) FROM Allergy_Type GROUP BY AllergyType",
    "mongodb": "db.Allergy_Type.aggregate([{\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Allergy\", null]}, 1, 0]}}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
    "mongodb": "db.city.aggregate([{\"$lookup\": {\"from\": \"county_public_safety\", \"localField\": \"County_ID\", \"foreignField\": \"County_ID\", \"as\": \"county_public_safety\"}}, {\"$unwind\": \"$county_public_safety\"}, {\"$project\": {\"White\": 1, \"Crime_rate\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T1.White, T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
    "mongodb": "db.city.aggregate([{\"$lookup\": {\"from\": \"county_public_safety\", \"localField\": \"County_ID\", \"foreignField\": \"County_ID\", \"as\": \"county_public_safety\"}}, {\"$unwind\": \"$county_public_safety\"}, {\"$project\": {\"White\": 1, \"Crime_rate\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T1.White, T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
    "mongodb": "db.city.aggregate([{\"$lookup\": {\"from\": \"county_public_safety\", \"localField\": \"County_ID\", \"foreignField\": \"County_ID\", \"as\": \"county_public_safety\"}}, {\"$unwind\": \"$county_public_safety\"}, {\"$project\": {\"White\": 1, \"Crime_rate\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T1.White, T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
    "mongodb": "db.city.aggregate([{\"$lookup\": {\"from\": \"county_public_safety\", \"localField\": \"County_ID\", \"foreignField\": \"County_ID\", \"as\": \"county_public_safety\"}}, {\"$unwind\": \"$county_public_safety\"}, {\"$project\": {\"White\": 1, \"Crime_rate\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT T1.White, T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
    "mongodb": "db.city.aggregate([{\"$lookup\": {\"from\": \"county_public_safety\", \"localField\": \"County_ID\", \"foreignField\": \"County_ID\", \"as\": \"county_public_safety\"}}, {\"$unwind\": \"$county_public_safety\"}, {\"$project\": {\"White\": 1, \"Crime_rate\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC",
    "mongodb": "db.CONTESTANTS.find({}, {\"contestant_number\": 1, \"contestant_name\": 1, \"_id\": 0}).sort( {\"contestant_name\": -1} )"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name, contestant_number FROM CONTESTANTS ORDER BY contestant_name DESC",
    "mongodb": "db.CONTESTANTS.find({}, {\"contestant_name\": 1, \"contestant_number\": 1, \"_id\": 0}).sort( {\"contestant_name\": -1} )"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC",
    "mongodb": "db.CONTESTANTS.find({}, {\"contestant_number\": 1, \"contestant_name\": 1, \"_id\": 0}).sort( {\"contestant_name\": -1} )"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_name, contestant_number FROM CONTESTANTS ORDER BY contestant_name DESC",
    "mongodb": "db.CONTESTANTS.find({}, {\"contestant_name\": 1, \"contestant_number\": 1, \"_id\": 0}).sort( {\"contestant_name\": -1} )"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC",
    "mongodb": "db.CONTESTANTS.find({}, {\"contestant_number\": 1, \"contestant_name\": 1, \"_id\": 0}).sort( {\"contestant_name\": -1} )"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employees.first_name, employees.job_id FROM employees JOIN departments ON employees.department_id = departments.department_id WHERE departments.department_name = 'Finance';",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"DEPARTMENT_NAME\": \"Finance\"}}, {\"$lookup\": {\"from\": \"departments\", \"localField\": \"employees.DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$project\": {\"employees.FIRST_NAME\": 1, \"employees.JOB_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.first_name, T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'Finance';",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"DEPARTMENT_NAME\": \"Finance\"}}, {\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$project\": {\"first_name\": 1, \"job_id\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employees.FIRST_NAME, employees.JOB_ID FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID WHERE departments.DEPARTMENT_NAME = 'Finance';",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"DEPARTMENT_NAME\": \"Finance\"}}, {\"$lookup\": {\"from\": \"departments\", \"localField\": \"employees.DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$project\": {\"employees.FIRST_NAME\": 1, \"employees.JOB_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT FIRST_NAME, JOB_ID FROM employees WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM departments WHERE DEPARTMENT_NAME = 'Finance')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT FIRST_NAME, JOB_ID FROM employees WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM departments WHERE DEPARTMENT_NAME = 'Finance')\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, job_id FROM employees WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Finance')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT first_name, job_id FROM employees WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Finance')\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city, COUNT(*) FROM airports GROUP BY city HAVING COUNT(*) > 1;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city, COUNT(*) AS num_airports FROM airports GROUP BY city HAVING COUNT(*) > 1;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city, COUNT(*) AS total_airports FROM airports GROUP BY city HAVING COUNT(*) > 1;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city, COUNT(*) AS airport_count FROM airports GROUP BY city HAVING COUNT(*) > 1;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT city, COUNT(*) AS num_airports FROM airports GROUP BY city HAVING COUNT(*) > 1;",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM aircraft",
    "mongodb": "db.aircraft.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM aircraft",
    "mongodb": "db.aircraft.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM aircraft",
    "mongodb": "db.aircraft.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM aircraft",
    "mongodb": "db.aircraft.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM aircraft",
    "mongodb": "db.aircraft.find({}, {}).count()"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Age > 25",
    "mongodb": "db.editor.find({\"Age\": {\"$gt\": 25}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Age > 25",
    "mongodb": "db.editor.find({\"Age\": {\"$gt\": 25}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Age > 25",
    "mongodb": "db.editor.find({\"Age\": {\"$gt\": 25}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Age > 25",
    "mongodb": "db.editor.find({\"Age\": {\"$gt\": 25}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Age > 25",
    "mongodb": "db.editor.find({\"Age\": {\"$gt\": 25}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Duration FROM actor ORDER BY age DESC LIMIT 1",
    "mongodb": "db.actor.find({}, {\"Duration\": 1, \"_id\": 0}).sort( {\"age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Duration FROM actor ORDER BY age DESC LIMIT 1",
    "mongodb": "db.actor.find({}, {\"Duration\": 1, \"_id\": 0}).sort( {\"age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Duration FROM actor ORDER BY age DESC LIMIT 1",
    "mongodb": "db.actor.find({}, {\"Duration\": 1, \"_id\": 0}).sort( {\"age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Duration FROM actor WHERE age = (SELECT max(age) FROM actor)",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Duration FROM actor ORDER BY age DESC LIMIT 1",
    "mongodb": "db.actor.find({}, {\"Duration\": 1, \"_id\": 0}).sort( {\"age\": -1} ).limit( 1 )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, Appelation FROM wine;",
    "mongodb": "db.wine.find({}, {\"Grape\": 1, \"Appelation\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, Appelation FROM wine",
    "mongodb": "db.wine.find({}, {\"Grape\": 1, \"Appelation\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT w.Grape, w.Appelation FROM wine AS w JOIN grapes AS g ON w.Grape = g.Grape JOIN appellations AS a ON w.Appelation = a.Appelation;",
    "mongodb": "db.wine.aggregate([{\"$lookup\": {\"from\": \"grapes\", \"localField\": \"Grape\", \"foreignField\": \"Grape\", \"as\": \"grapes\"}}, {\"$unwind\": \"$grapes\"}, {\"$lookup\": {\"from\": \"appellations\", \"localField\": \"Appelation\", \"foreignField\": \"Appelation\", \"as\": \"appellations\"}}, {\"$unwind\": \"$appellations\"}, {\"$project\": {\"Grape\": 1, \"Appelation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT w.Grape, w.Appelation FROM wine w",
    "mongodb": "db.wine.find({}, {\"Grape\": 1, \"Appelation\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, Appelation FROM wine",
    "mongodb": "db.wine.find({}, {\"Grape\": 1, \"Appelation\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, salary FROM employees WHERE first_name LIKE '%m';",
    "mongodb": "db.employees.find({\"first_name\": {\"$regularExpression\": {\"pattern\": \"^.*m$\", \"options\": \"\"}}}, {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, salary FROM employees WHERE first_name LIKE '%m';",
    "mongodb": "db.employees.find({\"first_name\": {\"$regularExpression\": {\"pattern\": \"^.*m$\", \"options\": \"\"}}}, {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, salary FROM employees WHERE first_name LIKE '%m';",
    "mongodb": "db.employees.find({\"first_name\": {\"$regularExpression\": {\"pattern\": \"^.*m$\", \"options\": \"\"}}}, {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, salary FROM employees WHERE first_name LIKE '%m';",
    "mongodb": "db.employees.find({\"first_name\": {\"$regularExpression\": {\"pattern\": \"^.*m$\", \"options\": \"\"}}}, {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, salary FROM employees WHERE first_name LIKE '%m'",
    "mongodb": "db.employees.find({\"first_name\": {\"$regularExpression\": {\"pattern\": \"^.*m$\", \"options\": \"\"}}}, {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'",
    "mongodb": "db.VOTES.aggregate([{\"$match\": {\"contestant_name\": \"Tabatha Gehling\"}}, {\"$lookup\": {\"from\": \"CONTESTANTS\", \"localField\": \"contestant_number\", \"foreignField\": \"contestant_number\", \"as\": \"CONTESTANTS\"}}, {\"$unwind\": \"$CONTESTANTS\"}, {\"$project\": {\"created\": 1, \"state\": 1, \"phone_number\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'",
    "mongodb": "db.VOTES.aggregate([{\"$match\": {\"contestant_name\": \"Tabatha Gehling\"}}, {\"$lookup\": {\"from\": \"CONTESTANTS\", \"localField\": \"contestant_number\", \"foreignField\": \"contestant_number\", \"as\": \"CONTESTANTS\"}}, {\"$unwind\": \"$CONTESTANTS\"}, {\"$project\": {\"created\": 1, \"state\": 1, \"phone_number\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'",
    "mongodb": "db.VOTES.aggregate([{\"$match\": {\"contestant_name\": \"Tabatha Gehling\"}}, {\"$lookup\": {\"from\": \"CONTESTANTS\", \"localField\": \"contestant_number\", \"foreignField\": \"contestant_number\", \"as\": \"CONTESTANTS\"}}, {\"$unwind\": \"$CONTESTANTS\"}, {\"$project\": {\"created\": 1, \"state\": 1, \"phone_number\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT phone_number, state, created FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'",
    "mongodb": "db.VOTES.aggregate([{\"$match\": {\"contestant_name\": \"Tabatha Gehling\"}}, {\"$lookup\": {\"from\": \"CONTESTANTS\", \"localField\": \"contestant_number\", \"foreignField\": \"contestant_number\", \"as\": \"CONTESTANTS\"}}, {\"$unwind\": \"$CONTESTANTS\"}, {\"$project\": {\"phone_number\": 1, \"state\": 1, \"created\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT V.created, A.state, V.phone_number FROM VOTES V JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number JOIN AREA_CODE_STATE A ON V.state = A.state WHERE C.contestant_name = 'Tabatha Gehling'",
    "mongodb": "db.VOTES.aggregate([{\"$match\": {\"contestant_name\": \"Tabatha Gehling\"}}, {\"$lookup\": {\"from\": \"CONTESTANTS\", \"localField\": \"contestant_number\", \"foreignField\": \"contestant_number\", \"as\": \"CONTESTANTS\"}}, {\"$unwind\": \"$CONTESTANTS\"}, {\"$lookup\": {\"from\": \"AREA_CODE_STATE\", \"localField\": \"state\", \"foreignField\": \"state\", \"as\": \"AREA_CODE_STATE\"}}, {\"$unwind\": \"$AREA_CODE_STATE\"}, {\"$project\": {\"created\": 1, \"state\": 1, \"phone_number\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Age > 20",
    "mongodb": "db.Student.find({\"Age\": {\"$gt\": 20}}, {\"StuID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Age > 20",
    "mongodb": "db.Student.find({\"Age\": {\"$gt\": 20}}, {\"StuID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Age > 20",
    "mongodb": "db.Student.find({\"Age\": {\"$gt\": 20}}, {\"StuID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Age > 20",
    "mongodb": "db.Student.find({\"Age\": {\"$gt\": 20}}, {\"StuID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Age >= 21",
    "mongodb": "db.Student.find({\"Age\": {\"$gte\": 21}}, {\"StuID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Area, County FROM appellations;",
    "mongodb": "db.appellations.find({}, {\"Area\": 1, \"County\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Area, County FROM appellations;",
    "mongodb": "db.appellations.find({}, {\"Area\": 1, \"County\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Area, County FROM appellations",
    "mongodb": "db.appellations.find({}, {\"Area\": 1, \"County\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT County, Area FROM appellations",
    "mongodb": "db.appellations.find({}, {\"County\": 1, \"Area\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Area, County FROM appellations",
    "mongodb": "db.appellations.find({}, {\"Area\": 1, \"County\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT DISTINCT Theme FROM journal",
    "mongodb": "db.journal.distinct(\"Theme\", {})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT DISTINCT Theme FROM journal",
    "mongodb": "db.journal.distinct(\"Theme\", {})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT DISTINCT Theme FROM journal",
    "mongodb": "db.journal.distinct(\"Theme\", {})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT DISTINCT Theme FROM journal",
    "mongodb": "db.journal.distinct(\"Theme\", {})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT DISTINCT Theme FROM journal",
    "mongodb": "db.journal.distinct(\"Theme\", {})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id WHERE T2.value_points > 70;",
    "mongodb": "db.repair_assignment.aggregate([{\"$match\": {\"value_points\": {\"$gt\": 70}}}, {\"$lookup\": {\"from\": \"machine\", \"localField\": \"Machine_ID\", \"foreignField\": \"Machine_ID\", \"as\": \"machine\"}}, {\"$unwind\": \"$machine\"}, {\"$lookup\": {\"from\": \"technician\", \"localField\": \"technician_id\", \"foreignField\": \"technician_id\", \"as\": \"technician\"}}, {\"$unwind\": \"$technician\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id WHERE T2.value_points > 70;",
    "mongodb": "db.repair_assignment.aggregate([{\"$match\": {\"value_points\": {\"$gt\": 70}}}, {\"$lookup\": {\"from\": \"machine\", \"localField\": \"Machine_ID\", \"foreignField\": \"Machine_ID\", \"as\": \"machine\"}}, {\"$unwind\": \"$machine\"}, {\"$lookup\": {\"from\": \"technician\", \"localField\": \"technician_id\", \"foreignField\": \"technician_id\", \"as\": \"technician\"}}, {\"$unwind\": \"$technician\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T2.Name FROM technician AS T2 JOIN repair_assignment AS T1 ON T2.technician_id = T1.technician_id JOIN machine AS T3 ON T1.Machine_ID = T3.Machine_ID WHERE T3.value_points > 70",
    "mongodb": "db.technician.aggregate([{\"$match\": {\"value_points\": {\"$gt\": 70}}}, {\"$lookup\": {\"from\": \"repair_assignment\", \"localField\": \"technician_id\", \"foreignField\": \"technician_id\", \"as\": \"repair_assignment\"}}, {\"$unwind\": \"$repair_assignment\"}, {\"$lookup\": {\"from\": \"machine\", \"localField\": \"Machine_ID\", \"foreignField\": \"Machine_ID\", \"as\": \"machine\"}}, {\"$unwind\": \"$machine\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT t.Name FROM technician t JOIN repair_assignment ra ON t.technician_id = ra.technician_id JOIN machine m ON ra.Machine_ID = m.Machine_ID WHERE m.value_points > 70;",
    "mongodb": "db.technician.aggregate([{\"$match\": {\"value_points\": {\"$gt\": 70}}}, {\"$lookup\": {\"from\": \"repair_assignment\", \"localField\": \"technician_id\", \"foreignField\": \"technician_id\", \"as\": \"repair_assignment\"}}, {\"$unwind\": \"$repair_assignment\"}, {\"$lookup\": {\"from\": \"machine\", \"localField\": \"Machine_ID\", \"foreignField\": \"Machine_ID\", \"as\": \"machine\"}}, {\"$unwind\": \"$machine\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T2.Name FROM technician AS T2 JOIN repair_assignment AS T1 ON T1.technician_id = T2.technician_id JOIN machine AS T3 ON T1.Machine_ID = T3.Machine_ID WHERE T3.value_points > 70",
    "mongodb": "db.technician.aggregate([{\"$match\": {\"value_points\": {\"$gt\": 70}}}, {\"$lookup\": {\"from\": \"repair_assignment\", \"localField\": \"technician_id\", \"foreignField\": \"technician_id\", \"as\": \"repair_assignment\"}}, {\"$unwind\": \"$repair_assignment\"}, {\"$lookup\": {\"from\": \"machine\", \"localField\": \"Machine_ID\", \"foreignField\": \"Machine_ID\", \"as\": \"machine\"}}, {\"$unwind\": \"$machine\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT LName FROM Student WHERE Sex = \"F\" ORDER BY Age DESC;",
    "mongodb": "db.Student.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Sex\", \"foreignField\": \"F\"}}, {\"LName\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT LName FROM Student WHERE Sex = 'F' ORDER BY Age DESC;",
    "mongodb": "db.Student.find({\"Sex\": \"F\"}, {\"LName\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT LName FROM Student WHERE Sex = 'F' ORDER BY Age DESC",
    "mongodb": "db.Student.find({\"Sex\": \"F\"}, {\"LName\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT LName FROM Student WHERE Sex = 'F' ORDER BY Age DESC;",
    "mongodb": "db.Student.find({\"Sex\": \"F\"}, {\"LName\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT LName FROM Student WHERE Sex = 'F' ORDER BY Age DESC;",
    "mongodb": "db.Student.find({\"Sex\": \"F\"}, {\"LName\": 1, \"_id\": 0}).sort( {\"Age\": -1} )"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T2.Editor_ID HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T2.Editor_ID HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name FROM editor AS T2 JOIN journal_committee AS T1 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Editor_ID HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT T2.Name FROM editor AS T2 JOIN journal_committee AS T1 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Editor_ID HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee GROUP BY Editor_ID HAVING COUNT(*) >= 2)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT Name FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee GROUP BY Editor_ID HAVING COUNT(*) >= 2)', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name FROM editor AS T2 JOIN journal_committee AS T1 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Editor_ID HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT T2.Name FROM editor AS T2 JOIN journal_committee AS T1 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Editor_ID HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900;",
    "mongodb": ""
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900",
    "mongodb": ""
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900",
    "mongodb": ""
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900",
    "mongodb": ""
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900",
    "mongodb": ""
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T3.Name , T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id;",
    "mongodb": "db.repair_assignment.aggregate([{\"$lookup\": {\"from\": \"machine\", \"localField\": \"Machine_ID\", \"foreignField\": \"Machine_ID\", \"as\": \"machine\"}}, {\"$unwind\": \"$machine\"}, {\"$lookup\": {\"from\": \"technician\", \"localField\": \"technician_id\", \"foreignField\": \"technician_id\", \"as\": \"technician\"}}, {\"$unwind\": \"$technician\"}, {\"$project\": {\"Name\": 1, \"Machine_series\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T3.Name , T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID",
    "mongodb": "db.repair_assignment.aggregate([{\"$lookup\": {\"from\": \"machine\", \"localField\": \"Machine_ID\", \"foreignField\": \"Machine_ID\", \"as\": \"machine\"}}, {\"$unwind\": \"$machine\"}, {\"$lookup\": {\"from\": \"technician\", \"localField\": \"technician_id\", \"foreignField\": \"technician_id\", \"as\": \"technician\"}}, {\"$unwind\": \"$technician\"}, {\"$project\": {\"Name\": 1, \"Machine_series\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T2.Name, T3.Machine_series FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_id = T2.technician_id JOIN machine AS T3 ON T1.Machine_ID = T3.Machine_ID",
    "mongodb": "db.repair_assignment.aggregate([{\"$lookup\": {\"from\": \"technician\", \"localField\": \"technician_id\", \"foreignField\": \"technician_id\", \"as\": \"technician\"}}, {\"$unwind\": \"$technician\"}, {\"$lookup\": {\"from\": \"machine\", \"localField\": \"Machine_ID\", \"foreignField\": \"Machine_ID\", \"as\": \"machine\"}}, {\"$unwind\": \"$machine\"}, {\"$project\": {\"Name\": 1, \"Machine_series\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T2.Name, T2.Machine_series FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_id = T2.technician_id JOIN machine AS T3 ON T1.Machine_ID = T3.Machine_ID;",
    "mongodb": "db.repair_assignment.aggregate([{\"$lookup\": {\"from\": \"technician\", \"localField\": \"technician_id\", \"foreignField\": \"technician_id\", \"as\": \"technician\"}}, {\"$unwind\": \"$technician\"}, {\"$lookup\": {\"from\": \"machine\", \"localField\": \"Machine_ID\", \"foreignField\": \"Machine_ID\", \"as\": \"machine\"}}, {\"$unwind\": \"$machine\"}, {\"$project\": {\"Name\": 1, \"Machine_series\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T1.Name, T2.Machine_series FROM technician AS T1 JOIN repair_assignment AS T2 ON T1.technician_id = T2.technician_id",
    "mongodb": "db.technician.aggregate([{\"$lookup\": {\"from\": \"repair_assignment\", \"localField\": \"technician_id\", \"foreignField\": \"technician_id\", \"as\": \"repair_assignment\"}}, {\"$unwind\": \"$repair_assignment\"}, {\"$project\": {\"Name\": 1, \"Machine_series\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT company, headquarters FROM company ORDER BY market_value DESC;",
    "mongodb": "db.company.find({}, {\"Company\": 1, \"Headquarters\": 1, \"_id\": 0}).sort( {\"Market_Value\": -1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Headquarters FROM company ORDER BY Market_Value DESC;",
    "mongodb": "db.company.find({}, {\"Company\": 1, \"Headquarters\": 1, \"_id\": 0}).sort( {\"Market_Value\": -1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Headquarters FROM company ORDER BY Market_Value DESC;",
    "mongodb": "db.company.find({}, {\"Company\": 1, \"Headquarters\": 1, \"_id\": 0}).sort( {\"Market_Value\": -1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Headquarters FROM company ORDER BY Market_Value DESC",
    "mongodb": "db.company.find({}, {\"Company\": 1, \"Headquarters\": 1, \"_id\": 0}).sort( {\"Market_Value\": -1} )"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Company, Headquarters FROM company ORDER BY Market_Value DESC",
    "mongodb": "db.company.find({}, {\"Company\": 1, \"Headquarters\": 1, \"_id\": 0}).sort( {\"Market_Value\": -1} )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT T1.Name, T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
    "mongodb": "db.climber.aggregate([{\"$lookup\": {\"from\": \"mountain\", \"localField\": \"Mountain_ID\", \"foreignField\": \"Mountain_ID\", \"as\": \"mountain\"}}, {\"$unwind\": \"$mountain\"}, {\"$project\": {\"Name\": 1, \"Height\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT T1.Name, T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
    "mongodb": "db.climber.aggregate([{\"$lookup\": {\"from\": \"mountain\", \"localField\": \"Mountain_ID\", \"foreignField\": \"Mountain_ID\", \"as\": \"mountain\"}}, {\"$unwind\": \"$mountain\"}, {\"$project\": {\"Name\": 1, \"Height\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT T2.Name, T1.Height FROM climber AS T2 JOIN mountain AS T1 ON T2.Mountain_ID = T1.Mountain_ID",
    "mongodb": "db.climber.aggregate([{\"$lookup\": {\"from\": \"mountain\", \"localField\": \"Mountain_ID\", \"foreignField\": \"Mountain_ID\", \"as\": \"mountain\"}}, {\"$unwind\": \"$mountain\"}, {\"$project\": {\"Name\": 1, \"Height\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT T1.Name, T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
    "mongodb": "db.climber.aggregate([{\"$lookup\": {\"from\": \"mountain\", \"localField\": \"Mountain_ID\", \"foreignField\": \"Mountain_ID\", \"as\": \"mountain\"}}, {\"$unwind\": \"$mountain\"}, {\"$project\": {\"Name\": 1, \"Height\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT T1.Name, T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
    "mongodb": "db.climber.aggregate([{\"$lookup\": {\"from\": \"mountain\", \"localField\": \"Mountain_ID\", \"foreignField\": \"Mountain_ID\", \"as\": \"mountain\"}}, {\"$unwind\": \"$mountain\"}, {\"$project\": {\"Name\": 1, \"Height\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T1.Fname , T1.Lname FROM Faculty AS T1 JOIN Member_of AS T2 ON T1.FacID = T2.FacID WHERE T2.DNO = 520;",
    "mongodb": "db.Faculty.aggregate([{\"$match\": {\"DNO\": 520}}, {\"$lookup\": {\"from\": \"Member_of\", \"localField\": \"FacID\", \"foreignField\": \"FacID\", \"as\": \"Member_of\"}}, {\"$unwind\": \"$Member_of\"}, {\"$project\": {\"Fname\": 1, \"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T1.Fname , T1.Lname FROM Faculty AS T1 JOIN Member_of AS T2 ON T1.FacID = T2.FacID WHERE T2.DNO = 520;",
    "mongodb": "db.Faculty.aggregate([{\"$match\": {\"DNO\": 520}}, {\"$lookup\": {\"from\": \"Member_of\", \"localField\": \"FacID\", \"foreignField\": \"FacID\", \"as\": \"Member_of\"}}, {\"$unwind\": \"$Member_of\"}, {\"$project\": {\"Fname\": 1, \"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname, Lname FROM Faculty JOIN Member_of ON Faculty.FacID = Member_of.FacID WHERE Member_of.DNO = 520",
    "mongodb": "db.Faculty.aggregate([{\"$match\": {\"Member_of.DNO\": 520}}, {\"$lookup\": {\"from\": \"Member_of\", \"localField\": \"FacID\", \"foreignField\": \"Member_of.FacID\", \"as\": \"Member_of\"}}, {\"$unwind\": \"$Member_of\"}, {\"$project\": {\"Fname\": 1, \"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname, Lname FROM Faculty JOIN Member_of ON Faculty.FacID = Member_of.FacID WHERE Member_of.DNO = 520;",
    "mongodb": "db.Faculty.aggregate([{\"$match\": {\"Member_of.DNO\": 520}}, {\"$lookup\": {\"from\": \"Member_of\", \"localField\": \"FacID\", \"foreignField\": \"Member_of.FacID\", \"as\": \"Member_of\"}}, {\"$unwind\": \"$Member_of\"}, {\"$project\": {\"Fname\": 1, \"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname, Lname FROM Faculty JOIN Member_of ON Faculty.FacID = Member_of.FacID WHERE Member_of.DNO = 520",
    "mongodb": "db.Faculty.aggregate([{\"$match\": {\"Member_of.DNO\": 520}}, {\"$lookup\": {\"from\": \"Member_of\", \"localField\": \"FacID\", \"foreignField\": \"Member_of.FacID\", \"as\": \"Member_of\"}}, {\"$unwind\": \"$Member_of\"}, {\"$project\": {\"Fname\": 1, \"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T2.Name FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.Price < 50",
    "mongodb": "db.appellations.aggregate([{\"$match\": {\"Price\": {\"$lt\": 50}, \"$lookup\": {\"from\": \"\", \"localField\": \"County\", \"foreignField\": \"Monterey\"}}}, {\"$lookup\": {\"from\": \"wine\", \"localField\": \"Appelation\", \"foreignField\": \"Appelation\", \"as\": \"wine\"}}, {\"$unwind\": \"$wine\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T2.Name FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.Price < 50",
    "mongodb": "db.appellations.aggregate([{\"$match\": {\"Price\": {\"$lt\": 50}, \"$lookup\": {\"from\": \"\", \"localField\": \"County\", \"foreignField\": \"Monterey\"}}}, {\"$lookup\": {\"from\": \"wine\", \"localField\": \"Appelation\", \"foreignField\": \"Appelation\", \"as\": \"wine\"}}, {\"$unwind\": \"$wine\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Price < 50 AND Appelation IN (SELECT Appelation FROM appellations WHERE County = \"Monterey\")",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Name FROM wine WHERE Price < 50 AND Appelation IN (SELECT Appelation FROM appellations WHERE County = \"Monterey\")', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Price < 50 AND Appelation IN (SELECT Appelation FROM appellations WHERE County = \"Monterey\")",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Name FROM wine WHERE Price < 50 AND Appelation IN (SELECT Appelation FROM appellations WHERE County = \"Monterey\")', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Price < 50 AND Appelation IN (SELECT Appelation FROM appellations WHERE County = \"Monterey\")",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Name FROM wine WHERE Price < 50 AND Appelation IN (SELECT Appelation FROM appellations WHERE County = \"Monterey\")', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type GROUP BY AllergyType ORDER BY count(*) ASC LIMIT 1;",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type GROUP BY AllergyType ORDER BY count(*) ASC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy GROUP BY T1.AllergyType ORDER BY count(*) ASC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy GROUP BY T1.AllergyType ORDER BY count(*) ASC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type WHERE Allergy IN (SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY count(*) ASC LIMIT 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT AllergyType FROM Allergy_Type WHERE Allergy IN (SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY count(*) ASC LIMIT 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type JOIN Has_Allergy ON Allergy_Type.Allergy = Has_Allergy.Allergy GROUP BY AllergyType ORDER BY COUNT(*) ASC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT AllergyType FROM Allergy_Type JOIN Has_Allergy ON Allergy_Type.Allergy = Has_Allergy.Allergy GROUP BY AllergyType ORDER BY COUNT(*) ASC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE department_id IS NULL",
    "mongodb": "db.employees.find({\"department_id\": null}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE department_id IS NULL",
    "mongodb": "db.employees.find({\"department_id\": null}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID FROM employees WHERE DEPARTMENT_ID IS NULL",
    "mongodb": "db.employees.find({\"DEPARTMENT_ID\": null}, {\"EMPLOYEE_ID\": 1, \"FIRST_NAME\": 1, \"LAST_NAME\": 1, \"EMAIL\": 1, \"PHONE_NUMBER\": 1, \"HIRE_DATE\": 1, \"JOB_ID\": 1, \"SALARY\": 1, \"COMMISSION_PCT\": 1, \"MANAGER_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE department_id IS NULL",
    "mongodb": "db.employees.find({\"department_id\": null}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE department_id IS NULL",
    "mongodb": "db.employees.find({\"department_id\": null}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = \"Clara\") AND first_name != \"Clara\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = \"Clara\") AND first_name != \"Clara\"', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = \"Clara\") AND first_name != \"Clara\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = \"Clara\") AND first_name != \"Clara\"', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = 'Clara') AND first_name != 'Clara'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = 'Clara') AND first_name != 'Clara'\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.FIRST_NAME, T1.LAST_NAME, T1.HIRE_DATE FROM employees AS T1 JOIN employees AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID WHERE T2.FIRST_NAME != 'Clara' AND T2.LAST_NAME != 'Clara'",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"LAST_NAME\": {\"$ne\": \"Clara\"}, \"FIRST_NAME\": {\"$ne\": \"Clara\"}}}, {\"$lookup\": {\"from\": \"employees\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"employees\"}}, {\"$unwind\": \"$employees\"}, {\"$project\": {\"FIRST_NAME\": 1, \"LAST_NAME\": 1, \"HIRE_DATE\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.FIRST_NAME, T1.LAST_NAME, T1.HIRE_DATE FROM employees AS T1 JOIN departments AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID WHERE T2.DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM employees WHERE FIRST_NAME = 'Clara' AND LAST_NAME = 'Clara') AND (T1.FIRST_NAME != 'Clara' OR T1.LAST_NAME != 'Clara');",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT T1.FIRST_NAME, T1.LAST_NAME, T1.HIRE_DATE FROM employees AS T1 JOIN departments AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID WHERE T2.DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM employees WHERE FIRST_NAME = 'Clara' AND LAST_NAME = 'Clara') AND (T1.FIRST_NAME != 'Clara' OR T1.LAST_NAME != 'Clara');\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents_with_Expenses | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents_with_Expenses'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents_with_Expenses | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents_with_Expenses'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents_with_Expenses | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents_with_Expenses'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents_with_Expenses | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents_with_Expenses'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents_with_Expenses | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents_with_Expenses'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name, T2.Age, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme ASC;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT T2.Name, T2.Age, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme ASC;', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name, T2.Age, T1.Theme FROM journal AS T1 JOIN journal_committee AS T3 ON T1.Journal_ID = T3.Journal_ID JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID ORDER BY T1.Theme ASC;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT T2.Name, T2.Age, T1.Theme FROM journal AS T1 JOIN journal_committee AS T3 ON T1.Journal_ID = T3.Journal_ID JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID ORDER BY T1.Theme ASC;', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name, T2.Age, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme ASC",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT T2.Name, T2.Age, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme ASC', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name, T2.Age, T1.Theme FROM journal_committee AS T3 JOIN journal AS T1 ON T3.Journal_ID = T1.Journal_ID JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID ORDER BY T1.Theme ASC",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT T2.Name, T2.Age, T1.Theme FROM journal_committee AS T3 JOIN journal AS T1 ON T3.Journal_ID = T1.Journal_ID JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID ORDER BY T1.Theme ASC', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name, T2.Age, T1.Theme FROM journal_committee AS T3 JOIN journal AS T1 ON T3.Journal_ID = T1.Journal_ID JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID ORDER BY T1.Theme ASC;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT T2.Name, T2.Age, T1.Theme FROM journal_committee AS T3 JOIN journal AS T1 ON T3.Journal_ID = T1.Journal_ID JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID ORDER BY T1.Theme ASC;', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT max(gradepoint) , min(gradepoint) FROM Gradeconversion",
    "mongodb": "db.Gradeconversion.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$gradepoint\"}, \"Expr1\": {\"$min\": \"$gradepoint\"}}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT max(gradepoint) , min(gradepoint) FROM Gradeconversion",
    "mongodb": "db.Gradeconversion.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$gradepoint\"}, \"Expr1\": {\"$min\": \"$gradepoint\"}}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT max(gradepoint) , min(gradepoint) FROM Gradeconversion",
    "mongodb": "db.Gradeconversion.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$gradepoint\"}, \"Expr1\": {\"$min\": \"$gradepoint\"}}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT max(gradepoint) , min(gradepoint) FROM Gradeconversion",
    "mongodb": "db.Gradeconversion.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$gradepoint\"}, \"Expr1\": {\"$min\": \"$gradepoint\"}}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT MAX(gradepoint), MIN(gradepoint) FROM Gradeconversion",
    "mongodb": "db.Gradeconversion.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$gradepoint\"}, \"Expr1\": {\"$min\": \"$gradepoint\"}}}])"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team, Starting_Year FROM technician",
    "mongodb": "db.technician.find({}, {\"Team\": 1, \"Starting_Year\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team, Starting_Year FROM technician",
    "mongodb": "db.technician.find({}, {\"Team\": 1, \"Starting_Year\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team, Starting_Year FROM technician",
    "mongodb": "db.technician.find({}, {\"Team\": 1, \"Starting_Year\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team, Starting_Year FROM technician",
    "mongodb": "db.technician.find({}, {\"Team\": 1, \"Starting_Year\": 1, \"_id\": 0})"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Team, Starting_Year FROM technician",
    "mongodb": "db.technician.find({}, {\"Team\": 1, \"Starting_Year\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes AS r JOIN airports AS a ON r.dst_apid = a.apid JOIN airlines AS al ON r.alid = al.alid WHERE a.country = 'Italy' AND al.name = 'American Airlines'",
    "mongodb": "db.routes.aggregate([{\"$match\": {\"name\": \"American Airlines\", \"country\": \"Italy\"}}, {\"$lookup\": {\"from\": \"airports\", \"localField\": \"dst_apid\", \"foreignField\": \"apid\", \"as\": \"airports\"}}, {\"$unwind\": \"$airports\"}, {\"$lookup\": {\"from\": \"airlines\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"airlines\"}}, {\"$unwind\": \"$airlines\"}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes AS R JOIN airports AS A ON R.dst_apid = A.apid JOIN airlines AS AL ON R.alid = AL.alid WHERE A.country = 'Italy' AND AL.name = 'American Airlines'",
    "mongodb": "db.routes.aggregate([{\"$match\": {\"name\": \"American Airlines\", \"country\": \"Italy\"}}, {\"$lookup\": {\"from\": \"airports\", \"localField\": \"dst_apid\", \"foreignField\": \"apid\", \"as\": \"airports\"}}, {\"$unwind\": \"$airports\"}, {\"$lookup\": {\"from\": \"airlines\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"airlines\"}}, {\"$unwind\": \"$airlines\"}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT COUNT(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid JOIN airports AS T3 ON T2.dst_apid = T3.apid WHERE T1.name = 'American Airlines' AND T3.country = 'Italy';",
    "mongodb": "db.airlines.aggregate([{\"$match\": {\"country\": \"Italy\", \"name\": \"American Airlines\"}}, {\"$lookup\": {\"from\": \"routes\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"routes\"}}, {\"$unwind\": \"$routes\"}, {\"$lookup\": {\"from\": \"airports\", \"localField\": \"dst_apid\", \"foreignField\": \"apid\", \"as\": \"airports\"}}, {\"$unwind\": \"$airports\"}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines') AND dst_apid IN (SELECT apid FROM airports WHERE country = 'Italy')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': \"SELECT count(*) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines') AND dst_apid IN (SELECT apid FROM airports WHERE country = 'Italy')\", 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM routes AS T1 JOIN airlines AS T2 ON T1.alid = T2.alid JOIN airports AS T3 ON T1.dst_apid = T3.apid WHERE T2.name = 'American Airlines' AND T3.country = 'Italy'",
    "mongodb": "db.routes.aggregate([{\"$match\": {\"country\": \"Italy\", \"name\": \"American Airlines\"}}, {\"$lookup\": {\"from\": \"airlines\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"airlines\"}}, {\"$unwind\": \"$airlines\"}, {\"$lookup\": {\"from\": \"airports\", \"localField\": \"dst_apid\", \"foreignField\": \"apid\", \"as\": \"airports\"}}, {\"$unwind\": \"$airports\"}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Statement_ID, Statement_Details FROM Statements;",
    "mongodb": "db.Statements.find({}, {\"Statement_ID\": 1, \"Statement_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Statement_ID, Statement_Details FROM Statements",
    "mongodb": "db.Statements.find({}, {\"Statement_ID\": 1, \"Statement_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Statement_ID, Statement_Details FROM Statements;",
    "mongodb": "db.Statements.find({}, {\"Statement_ID\": 1, \"Statement_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Statement_ID, Statement_Details FROM Statements",
    "mongodb": "db.Statements.find({}, {\"Statement_ID\": 1, \"Statement_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Statement_ID, Statement_Details FROM Statements",
    "mongodb": "db.Statements.find({}, {\"Statement_ID\": 1, \"Statement_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: job_history | body={'db': 'hr_1', 'sql': 'SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: job_history'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: job_history | body={'db': 'hr_1', 'sql': 'SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: job_history'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: job_history | body={'db': 'hr_1', 'sql': 'SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: job_history'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.EMPLOYEE_ID FROM employees AS T1 JOIN job_history AS T2 ON T1.EMPLOYEE_ID = T2.EMPLOYEE_ID GROUP BY T1.EMPLOYEE_ID HAVING COUNT(DISTINCT T2.JOB_ID) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT T1.EMPLOYEE_ID FROM employees AS T1 JOIN job_history AS T2 ON T1.EMPLOYEE_ID = T2.EMPLOYEE_ID GROUP BY T1.EMPLOYEE_ID HAVING COUNT(DISTINCT T2.JOB_ID) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT EMPLOYEE_ID FROM job_history GROUP BY EMPLOYEE_ID HAVING COUNT(DISTINCT JOB_ID) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: job_history | body={'db': 'hr_1', 'sql': 'SELECT EMPLOYEE_ID FROM job_history GROUP BY EMPLOYEE_ID HAVING COUNT(DISTINCT JOB_ID) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: job_history'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DPhone FROM Department WHERE Room = '268'",
    "mongodb": "db.Department.find({\"Room\": \"268\"}, {\"DPhone\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DPhone FROM Department WHERE Room = '268';",
    "mongodb": "db.Department.find({\"Room\": \"268\"}, {\"DPhone\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DPhone FROM Department WHERE Room = '268'",
    "mongodb": "db.Department.find({\"Room\": \"268\"}, {\"DPhone\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DPhone FROM Department WHERE Room = '268'",
    "mongodb": "db.Department.find({\"Room\": \"268\"}, {\"DPhone\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT DPhone FROM Department WHERE Room = '268'",
    "mongodb": "db.Department.find({\"Room\": \"268\"}, {\"DPhone\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code, COUNT(*) FROM Student GROUP BY city_code",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"city_code\": \"$city_code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"city_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code, COUNT(*) FROM Student GROUP BY city_code;",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"city_code\": \"$city_code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"city_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code, COUNT(*) FROM Student GROUP BY city_code",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"city_code\": \"$city_code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"city_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code, COUNT(*) FROM Student GROUP BY city_code",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"city_code\": \"$city_code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"city_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code, COUNT(*) FROM Student GROUP BY city_code",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"city_code\": \"$city_code\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"city_code\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT avg(elevation) , country FROM airports GROUP BY country;",
    "mongodb": "db.airports.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"Expr0\": {\"$avg\": \"$elevation\"}}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT avg(elevation), country FROM airports GROUP BY country;",
    "mongodb": "db.airports.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"Expr0\": {\"$avg\": \"$elevation\"}}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT avg(elevation), country FROM airports GROUP BY country",
    "mongodb": "db.airports.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"Expr0\": {\"$avg\": \"$elevation\"}}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country, avg(elevation) FROM airports GROUP BY country;",
    "mongodb": "db.airports.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"Expr1\": {\"$avg\": \"$elevation\"}}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country, AVG(elevation) FROM airports GROUP BY country",
    "mongodb": "db.airports.aggregate([{\"$group\": {\"_id\": {\"country\": \"$country\"}, \"Expr1\": {\"$avg\": \"$elevation\"}}}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT max(Age) FROM Student",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Age\"}}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT max(Age) FROM Student",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Age\"}}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT MAX(Age) FROM Student",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Age\"}}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT MAX(Age) FROM Student",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Age\"}}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT MAX(Age) FROM Student",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Age\"}}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT complaint_status_code, COUNT(*) FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT complaint_status_code, COUNT(*) FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"flno\": 99}}, {\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"aid\", \"foreignField\": \"aid\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"flno\": 99}}, {\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"aid\", \"foreignField\": \"aid\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"flno\": 99}}, {\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"aid\", \"foreignField\": \"aid\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99;",
    "mongodb": "db.flight.aggregate([{\"$match\": {\"flno\": 99}}, {\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"aid\", \"foreignField\": \"aid\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT a.name FROM aircraft AS a JOIN flight AS f ON a.aid = f.aid WHERE f.flno = 99;",
    "mongodb": "db.aircraft.aggregate([{\"$match\": {\"flno\": 99}}, {\"$lookup\": {\"from\": \"flight\", \"localField\": \"aid\", \"foreignField\": \"aid\", \"as\": \"flight\"}}, {\"$unwind\": \"$flight\"}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student",
    "mongodb": "db.Student.find({}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student",
    "mongodb": "db.Student.find({}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student",
    "mongodb": "db.Student.find({}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student",
    "mongodb": "db.Student.find({}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student",
    "mongodb": "db.Student.find({}, {}).count()"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT S.Fname, S.LName, G.gradepoint FROM Enrolled_in E JOIN Student S ON E.StuID = S.StuID JOIN Gradeconversion G ON E.Grade = G.lettergrade;",
    "mongodb": "db.Enrolled_in.aggregate([{\"$lookup\": {\"from\": \"Student\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Student\"}}, {\"$unwind\": \"$Student\"}, {\"$lookup\": {\"from\": \"Gradeconversion\", \"localField\": \"Grade\", \"foreignField\": \"lettergrade\", \"as\": \"Gradeconversion\"}}, {\"$unwind\": \"$Gradeconversion\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"gradepoint\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T3.Fname, T3.LName, T2.gradepoint FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID;",
    "mongodb": "db.Enrolled_in.aggregate([{\"$lookup\": {\"from\": \"Gradeconversion\", \"localField\": \"Grade\", \"foreignField\": \"lettergrade\", \"as\": \"Gradeconversion\"}}, {\"$unwind\": \"$Gradeconversion\"}, {\"$lookup\": {\"from\": \"Student\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Student\"}}, {\"$unwind\": \"$Student\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"gradepoint\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T1.Fname, T1.LName, T2.gradepoint FROM Student AS T1 JOIN Enrolled_in AS T3 ON T1.StuID = T3.StuID JOIN Gradeconversion AS T2 ON T3.Grade = T2.lettergrade;",
    "mongodb": "db.Student.aggregate([{\"$lookup\": {\"from\": \"Enrolled_in\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Enrolled_in\"}}, {\"$unwind\": \"$Enrolled_in\"}, {\"$lookup\": {\"from\": \"Gradeconversion\", \"localField\": \"Grade\", \"foreignField\": \"lettergrade\", \"as\": \"Gradeconversion\"}}, {\"$unwind\": \"$Gradeconversion\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"gradepoint\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T1.Fname, T1.LName, T2.gradepoint FROM Student AS T1 JOIN Enrolled_in AS T2 ON T1.StuID = T2.StuID",
    "mongodb": "db.Student.aggregate([{\"$lookup\": {\"from\": \"Enrolled_in\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Enrolled_in\"}}, {\"$unwind\": \"$Enrolled_in\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"gradepoint\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T1.Fname, T1.LName, T2.gradepoint FROM Student AS T1 JOIN Enrolled_in AS T2 ON T1.StuID = T2.StuID;",
    "mongodb": "db.Student.aggregate([{\"$lookup\": {\"from\": \"Enrolled_in\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Enrolled_in\"}}, {\"$unwind\": \"$Enrolled_in\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"gradepoint\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid, name FROM employee ORDER BY salary DESC LIMIT 1",
    "mongodb": "db.employee.find({}, {\"eid\": 1, \"name\": 1, \"_id\": 0}).sort( {\"salary\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid, name FROM employee ORDER BY salary DESC LIMIT 1",
    "mongodb": "db.employee.find({}, {\"eid\": 1, \"name\": 1, \"_id\": 0}).sort( {\"salary\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid, name FROM employee ORDER BY salary DESC LIMIT 1",
    "mongodb": "db.employee.find({}, {\"eid\": 1, \"name\": 1, \"_id\": 0}).sort( {\"salary\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid, name FROM employee ORDER BY salary DESC LIMIT 1",
    "mongodb": "db.employee.find({}, {\"eid\": 1, \"name\": 1, \"_id\": 0}).sort( {\"salary\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT eid, name FROM employee ORDER BY salary DESC LIMIT 1",
    "mongodb": "db.employee.find({}, {\"eid\": 1, \"name\": 1, \"_id\": 0}).sort( {\"salary\": -1} ).limit( 1 )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T2.County FROM wine AS T1 JOIN appellations AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Score > 90 GROUP BY T2.County ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T2.County FROM wine AS T1 JOIN appellations AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Score > 90 GROUP BY T2.County ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airlines WHERE country = 'Russia';",
    "mongodb": "db.airlines.find({\"country\": \"Russia\"}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airlines WHERE country = 'Russia'",
    "mongodb": "db.airlines.find({\"country\": \"Russia\"}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT COUNT(*) FROM airlines WHERE country = 'Russia'",
    "mongodb": "db.airlines.find({\"country\": \"Russia\"}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(DISTINCT name) FROM airlines WHERE country = 'Russia'",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airlines WHERE country = 'Russia';",
    "mongodb": "db.airlines.find({\"country\": \"Russia\"}, {}).count()"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.first_name, T1.last_name, T1.salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T3.city = 'London'",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"city\": \"London\"}}, {\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$project\": {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employees.first_name, employees.last_name, employees.salary FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id WHERE locations.city = 'London';",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"city\": \"London\"}}, {\"$lookup\": {\"from\": \"departments\", \"localField\": \"employees.DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"location_id\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$project\": {\"employees.FIRST_NAME\": 1, \"employees.LAST_NAME\": 1, \"employees.SALARY\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, salary FROM employees AS e JOIN departments AS d ON e.department_id = d.department_id JOIN locations AS l ON d.location_id = l.location_id WHERE l.city = 'London';",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"city\": \"London\"}}, {\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$project\": {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.first_name, T1.last_name, T1.salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T3.city = 'London'",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"city\": \"London\"}}, {\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$project\": {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, salary FROM employees AS e JOIN departments AS d ON e.department_id = d.department_id JOIN locations AS l ON d.location_id = l.location_id WHERE l.city = 'London'",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"city\": \"London\"}}, {\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$project\": {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T2.Budget_Type_Code, T2.Budget_Type_Description, T1.Document_ID FROM Documents_with_Expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code;",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$lookup\": {\"from\": \"Ref_Budget_Codes\", \"localField\": \"Budget_Type_Code\", \"foreignField\": \"Budget_Type_Code\", \"as\": \"Ref_Budget_Codes\"}}, {\"$unwind\": \"$Ref_Budget_Codes\"}, {\"$project\": {\"Budget_Type_Code\": 1, \"Budget_Type_Description\": 1, \"Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T2.Budget_Type_Code, T2.Budget_Type_Description, T1.Document_ID FROM Documents_with_Expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$lookup\": {\"from\": \"Ref_Budget_Codes\", \"localField\": \"Budget_Type_Code\", \"foreignField\": \"Budget_Type_Code\", \"as\": \"Ref_Budget_Codes\"}}, {\"$unwind\": \"$Ref_Budget_Codes\"}, {\"$project\": {\"Budget_Type_Code\": 1, \"Budget_Type_Description\": 1, \"Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Budget_Type_Code, T2.Budget_Type_Description, T1.Document_ID FROM Documents_with_Expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code;",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$lookup\": {\"from\": \"Ref_Budget_Codes\", \"localField\": \"Budget_Type_Code\", \"foreignField\": \"Budget_Type_Code\", \"as\": \"Ref_Budget_Codes\"}}, {\"$unwind\": \"$Ref_Budget_Codes\"}, {\"$project\": {\"Budget_Type_Code\": 1, \"Budget_Type_Description\": 1, \"Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT D.Document_ID, DE.Budget_Type_Code, BC.Budget_Type_Description FROM Documents_with_Expenses DE JOIN Documents D ON DE.Document_ID = D.Document_ID JOIN Ref_Budget_Codes BC ON DE.Budget_Type_Code = BC.Budget_Type_Code;",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$lookup\": {\"from\": \"Documents\", \"localField\": \"Document_ID\", \"foreignField\": \"Document_ID\", \"as\": \"Documents\"}}, {\"$unwind\": \"$Documents\"}, {\"$lookup\": {\"from\": \"Ref_Budget_Codes\", \"localField\": \"Budget_Type_Code\", \"foreignField\": \"Budget_Type_Code\", \"as\": \"Ref_Budget_Codes\"}}, {\"$unwind\": \"$Ref_Budget_Codes\"}, {\"$project\": {\"Document_ID\": 1, \"Budget_Type_Code\": 1, \"Budget_Type_Description\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T2.Budget_Type_Code, T1.Budget_Type_Description, T2.Document_ID FROM Ref_Budget_Codes AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code;",
    "mongodb": "db.Ref_Budget_Codes.aggregate([{\"$lookup\": {\"from\": \"Documents_with_Expenses\", \"localField\": \"Budget_Type_Code\", \"foreignField\": \"Budget_Type_Code\", \"as\": \"Documents_with_Expenses\"}}, {\"$unwind\": \"$Documents_with_Expenses\"}, {\"$project\": {\"Budget_Type_Code\": 1, \"Budget_Type_Description\": 1, \"Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT count(*) FROM appellations WHERE County = 'Napa'",
    "mongodb": "db.appellations.find({\"County\": \"Napa\"}, {}).count()"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT count(*) FROM appellations WHERE County = \"Napa\"",
    "mongodb": "db.appellations.find({\"$lookup\": {\"from\": \"\", \"localField\": \"County\", \"foreignField\": \"Napa\"}}, {}).count()"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT count(*) FROM appellations WHERE County = 'Napa';",
    "mongodb": "db.appellations.find({\"County\": \"Napa\"}, {}).count()"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT count(*) FROM appellations WHERE County = 'Napa';",
    "mongodb": "db.appellations.find({\"County\": \"Napa\"}, {}).count()"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT count(*) FROM appellations WHERE County = 'Napa';",
    "mongodb": "db.appellations.find({\"County\": \"Napa\"}, {}).count()"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Type FROM school GROUP BY Type HAVING COUNT(*) = 2",
    "mongodb": ""
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Type FROM school GROUP BY Type HAVING COUNT(*) = 2",
    "mongodb": ""
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Type FROM school JOIN school_bus ON school.School_ID = school_bus.School_ID GROUP BY Type HAVING COUNT(DISTINCT Driver_ID) = 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT Type FROM school JOIN school_bus ON school.School_ID = school_bus.School_ID GROUP BY Type HAVING COUNT(DISTINCT Driver_ID) = 2', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Type FROM school GROUP BY Type HAVING COUNT(*) = 2",
    "mongodb": ""
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Type, COUNT(*) FROM school GROUP BY Type HAVING COUNT(*) = 2",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy, AllergyType FROM Allergy_Type;",
    "mongodb": "db.Allergy_Type.find({}, {\"Allergy\": 1, \"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy, AllergyType FROM Allergy_Type",
    "mongodb": "db.Allergy_Type.find({}, {\"Allergy\": 1, \"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy, AllergyType FROM Allergy_Type",
    "mongodb": "db.Allergy_Type.find({}, {\"Allergy\": 1, \"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy, AllergyType FROM Allergy_Type",
    "mongodb": "db.Allergy_Type.find({}, {\"Allergy\": 1, \"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy, AllergyType FROM Allergy_Type;",
    "mongodb": "db.Allergy_Type.find({}, {\"Allergy\": 1, \"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.AllergyType = 'food' OR T2.AllergyType = 'animal')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': \"SELECT count(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.AllergyType = 'food' OR T2.AllergyType = 'animal')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.AllergyType = \"food\" OR T2.AllergyType = \"animal\")",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT count(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.AllergyType = \"food\" OR T2.AllergyType = \"animal\")', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT COUNT(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy WHERE AllergyType = 'Food' OR AllergyType = 'Animals')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': \"SELECT COUNT(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy WHERE AllergyType = 'Food' OR AllergyType = 'Animals')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.AllergyType = 'food' OR T2.AllergyType = 'animal')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': \"SELECT count(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.AllergyType = 'food' OR T2.AllergyType = 'animal')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy WHERE AllergyType = 'food' OR AllergyType = 'animals')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': \"SELECT count(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy WHERE AllergyType = 'food' OR AllergyType = 'animals')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician ORDER BY Age ASC",
    "mongodb": "db.technician.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": 1} )"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician ORDER BY Age ASC",
    "mongodb": "db.technician.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": 1} )"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician ORDER BY Age ASC",
    "mongodb": "db.technician.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": 1} )"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician ORDER BY Age ASC",
    "mongodb": "db.technician.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": 1} )"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT Name FROM technician ORDER BY Age ASC",
    "mongodb": "db.technician.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": 1} )"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.subject_id, T2.subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id, T2.subject_name ORDER BY COUNT(*) ASC;",
    "mongodb": "db.Courses.aggregate([{\"$lookup\": {\"from\": \"Subjects\", \"localField\": \"subject_id\", \"foreignField\": \"subject_id\", \"as\": \"Subjects\"}}, {\"$unwind\": \"$Subjects\"}, {\"$group\": {\"_id\": {\"subject_id\": \"$subject_id\", \"subject_name\": \"$subject_name\"}, \"Expr2\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr2\": 1}}, {\"$project\": {\"subject_id\": 1, \"subject_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.subject_id, T2.subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id, T2.subject_name ORDER BY COUNT(*) ASC;",
    "mongodb": "db.Courses.aggregate([{\"$lookup\": {\"from\": \"Subjects\", \"localField\": \"subject_id\", \"foreignField\": \"subject_id\", \"as\": \"Subjects\"}}, {\"$unwind\": \"$Subjects\"}, {\"$group\": {\"_id\": {\"subject_id\": \"$subject_id\", \"subject_name\": \"$subject_name\"}, \"Expr2\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr2\": 1}}, {\"$project\": {\"subject_id\": 1, \"subject_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.subject_id, T2.subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id, T2.subject_name ORDER BY COUNT(*) ASC;",
    "mongodb": "db.Courses.aggregate([{\"$lookup\": {\"from\": \"Subjects\", \"localField\": \"subject_id\", \"foreignField\": \"subject_id\", \"as\": \"Subjects\"}}, {\"$unwind\": \"$Subjects\"}, {\"$group\": {\"_id\": {\"subject_id\": \"$subject_id\", \"subject_name\": \"$subject_name\"}, \"Expr2\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr2\": 1}}, {\"$project\": {\"subject_id\": 1, \"subject_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.subject_id, T2.subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id, T2.subject_name ORDER BY COUNT(*) ASC;",
    "mongodb": "db.Courses.aggregate([{\"$lookup\": {\"from\": \"Subjects\", \"localField\": \"subject_id\", \"foreignField\": \"subject_id\", \"as\": \"Subjects\"}}, {\"$unwind\": \"$Subjects\"}, {\"$group\": {\"_id\": {\"subject_id\": \"$subject_id\", \"subject_name\": \"$subject_name\"}, \"Expr2\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr2\": 1}}, {\"$project\": {\"subject_id\": 1, \"subject_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.subject_id, T2.subject_name, COUNT(*) AS course_count FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id, T2.subject_name ORDER BY course_count ASC;",
    "mongodb": "db.Courses.aggregate([{\"$lookup\": {\"from\": \"Subjects\", \"localField\": \"subject_id\", \"foreignField\": \"subject_id\", \"as\": \"Subjects\"}}, {\"$unwind\": \"$Subjects\"}, {\"$group\": {\"_id\": {\"subject_id\": \"$subject_id\", \"subject_name\": \"$subject_name\"}, \"course_count\": {\"$sum\": 1}}}, {\"$sort\": {\"course_count\": 1}}, {\"$project\": {\"subject_id\": 1, \"subject_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT Products.product_name, COUNT(Complaints.complaint_id) AS num_complaints FROM Products LEFT JOIN Complaints ON Products.product_id = Complaints.product_id GROUP BY Products.product_name;",
    "mongodb": "db.Products.aggregate([{\"$lookup\": {\"from\": \"Complaints\", \"localField\": \"product_id\", \"foreignField\": \"Complaints.product_id\", \"as\": \"Complaints\"}}, {\"$unwind\": \"$Complaints\"}, {\"$group\": {\"_id\": {\"product_name\": \"$product_name\"}, \"num_complaints\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$Complaints.complaint_id\", null]}, 1, 0]}}}}, {\"$project\": {\"product_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT t1.product_name, COUNT(*) FROM Products AS t1 JOIN Complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",
    "mongodb": "db.Products.aggregate([{\"$lookup\": {\"from\": \"Complaints\", \"localField\": \"product_id\", \"foreignField\": \"product_id\", \"as\": \"Complaints\"}}, {\"$unwind\": \"$Complaints\"}, {\"$group\": {\"_id\": {\"product_name\": \"$product_name\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"product_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT t1.product_name, COUNT(t2.complaint_id) AS total_complaints FROM Products AS t1 LEFT JOIN Complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name;",
    "mongodb": "db.Products.aggregate([{\"$lookup\": {\"from\": \"Complaints\", \"localField\": \"product_id\", \"foreignField\": \"product_id\", \"as\": \"Complaints\"}}, {\"$unwind\": \"$Complaints\"}, {\"$group\": {\"_id\": {\"product_name\": \"$product_name\"}, \"total_complaints\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$complaint_id\", null]}, 1, 0]}}}}, {\"$project\": {\"product_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT T3.product_name, COUNT(*) FROM Complaints AS T1 JOIN Products AS T3 ON T1.product_id = T3.product_id GROUP BY T3.product_id, T3.product_name",
    "mongodb": "db.Complaints.aggregate([{\"$lookup\": {\"from\": \"Products\", \"localField\": \"product_id\", \"foreignField\": \"product_id\", \"as\": \"Products\"}}, {\"$unwind\": \"$Products\"}, {\"$group\": {\"_id\": {\"product_id\": \"$product_id\", \"product_name\": \"$product_name\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"product_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_name, COUNT(*) FROM Products JOIN Complaints ON Products.product_id = Complaints.product_id GROUP BY product_name",
    "mongodb": "db.Products.aggregate([{\"$lookup\": {\"from\": \"Complaints\", \"localField\": \"product_id\", \"foreignField\": \"Complaints.product_id\", \"as\": \"Complaints\"}}, {\"$unwind\": \"$Complaints\"}, {\"$group\": {\"_id\": {\"product_name\": \"$product_name\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"product_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT DISTINCT t1.product_name FROM Products AS t1 JOIN Complaints AS t2 ON t1.product_id = t2.product_id JOIN Customers AS t3 ON t2.customer_id = t3.customer_id GROUP BY t3.customer_id ORDER BY COUNT(*) LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT DISTINCT t1.product_name FROM Products AS t1 JOIN Complaints AS t2 ON t1.product_id = t2.product_id JOIN Customers AS t3 ON t2.customer_id = t3.customer_id GROUP BY t3.customer_id ORDER BY COUNT(*) LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT DISTINCT p.product_name FROM Products p JOIN Complaints c ON p.product_id = c.product_id JOIN Customers cu ON c.customer_id = cu.customer_id GROUP BY cu.customer_id ORDER BY COUNT(*) LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT DISTINCT p.product_name FROM Products p JOIN Complaints c ON p.product_id = c.product_id JOIN Customers cu ON c.customer_id = cu.customer_id GROUP BY cu.customer_id ORDER BY COUNT(*) LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT t2.product_name FROM Products AS t2 JOIN Complaints AS t1 ON t2.product_id = t1.product_id JOIN Customers AS t3 ON t1.customer_id = t3.customer_id GROUP BY t3.customer_id ORDER BY count(*) ASC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT t2.product_name FROM Products AS t2 JOIN Complaints AS t1 ON t2.product_id = t1.product_id JOIN Customers AS t3 ON t1.customer_id = t3.customer_id GROUP BY t3.customer_id ORDER BY count(*) ASC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT p.product_name FROM Products p JOIN Complaints c ON p.product_id = c.product_id JOIN Customers cust ON c.customer_id = cust.customer_id GROUP BY p.product_name ORDER BY COUNT(c.customer_id) ASC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT p.product_name FROM Products p JOIN Complaints c ON p.product_id = c.product_id JOIN Customers cust ON c.customer_id = cust.customer_id GROUP BY p.product_name ORDER BY COUNT(c.customer_id) ASC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT DISTINCT p.product_name FROM Products p JOIN Complaints c ON p.product_id = c.product_id JOIN Customers cust ON c.customer_id = cust.customer_id GROUP BY cust.customer_id ORDER BY COUNT(*) LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT DISTINCT p.product_name FROM Products p JOIN Complaints c ON p.product_id = c.product_id JOIN Customers cust ON c.customer_id = cust.customer_id GROUP BY cust.customer_id ORDER BY COUNT(*) LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T2.Name FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = \"Red\" AND T2.Price > 50",
    "mongodb": "db.grapes.aggregate([{\"$match\": {\"Price\": {\"$gt\": 50}, \"$lookup\": {\"from\": \"\", \"localField\": \"Color\", \"foreignField\": \"Red\"}}}, {\"$lookup\": {\"from\": \"wine\", \"localField\": \"Grape\", \"foreignField\": \"Grape\", \"as\": \"wine\"}}, {\"$unwind\": \"$wine\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T2.Name FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = \"Red\" AND T2.Price > 50;",
    "mongodb": "db.grapes.aggregate([{\"$match\": {\"Price\": {\"$gt\": 50}, \"$lookup\": {\"from\": \"\", \"localField\": \"Color\", \"foreignField\": \"Red\"}}}, {\"$lookup\": {\"from\": \"wine\", \"localField\": \"Grape\", \"foreignField\": \"Grape\", \"as\": \"wine\"}}, {\"$unwind\": \"$wine\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Grape IN (SELECT Grape FROM grapes WHERE Color = \"red\") AND Price > 50",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': 'SELECT Name FROM wine WHERE Grape IN (SELECT Grape FROM grapes WHERE Color = \"red\") AND Price > 50', 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Grape IN (SELECT Grape FROM grapes WHERE Color = 'Red') AND Price > 50",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: wine | body={'db': 'wine_1', 'sql': \"SELECT Name FROM wine WHERE Grape IN (SELECT Grape FROM grapes WHERE Color = 'Red') AND Price > 50\", 'error': 'java.sql.SQLException: Non-existing table referenced: wine'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT T2.Name FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = \"Red\" AND T2.Price > 50",
    "mongodb": "db.grapes.aggregate([{\"$match\": {\"Price\": {\"$gt\": 50}, \"$lookup\": {\"from\": \"\", \"localField\": \"Color\", \"foreignField\": \"Red\"}}}, {\"$lookup\": {\"from\": \"wine\", \"localField\": \"Grape\", \"foreignField\": \"Grape\", \"as\": \"wine\"}}, {\"$unwind\": \"$wine\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID;",
    "mongodb": "db.journal_committee.aggregate([{\"$lookup\": {\"from\": \"editor\", \"localField\": \"Editor_ID\", \"foreignField\": \"Editor_ID\", \"as\": \"editor\"}}, {\"$unwind\": \"$editor\"}, {\"$lookup\": {\"from\": \"journal\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal\"}}, {\"$unwind\": \"$journal\"}, {\"$project\": {\"Name\": 1, \"Theme\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID",
    "mongodb": "db.journal_committee.aggregate([{\"$lookup\": {\"from\": \"editor\", \"localField\": \"Editor_ID\", \"foreignField\": \"Editor_ID\", \"as\": \"editor\"}}, {\"$unwind\": \"$editor\"}, {\"$lookup\": {\"from\": \"journal\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal\"}}, {\"$unwind\": \"$journal\"}, {\"$project\": {\"Name\": 1, \"Theme\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID",
    "mongodb": "db.journal_committee.aggregate([{\"$lookup\": {\"from\": \"editor\", \"localField\": \"Editor_ID\", \"foreignField\": \"Editor_ID\", \"as\": \"editor\"}}, {\"$unwind\": \"$editor\"}, {\"$lookup\": {\"from\": \"journal\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal\"}}, {\"$unwind\": \"$journal\"}, {\"$project\": {\"Name\": 1, \"Theme\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name, T1.Theme FROM journal_committee AS T3 JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID JOIN journal AS T1 ON T3.Journal_ID = T1.Journal_ID;",
    "mongodb": "db.journal_committee.aggregate([{\"$lookup\": {\"from\": \"editor\", \"localField\": \"Editor_ID\", \"foreignField\": \"Editor_ID\", \"as\": \"editor\"}}, {\"$unwind\": \"$editor\"}, {\"$lookup\": {\"from\": \"journal\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal\"}}, {\"$unwind\": \"$journal\"}, {\"$project\": {\"Name\": 1, \"Theme\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID;",
    "mongodb": "db.journal_committee.aggregate([{\"$lookup\": {\"from\": \"editor\", \"localField\": \"Editor_ID\", \"foreignField\": \"Editor_ID\", \"as\": \"editor\"}}, {\"$unwind\": \"$editor\"}, {\"$lookup\": {\"from\": \"journal\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal\"}}, {\"$unwind\": \"$journal\"}, {\"$project\": {\"Name\": 1, \"Theme\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee WHERE salary > (SELECT AVG(salary) FROM employee)",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)",
    "mongodb": ""
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
    "mongodb": "db.city.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"White\": -1} ).limit( 5 )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
    "mongodb": "db.city.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"White\": -1} ).limit( 5 )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
    "mongodb": "db.city.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"White\": -1} ).limit( 5 )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
    "mongodb": "db.city.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"White\": -1} ).limit( 5 )"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
    "mongodb": "db.city.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"White\": -1} ).limit( 5 )"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT address_line_1, address_line_2 FROM Customers WHERE email_address = \"vbogisich@example.org\";",
    "mongodb": "db.Customers.find({\"$lookup\": {\"from\": \"\", \"localField\": \"email_address\", \"foreignField\": \"vbogisich@example.org\"}}, {\"address_line_1\": 1, \"address_line_2\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT address_line_1 , address_line_2 FROM Customers WHERE email_address = \"vbogisich@example.org\"",
    "mongodb": "db.Customers.find({\"$lookup\": {\"from\": \"\", \"localField\": \"email_address\", \"foreignField\": \"vbogisich@example.org\"}}, {\"address_line_1\": 1, \"address_line_2\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT address_line_1, address_line_2 FROM Customers WHERE email_address = \"vbogisich@example.org\";",
    "mongodb": "db.Customers.find({\"$lookup\": {\"from\": \"\", \"localField\": \"email_address\", \"foreignField\": \"vbogisich@example.org\"}}, {\"address_line_1\": 1, \"address_line_2\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT address_line_1, address_line_2 FROM Customers WHERE email_address = \"vbogisich@example.org\"",
    "mongodb": "db.Customers.find({\"$lookup\": {\"from\": \"\", \"localField\": \"email_address\", \"foreignField\": \"vbogisich@example.org\"}}, {\"address_line_1\": 1, \"address_line_2\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT address_line_1, address_line_2 FROM Customers WHERE email_address = \"vbogisich@example.org\";",
    "mongodb": "db.Customers.find({\"$lookup\": {\"from\": \"\", \"localField\": \"email_address\", \"foreignField\": \"vbogisich@example.org\"}}, {\"address_line_1\": 1, \"address_line_2\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: flight | body={'db': 'flight_1', 'sql': 'SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: flight'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_allergy | body={'db': 'allergy_1', 'sql': 'SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy)', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_allergy | body={'db': 'allergy_1', 'sql': 'SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy)', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Allergy)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Allergy)', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Fname, LName FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Allergy)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT Fname, LName FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Allergy)', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Fname, LName FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Allergy)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT Fname, LName FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Allergy)', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT DISTINCT Range FROM mountain WHERE Mountain_ID IN (SELECT Mountain_ID FROM mountain ORDER BY Prominence DESC LIMIT 3)",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT DISTINCT Range FROM mountain WHERE Mountain_ID IN (SELECT Mountain_ID FROM mountain ORDER BY Prominence DESC LIMIT 3)",
    "mongodb": ""
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT max(area_code) , min(area_code) FROM AREA_CODE_STATE",
    "mongodb": "db.AREA_CODE_STATE.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$area_code\"}, \"Expr1\": {\"$min\": \"$area_code\"}}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT max(area_code) , min(area_code) FROM AREA_CODE_STATE",
    "mongodb": "db.AREA_CODE_STATE.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$area_code\"}, \"Expr1\": {\"$min\": \"$area_code\"}}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT max(area_code) , min(area_code) FROM AREA_CODE_STATE",
    "mongodb": "db.AREA_CODE_STATE.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$area_code\"}, \"Expr1\": {\"$min\": \"$area_code\"}}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT max(area_code) , min(area_code) FROM AREA_CODE_STATE",
    "mongodb": "db.AREA_CODE_STATE.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$area_code\"}, \"Expr1\": {\"$min\": \"$area_code\"}}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT max(area_code) , min(area_code) FROM AREA_CODE_STATE",
    "mongodb": "db.AREA_CODE_STATE.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$area_code\"}, \"Expr1\": {\"$min\": \"$area_code\"}}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT EMPLOYEE_ID FROM employees WHERE SALARY > (SELECT AVG(SALARY) FROM employees)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT EMPLOYEE_ID FROM employees WHERE SALARY > (SELECT AVG(SALARY) FROM employees)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id FROM employees WHERE salary > (SELECT AVG(salary) FROM employees)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT employee_id FROM employees WHERE salary > (SELECT AVG(salary) FROM employees)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT EMPLOYEE_ID FROM employees WHERE SALARY > (SELECT AVG(SALARY) FROM employees)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT EMPLOYEE_ID FROM employees WHERE SALARY > (SELECT AVG(SALARY) FROM employees)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT EMPLOYEE_ID FROM employees WHERE SALARY > (SELECT AVG(SALARY) FROM employees)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT EMPLOYEE_ID FROM employees WHERE SALARY > (SELECT AVG(SALARY) FROM employees)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employee_id FROM employees WHERE salary > (SELECT AVG(salary) FROM employees)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT employee_id FROM employees WHERE salary > (SELECT AVG(salary) FROM employees)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result = \"Fail\"",
    "mongodb": "db.Student_Tests_Taken.find({\"$lookup\": {\"from\": \"\", \"localField\": \"test_result\", \"foreignField\": \"Fail\"}}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result = \"Fail\"",
    "mongodb": "db.Student_Tests_Taken.find({\"$lookup\": {\"from\": \"\", \"localField\": \"test_result\", \"foreignField\": \"Fail\"}}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result = \"Fail\"",
    "mongodb": "db.Student_Tests_Taken.find({\"$lookup\": {\"from\": \"\", \"localField\": \"test_result\", \"foreignField\": \"Fail\"}}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT COUNT(*) FROM Student_Tests_Taken WHERE test_result = 'Failure'",
    "mongodb": "db.Student_Tests_Taken.find({\"test_result\": \"Failure\"}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result = \"Fail\"",
    "mongodb": "db.Student_Tests_Taken.find({\"$lookup\": {\"from\": \"\", \"localField\": \"test_result\", \"foreignField\": \"Fail\"}}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1;",
    "mongodb": "db.airports.find({}, {\"country\": 1, \"_id\": 0}).sort( {\"elevation\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
    "mongodb": "db.airports.find({}, {\"country\": 1, \"_id\": 0}).sort( {\"elevation\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
    "mongodb": "db.airports.find({}, {\"country\": 1, \"_id\": 0}).sort( {\"elevation\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
    "mongodb": "db.airports.find({}, {\"country\": 1, \"_id\": 0}).sort( {\"elevation\": -1} ).limit( 1 )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
    "mongodb": "db.airports.find({}, {\"country\": 1, \"_id\": 0}).sort( {\"elevation\": -1} ).limit( 1 )"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT T3.Name, T2.Title, T1.Date, T1.Price FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID JOIN cinema AS T3 ON T1.Cinema_ID = T3.Cinema_ID",
    "mongodb": "db.schedule.aggregate([{\"$lookup\": {\"from\": \"film\", \"localField\": \"Film_ID\", \"foreignField\": \"Film_ID\", \"as\": \"film\"}}, {\"$unwind\": \"$film\"}, {\"$lookup\": {\"from\": \"cinema\", \"localField\": \"Cinema_ID\", \"foreignField\": \"Cinema_ID\", \"as\": \"cinema\"}}, {\"$unwind\": \"$cinema\"}, {\"$project\": {\"Name\": 1, \"Title\": 1, \"Date\": 1, \"Price\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT C.Name, F.Title, S.Date, S.Price FROM schedule AS S JOIN cinema AS C ON S.Cinema_ID = C.Cinema_ID JOIN film AS F ON S.Film_ID = F.Film_ID;",
    "mongodb": "db.schedule.aggregate([{\"$lookup\": {\"from\": \"cinema\", \"localField\": \"Cinema_ID\", \"foreignField\": \"Cinema_ID\", \"as\": \"cinema\"}}, {\"$unwind\": \"$cinema\"}, {\"$lookup\": {\"from\": \"film\", \"localField\": \"Film_ID\", \"foreignField\": \"Film_ID\", \"as\": \"film\"}}, {\"$unwind\": \"$film\"}, {\"$project\": {\"Name\": 1, \"Title\": 1, \"Date\": 1, \"Price\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT T2.Name, T1.Title, T3.Date, T3.Price FROM film AS T1 JOIN schedule AS T3 ON T1.Film_ID = T3.Film_ID JOIN cinema AS T2 ON T2.Cinema_ID = T3.Cinema_ID;",
    "mongodb": "db.film.aggregate([{\"$lookup\": {\"from\": \"schedule\", \"localField\": \"Film_ID\", \"foreignField\": \"Film_ID\", \"as\": \"schedule\"}}, {\"$unwind\": \"$schedule\"}, {\"$lookup\": {\"from\": \"cinema\", \"localField\": \"Cinema_ID\", \"foreignField\": \"Cinema_ID\", \"as\": \"cinema\"}}, {\"$unwind\": \"$cinema\"}, {\"$project\": {\"Name\": 1, \"Title\": 1, \"Date\": 1, \"Price\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT T2.Name, T1.Title, T3.Date, T3.Price FROM film AS T1 JOIN schedule AS T3 ON T1.Film_ID = T3.Film_ID JOIN cinema AS T2 ON T2.Cinema_ID = T3.Cinema_ID",
    "mongodb": "db.film.aggregate([{\"$lookup\": {\"from\": \"schedule\", \"localField\": \"Film_ID\", \"foreignField\": \"Film_ID\", \"as\": \"schedule\"}}, {\"$unwind\": \"$schedule\"}, {\"$lookup\": {\"from\": \"cinema\", \"localField\": \"Cinema_ID\", \"foreignField\": \"Cinema_ID\", \"as\": \"cinema\"}}, {\"$unwind\": \"$cinema\"}, {\"$project\": {\"Name\": 1, \"Title\": 1, \"Date\": 1, \"Price\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT C.Name, F.Title, S.Date, S.Price FROM cinema C JOIN schedule S ON C.Cinema_ID = S.Cinema_ID JOIN film F ON S.Film_ID = F.Film_ID;",
    "mongodb": "db.cinema.aggregate([{\"$lookup\": {\"from\": \"schedule\", \"localField\": \"Cinema_ID\", \"foreignField\": \"Cinema_ID\", \"as\": \"schedule\"}}, {\"$unwind\": \"$schedule\"}, {\"$lookup\": {\"from\": \"film\", \"localField\": \"Film_ID\", \"foreignField\": \"Film_ID\", \"as\": \"film\"}}, {\"$unwind\": \"$film\"}, {\"$project\": {\"Name\": 1, \"Title\": 1, \"Date\": 1, \"Price\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Headquarters NOT IN (SELECT Headquarters FROM company WHERE Main_Industry = 'Banking')",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM company WHERE Main_Industry = 'Banking')",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company WHERE Company_ID IN (SELECT Company_ID FROM company WHERE Main_Industry = 'Banking'))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': \"SELECT Headquarters FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company WHERE Company_ID IN (SELECT Company_ID FROM company WHERE Main_Industry = 'Banking'))\", 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Main_Industry != 'Banking'",
    "mongodb": "db.company.find({\"Main_Industry\": {\"$ne\": \"Banking\"}}, {\"Headquarters\": 1, \"_id\": 0})"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company WHERE Company_ID IN (SELECT Company_ID FROM company WHERE Main_Industry = 'Banking'))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': \"SELECT Headquarters FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company WHERE Company_ID IN (SELECT Company_ID FROM company WHERE Main_Industry = 'Banking'))\", 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50",
    "mongodb": "db.airports.find({\"$and\": [{\"elevation\": {\"$gte\": -50}}, {\"elevation\": {\"$lte\": 50}}]}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50",
    "mongodb": "db.airports.find({\"$and\": [{\"elevation\": {\"$gte\": -50}}, {\"elevation\": {\"$lte\": 50}}]}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE elevation >= -50 AND elevation <= 50",
    "mongodb": "db.airports.find({\"elevation\": {\"$lte\": 50, \"$gte\": -50}}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50;",
    "mongodb": "db.airports.find({\"$and\": [{\"elevation\": {\"$gte\": -50}}, {\"elevation\": {\"$lte\": 50}}]}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50",
    "mongodb": "db.airports.find({\"$and\": [{\"elevation\": {\"$gte\": -50}}, {\"elevation\": {\"$lte\": 50}}]}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT DISTINCT state, created FROM VOTES",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': 'SELECT DISTINCT state, created FROM VOTES', 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT state, created FROM VOTES",
    "mongodb": "db.VOTES.find({}, {\"state\": 1, \"created\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT state, created FROM votes GROUP BY state, created",
    "mongodb": "db.votes.aggregate([{\"$group\": {\"_id\": {\"state\": \"$state\", \"created\": \"$created\"}}}, {\"$project\": {\"state\": 1, \"created\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT state, COUNT(*) FROM VOTES GROUP BY state",
    "mongodb": "db.VOTES.aggregate([{\"$group\": {\"_id\": {\"state\": \"$state\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"state\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT state, created FROM VOTES",
    "mongodb": "db.VOTES.find({}, {\"state\": 1, \"created\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Openning_year = 2010 INTERSECT SELECT Location FROM cinema WHERE Openning_year = 2011",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT LOCATION FROM cinema WHERE openning_year = 2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year = 2011",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Openning_year = 2010 INTERSECT SELECT Location FROM cinema WHERE Openning_year = 2011",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Openning_year = 2010 INTERSECT SELECT Location FROM cinema WHERE Openning_year = 2011",
    "mongodb": ""
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema WHERE Openning_year IN (2010, 2011)",
    "mongodb": "db.cinema.find({\"Openning_year\": {\"$in\": [2010, 2011]}}, {\"Location\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT t1.Name FROM driver AS t1 JOIN school_bus AS t2 ON t1.Driver_ID = t2.Driver_ID ORDER BY t2.Years_Working DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT t1.Name FROM driver AS t1 JOIN school_bus AS t2 ON t1.Driver_ID = t2.Driver_ID ORDER BY t2.Years_Working DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT t1.Name FROM driver AS t1 JOIN school_bus AS t2 ON t1.Driver_ID = t2.Driver_ID ORDER BY t2.Years_Working DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT t1.Name FROM driver AS t1 JOIN school_bus AS t2 ON t1.Driver_ID = t2.Driver_ID ORDER BY t2.Years_Working DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT t1.Name FROM driver AS t1 JOIN school_bus AS t2 ON t1.Driver_ID = t2.Driver_ID ORDER BY t2.Years_Working DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT t1.Name FROM driver AS t1 JOIN school_bus AS t2 ON t1.Driver_ID = t2.Driver_ID ORDER BY t2.Years_Working DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Name FROM driver WHERE Driver_ID IN (SELECT Driver_ID FROM school_bus ORDER BY Years_Working DESC LIMIT 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT Name FROM driver WHERE Driver_ID IN (SELECT Driver_ID FROM school_bus ORDER BY Years_Working DESC LIMIT 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT t1.Name FROM driver AS t1 JOIN school_bus AS t2 ON t1.Driver_ID = t2.Driver_ID ORDER BY t2.Years_Working DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: school_bus | body={'db': 'school_bus', 'sql': 'SELECT t1.Name FROM driver AS t1 JOIN school_bus AS t2 ON t1.Driver_ID = t2.Driver_ID ORDER BY t2.Years_Working DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: school_bus'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM employee",
    "mongodb": "db.employee.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM employee",
    "mongodb": "db.employee.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM employee",
    "mongodb": "db.employee.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM employee",
    "mongodb": "db.employee.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT count(*) FROM employee;",
    "mongodb": "db.employee.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_Type_Name, T1.Document_Type_Description, T2.Document_Date FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code",
    "mongodb": "db.Ref_Document_Types.aggregate([{\"$lookup\": {\"from\": \"Documents\", \"localField\": \"Document_Type_Code\", \"foreignField\": \"Document_Type_Code\", \"as\": \"Documents\"}}, {\"$unwind\": \"$Documents\"}, {\"$project\": {\"Document_Type_Name\": 1, \"Document_Type_Description\": 1, \"Document_Date\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_Type_Name, T1.Document_Type_Description, T2.Document_Date FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code;",
    "mongodb": "db.Ref_Document_Types.aggregate([{\"$lookup\": {\"from\": \"Documents\", \"localField\": \"Document_Type_Code\", \"foreignField\": \"Document_Type_Code\", \"as\": \"Documents\"}}, {\"$unwind\": \"$Documents\"}, {\"$project\": {\"Document_Type_Name\": 1, \"Document_Type_Description\": 1, \"Document_Date\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_Type_Name, T1.Document_Type_Description, T2.Document_Date FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code",
    "mongodb": "db.Ref_Document_Types.aggregate([{\"$lookup\": {\"from\": \"Documents\", \"localField\": \"Document_Type_Code\", \"foreignField\": \"Document_Type_Code\", \"as\": \"Documents\"}}, {\"$unwind\": \"$Documents\"}, {\"$project\": {\"Document_Type_Name\": 1, \"Document_Type_Description\": 1, \"Document_Date\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_Type_Name, T1.Document_Type_Description, T2.Document_Date FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code;",
    "mongodb": "db.Ref_Document_Types.aggregate([{\"$lookup\": {\"from\": \"Documents\", \"localField\": \"Document_Type_Code\", \"foreignField\": \"Document_Type_Code\", \"as\": \"Documents\"}}, {\"$unwind\": \"$Documents\"}, {\"$project\": {\"Document_Type_Name\": 1, \"Document_Type_Description\": 1, \"Document_Date\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_Type_Name, T1.Document_Type_Description, T2.Document_Date FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code;",
    "mongodb": "db.Ref_Document_Types.aggregate([{\"$lookup\": {\"from\": \"Documents\", \"localField\": \"Document_Type_Code\", \"foreignField\": \"Document_Type_Code\", \"as\": \"Documents\"}}, {\"$unwind\": \"$Documents\"}, {\"$project\": {\"Document_Type_Name\": 1, \"Document_Type_Description\": 1, \"Document_Date\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Karson\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Karson\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Karson\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Karson\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Karson\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Karson\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Karson\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Karson\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Karson\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Karson\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT DISTINCT department_id FROM employees GROUP BY department_id, manager_id HAVING COUNT(employee_id) >= 4;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT DISTINCT department_id FROM employees GROUP BY department_id, manager_id HAVING COUNT(employee_id) >= 4;', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT DISTINCT department_id FROM employees GROUP BY department_id, manager_id HAVING COUNT(employee_id) > 3;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT DISTINCT department_id FROM employees GROUP BY department_id, manager_id HAVING COUNT(employee_id) > 3;', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT DISTINCT department_id FROM employees GROUP BY department_id, manager_id HAVING COUNT(employee_id) >= 4",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT DISTINCT department_id FROM employees GROUP BY department_id, manager_id HAVING COUNT(employee_id) >= 4', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT DISTINCT department_id FROM employees GROUP BY department_id, manager_id HAVING COUNT(employee_id) >= 4",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT DISTINCT department_id FROM employees GROUP BY department_id, manager_id HAVING COUNT(employee_id) >= 4', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT DEPARTMENT_ID FROM employees GROUP BY DEPARTMENT_ID, MANAGER_ID HAVING COUNT(EMPLOYEE_ID) >= 4",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT DEPARTMENT_ID FROM employees GROUP BY DEPARTMENT_ID, MANAGER_ID HAVING COUNT(EMPLOYEE_ID) >= 4', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT count(*) FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT count(*) FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents WHERE document_id NOT IN (SELECT document_id FROM Documents_with_expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT count(*) FROM Documents WHERE document_id NOT IN (SELECT document_id FROM Documents_with_expenses)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT count(*) FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T1.Team, T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID",
    "mongodb": "db.player.aggregate([{\"$lookup\": {\"from\": \"school\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$project\": {\"Team\": 1, \"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT player.Team, school.Location FROM player JOIN school ON player.School_ID = school.School_ID;",
    "mongodb": "db.player.aggregate([{\"$lookup\": {\"from\": \"school\", \"localField\": \"player.School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$project\": {\"player.Team\": 1, \"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT Player.Player, Player.Team, School.Location FROM Player JOIN School ON Player.School_ID = School.School_ID;",
    "mongodb": "db.Player.aggregate([{\"$lookup\": {\"from\": \"school\", \"localField\": \"player.School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$project\": {\"player.Player\": 1, \"player.Team\": 1, \"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T1.Player, T1.Team, T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID",
    "mongodb": "db.player.aggregate([{\"$lookup\": {\"from\": \"school\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$project\": {\"player\": 1, \"Team\": 1, \"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "school_player",
    "sql": "SELECT T1.Player, T1.Team, T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID",
    "mongodb": "db.player.aggregate([{\"$lookup\": {\"from\": \"school\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"school\"}}, {\"$unwind\": \"$school\"}, {\"$project\": {\"player\": 1, \"Team\": 1, \"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T3.course_name FROM Courses AS T3 JOIN Student_Course_Enrolment AS T2 ON T3.course_id = T2.course_id GROUP BY T3.course_name ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T3.course_name FROM Courses AS T3 JOIN Student_Course_Enrolment AS T2 ON T3.course_id = T2.course_id GROUP BY T3.course_name ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT course_name FROM Courses JOIN Student_Course_Enrolment ON Courses.course_id = Student_Course_Enrolment.course_id GROUP BY course_name ORDER BY COUNT(DISTINCT Student_Course_Enrolment.student_id) DESC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT course_name FROM Courses JOIN Student_Course_Enrolment ON Courses.course_id = Student_Course_Enrolment.course_id GROUP BY course_name ORDER BY COUNT(DISTINCT Student_Course_Enrolment.student_id) DESC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: repair_assignment | body={'db': 'machine_repair', 'sql': 'SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank;', 'error': 'java.sql.SQLException: Non-existing table referenced: repair_assignment'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: repair_assignment | body={'db': 'machine_repair', 'sql': 'SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank;', 'error': 'java.sql.SQLException: Non-existing table referenced: repair_assignment'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank ASC;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: repair_assignment | body={'db': 'machine_repair', 'sql': 'SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank ASC;', 'error': 'java.sql.SQLException: Non-existing table referenced: repair_assignment'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank ASC;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: repair_assignment | body={'db': 'machine_repair', 'sql': 'SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank ASC;', 'error': 'java.sql.SQLException: Non-existing table referenced: repair_assignment'}"
  },
  {
    "db_id": "machine_repair",
    "sql": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: repair_assignment | body={'db': 'machine_repair', 'sql': 'SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank;', 'error': 'java.sql.SQLException: Non-existing table referenced: repair_assignment'}"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT count(*) FROM driver WHERE Home_city = 'Hartford' OR Age < 40",
    "mongodb": "db.driver.find({\"$or\": [{\"Home_city\": \"Hartford\"}, {\"Age\": {\"$lt\": 40}}]}, {}).count()"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT count(*) FROM driver WHERE home_city = 'Hartford' OR age < 40",
    "mongodb": "db.driver.find({\"$or\": [{\"Home_city\": \"Hartford\"}, {\"Age\": {\"$lt\": 40}}]}, {}).count()"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT count(*) FROM driver WHERE Home_city = 'Hartford' OR Age < 40",
    "mongodb": "db.driver.find({\"$or\": [{\"Home_city\": \"Hartford\"}, {\"Age\": {\"$lt\": 40}}]}, {}).count()"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT count(*) FROM driver WHERE home_city = 'Hartford' OR age < 40",
    "mongodb": "db.driver.find({\"$or\": [{\"Home_city\": \"Hartford\"}, {\"Age\": {\"$lt\": 40}}]}, {}).count()"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT count(*) FROM driver WHERE Home_city = 'Hartford' OR Age < 40",
    "mongodb": "db.driver.find({\"$or\": [{\"Home_city\": \"Hartford\"}, {\"Age\": {\"$lt\": 40}}]}, {}).count()"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Ref_Budget_Codes",
    "mongodb": "db.Ref_Budget_Codes.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT COUNT(*) FROM Ref_Budget_Codes;",
    "mongodb": "db.Ref_Budget_Codes.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Ref_Budget_Codes;",
    "mongodb": "db.Ref_Budget_Codes.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(DISTINCT Budget_Type_Code) FROM Ref_Budget_Codes",
    "mongodb": ""
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Ref_Budget_Codes",
    "mongodb": "db.Ref_Budget_Codes.find({}, {}).count()"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT min(distance) , avg(distance) , max(distance) FROM aircraft",
    "mongodb": "db.aircraft.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$distance\"}, \"Expr1\": {\"$avg\": \"$distance\"}, \"Expr2\": {\"$max\": \"$distance\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT min(distance) , avg(distance) , max(distance) FROM aircraft",
    "mongodb": "db.aircraft.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$distance\"}, \"Expr1\": {\"$avg\": \"$distance\"}, \"Expr2\": {\"$max\": \"$distance\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT min(distance) , avg(distance) , max(distance) FROM aircraft",
    "mongodb": "db.aircraft.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$distance\"}, \"Expr1\": {\"$avg\": \"$distance\"}, \"Expr2\": {\"$max\": \"$distance\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT min(distance) , avg(distance) , max(distance) FROM aircraft",
    "mongodb": "db.aircraft.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$distance\"}, \"Expr1\": {\"$avg\": \"$distance\"}, \"Expr2\": {\"$max\": \"$distance\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT min(distance) , avg(distance) , max(distance) FROM aircraft",
    "mongodb": "db.aircraft.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$min\": \"$distance\"}, \"Expr1\": {\"$avg\": \"$distance\"}, \"Expr2\": {\"$max\": \"$distance\"}}}])"
  },
  {
    "db_id": "musical",
    "sql": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Result FROM musical GROUP BY Result ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Result FROM musical GROUP BY Result ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "musical",
    "sql": "SELECT Result FROM musical GROUP BY Result ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain WHERE Height > 5600 UNION SELECT Country FROM mountain WHERE Height < 5200",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain WHERE Height > 5600 AND Height < 5200",
    "mongodb": "db.mountain.find({\"Height\": {\"$lt\": 5200, \"$gt\": 5600}}, {\"Country\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT avg(Price) , avg(Score) , Appelation FROM wine GROUP BY Appelation",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Appelation\": \"$Appelation\"}, \"Expr0\": {\"$avg\": \"$Price\"}, \"Expr1\": {\"$avg\": \"$Score\"}}}, {\"$project\": {\"Appelation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT avg(Price) , avg(Score) , Appelation FROM wine GROUP BY Appelation",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Appelation\": \"$Appelation\"}, \"Expr0\": {\"$avg\": \"$Price\"}, \"Expr1\": {\"$avg\": \"$Score\"}}}, {\"$project\": {\"Appelation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT avg(Price) , avg(Score) , Appelation FROM wine GROUP BY Appelation",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Appelation\": \"$Appelation\"}, \"Expr0\": {\"$avg\": \"$Price\"}, \"Expr1\": {\"$avg\": \"$Score\"}}}, {\"$project\": {\"Appelation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT avg(Price) , avg(Score) , Appelation FROM wine GROUP BY Appelation",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Appelation\": \"$Appelation\"}, \"Expr0\": {\"$avg\": \"$Price\"}, \"Expr1\": {\"$avg\": \"$Score\"}}}, {\"$project\": {\"Appelation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Appelation, AVG(Price), AVG(Score) FROM wine GROUP BY Appelation;",
    "mongodb": "db.wine.aggregate([{\"$group\": {\"_id\": {\"Appelation\": \"$Appelation\"}, \"Expr1\": {\"$avg\": \"$Price\"}, \"Expr2\": {\"$avg\": \"$Score\"}}}, {\"$project\": {\"Appelation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT * FROM Course ORDER BY Credits",
    "mongodb": "db.Course.find({}, {}).sort( {\"Credits\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT * FROM Course ORDER BY Credits ASC",
    "mongodb": "db.Course.find({}, {}).sort( {\"Credits\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT * FROM Course ORDER BY Credits ASC",
    "mongodb": "db.Course.find({}, {}).sort( {\"Credits\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT * FROM Course ORDER BY Credits ASC",
    "mongodb": "db.Course.find({}, {}).sort( {\"Credits\": 1} )"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT * FROM Course ORDER BY Credits ASC",
    "mongodb": "db.Course.find({}, {}).sort( {\"Credits\": 1} )"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = \"Pass\"",
    "mongodb": "db.Student_Tests_Taken.find({\"$lookup\": {\"from\": \"\", \"localField\": \"test_result\", \"foreignField\": \"Pass\"}}, {\"date_test_taken\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = \"Pass\"",
    "mongodb": "db.Student_Tests_Taken.find({\"$lookup\": {\"from\": \"\", \"localField\": \"test_result\", \"foreignField\": \"Pass\"}}, {\"date_test_taken\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = \"Pass\"",
    "mongodb": "db.Student_Tests_Taken.find({\"$lookup\": {\"from\": \"\", \"localField\": \"test_result\", \"foreignField\": \"Pass\"}}, {\"date_test_taken\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'",
    "mongodb": "db.Student_Tests_Taken.find({\"test_result\": \"Pass\"}, {\"date_test_taken\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'",
    "mongodb": "db.Student_Tests_Taken.find({\"test_result\": \"Pass\"}, {\"date_test_taken\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type WHERE Allergy = \"Cat\"",
    "mongodb": "db.Allergy_Type.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Allergy\", \"foreignField\": \"Cat\"}}, {\"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type WHERE Allergy = \"Cat\";",
    "mongodb": "db.Allergy_Type.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Allergy\", \"foreignField\": \"Cat\"}}, {\"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type WHERE Allergy = \"cats\"",
    "mongodb": "db.Allergy_Type.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Allergy\", \"foreignField\": \"cats\"}}, {\"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type WHERE Allergy = 'cat'",
    "mongodb": "db.Allergy_Type.find({\"Allergy\": \"cat\"}, {\"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type WHERE Allergy = \"cats\"",
    "mongodb": "db.Allergy_Type.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Allergy\", \"foreignField\": \"cats\"}}, {\"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(DISTINCT School_ID) FROM basketball_match",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT count(DISTINCT School_ID) FROM basketball_match', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT COUNT(DISTINCT School_ID) FROM basketball_match",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT COUNT(DISTINCT School_ID) FROM basketball_match', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(*) FROM university WHERE School_ID IN (SELECT DISTINCT School_ID FROM basketball_match)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT count(*) FROM university WHERE School_ID IN (SELECT DISTINCT School_ID FROM basketball_match)', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT COUNT(DISTINCT School_ID) FROM basketball_match",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT COUNT(DISTINCT School_ID) FROM basketball_match', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT count(DISTINCT School_ID) FROM basketball_match",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT count(DISTINCT School_ID) FROM basketball_match', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course JOIN Enrolled_in ON Course.CID = Enrolled_in.CID GROUP BY Course.CID HAVING COUNT(*) >= 5;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': 'SELECT CName FROM Course JOIN Enrolled_in ON Course.CID = Enrolled_in.CID GROUP BY Course.CID HAVING COUNT(*) >= 5;', 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course JOIN Enrolled_in ON Course.CID = Enrolled_in.CID GROUP BY Course.CID HAVING COUNT(*) >= 5;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': 'SELECT CName FROM Course JOIN Enrolled_in ON Course.CID = Enrolled_in.CID GROUP BY Course.CID HAVING COUNT(*) >= 5;', 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE CID IN (SELECT CID FROM Enrolled_in GROUP BY CID HAVING COUNT(*) >= 5)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': 'SELECT CName FROM Course WHERE CID IN (SELECT CID FROM Enrolled_in GROUP BY CID HAVING COUNT(*) >= 5)', 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT CName FROM Course WHERE CID IN (SELECT CID FROM Enrolled_in GROUP BY CID HAVING COUNT(StuID) >= 5)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': 'SELECT CName FROM Course WHERE CID IN (SELECT CID FROM Enrolled_in GROUP BY CID HAVING COUNT(StuID) >= 5)', 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T1.CName FROM Course AS T1 JOIN Enrolled_in AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT(*) >= 5",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': 'SELECT T1.CName FROM Course AS T1 JOIN Enrolled_in AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT(*) >= 5', 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code FROM Student WHERE LName = \"Kim\"",
    "mongodb": "db.Student.find({\"$lookup\": {\"from\": \"\", \"localField\": \"LName\", \"foreignField\": \"Kim\"}}, {\"city_code\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code FROM Student WHERE LName = \"Kim\"",
    "mongodb": "db.Student.find({\"$lookup\": {\"from\": \"\", \"localField\": \"LName\", \"foreignField\": \"Kim\"}}, {\"city_code\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code FROM Student WHERE LName = \"Kim\"",
    "mongodb": "db.Student.find({\"$lookup\": {\"from\": \"\", \"localField\": \"LName\", \"foreignField\": \"Kim\"}}, {\"city_code\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code FROM Student WHERE LName = \"Kim\"",
    "mongodb": "db.Student.find({\"$lookup\": {\"from\": \"\", \"localField\": \"LName\", \"foreignField\": \"Kim\"}}, {\"city_code\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code FROM Student WHERE LName = \"Kim\"",
    "mongodb": "db.Student.find({\"$lookup\": {\"from\": \"\", \"localField\": \"LName\", \"foreignField\": \"Kim\"}}, {\"city_code\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Room FROM Faculty WHERE Rank = \"Professor\" AND Building = \"NEB\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"Professor\" | body={'db': 'college_3', 'sql': 'SELECT Room FROM Faculty WHERE Rank = \"Professor\" AND Building = \"NEB\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"Professor\"'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Room FROM Faculty WHERE Rank = \"Professor\" AND Building = \"NEB\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"Professor\" | body={'db': 'college_3', 'sql': 'SELECT Room FROM Faculty WHERE Rank = \"Professor\" AND Building = \"NEB\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"Professor\"'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Room FROM Faculty WHERE Building = \"NEB\";",
    "mongodb": "db.Faculty.find({\"$lookup\": {\"from\": \"\", \"localField\": \"Building\", \"foreignField\": \"NEB\"}}, {\"Room\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Room FROM Faculty WHERE Rank = \"Professor\" AND Building = \"NEB\"",
    "mongodb": "ERROR: java.sql.SQLException: Field is not a valid field based on tables in the query: \"Professor\" | body={'db': 'college_3', 'sql': 'SELECT Room FROM Faculty WHERE Rank = \"Professor\" AND Building = \"NEB\"', 'error': 'java.sql.SQLException: Field is not a valid field based on tables in the query: \"Professor\"'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Room FROM Faculty WHERE Building = 'NEB'",
    "mongodb": "db.Faculty.find({\"Building\": \"NEB\"}, {\"Room\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Fname , T2.Lname FROM MINOR_IN AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.DNO = 140",
    "mongodb": "db.MINOR_IN.aggregate([{\"$match\": {\"DNO\": 140}}, {\"$lookup\": {\"from\": \"Student\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Student\"}}, {\"$unwind\": \"$Student\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Fname , T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID = T2.StuID WHERE T1.DNO = 140",
    "mongodb": "db.MINOR_IN.aggregate([{\"$match\": {\"DNO\": 140}}, {\"$lookup\": {\"from\": \"Student\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Student\"}}, {\"$unwind\": \"$Student\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname, LName FROM Student JOIN Minor_in ON Student.StuID = Minor_in.StuID WHERE Minor_in.DNO = 140;",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"Minor_in.DNO\": 140}}, {\"$lookup\": {\"from\": \"Minor_in\", \"localField\": \"StuID\", \"foreignField\": \"Minor_in.StuID\", \"as\": \"Minor_in\"}}, {\"$unwind\": \"$Minor_in\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T1.Fname, T1.Lname FROM Student AS T1 JOIN Minor_in AS T2 ON T1.StuID = T2.StuID WHERE T2.DNO = 140;",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"DNO\": 140}}, {\"$lookup\": {\"from\": \"Minor_in\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Minor_in\"}}, {\"$unwind\": \"$Minor_in\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Fname, T2.Lname FROM MINOR_IN AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.DNO = 140;",
    "mongodb": "db.MINOR_IN.aggregate([{\"$match\": {\"DNO\": 140}}, {\"$lookup\": {\"from\": \"Student\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Student\"}}, {\"$unwind\": \"$Student\"}, {\"$project\": {\"Fname\": 1, \"LName\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.address_line_1, T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING COUNT(*) >= 2;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.address_line_1, T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING COUNT(*) >= 2;', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.address_line_1, T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.address_line_1, T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT address_line_1, author_id FROM Course_Authors_and_Tutors WHERE author_id IN ( SELECT author_id FROM Courses GROUP BY author_id HAVING COUNT(*) >= 2 )",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT address_line_1, author_id FROM Course_Authors_and_Tutors WHERE author_id IN ( SELECT author_id FROM Courses GROUP BY author_id HAVING COUNT(*) >= 2 )', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.address_line_1, T1.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T1.author_id HAVING COUNT(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.address_line_1, T1.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T1.author_id HAVING COUNT(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT author_id, address_line_1 FROM Course_Authors_and_Tutors WHERE author_id IN ( SELECT author_id FROM Courses GROUP BY author_id HAVING COUNT(*) >= 2 )",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT author_id, address_line_1 FROM Course_Authors_and_Tutors WHERE author_id IN ( SELECT author_id FROM Courses GROUP BY author_id HAVING COUNT(*) >= 2 )', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT personal_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT personal_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT personal_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT personal_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.personal_name FROM Students AS T1 LEFT JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.registration_id IS NULL",
    "mongodb": "db.Students.aggregate([{\"$match\": {\"registration_id\": null}}, {\"$lookup\": {\"from\": \"Student_Course_Enrolment\", \"localField\": \"student_id\", \"foreignField\": \"student_id\", \"as\": \"Student_Course_Enrolment\"}}, {\"$unwind\": \"$Student_Course_Enrolment\"}, {\"$project\": {\"personal_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t2.Team_Name FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t1.Enrollment < (SELECT AVG(Enrollment) FROM university)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT t2.Team_Name FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t1.Enrollment < (SELECT AVG(Enrollment) FROM university)', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t2.Team_Name FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t1.Enrollment < (SELECT AVG(Enrollment) FROM university)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT t2.Team_Name FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t1.Enrollment < (SELECT AVG(Enrollment) FROM university)', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Team_Name FROM basketball_match WHERE School_ID IN (SELECT School_ID FROM university WHERE Enrollment < (SELECT AVG(Enrollment) FROM university))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT Team_Name FROM basketball_match WHERE School_ID IN (SELECT School_ID FROM university WHERE Enrollment < (SELECT AVG(Enrollment) FROM university))', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t1.Team_Name FROM basketball_match AS t1 JOIN university AS t2 ON t1.School_ID = t2.School_ID WHERE t2.Enrollment < (SELECT AVG(Enrollment) FROM university)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT t1.Team_Name FROM basketball_match AS t1 JOIN university AS t2 ON t1.School_ID = t2.School_ID WHERE t2.Enrollment < (SELECT AVG(Enrollment) FROM university)', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Team_Name FROM basketball_match WHERE School_ID IN (SELECT School_ID FROM university WHERE Enrollment < (SELECT AVG(Enrollment) FROM university))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT Team_Name FROM basketball_match WHERE School_ID IN (SELECT School_ID FROM university WHERE Enrollment < (SELECT AVG(Enrollment) FROM university))', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID GROUP BY t2.Ship_ID HAVING COUNT(*) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': 'SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID GROUP BY t2.Ship_ID HAVING COUNT(*) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID GROUP BY t1.Ship_ID HAVING COUNT(*) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': 'SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID GROUP BY t1.Ship_ID HAVING COUNT(*) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Ship.Name FROM Ship JOIN Captain ON Ship.Ship_ID = Captain.Ship_ID GROUP BY Ship.Ship_ID HAVING COUNT(*) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Captain | body={'db': 'ship_1', 'sql': 'SELECT Ship.Name FROM Ship JOIN Captain ON Ship.Ship_ID = Captain.Ship_ID GROUP BY Ship.Ship_ID HAVING COUNT(*) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT T2.Name FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID GROUP BY T1.Ship_ID HAVING COUNT(*) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT T2.Name FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID GROUP BY T1.Ship_ID HAVING COUNT(*) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name FROM Ship JOIN captain ON Ship.Ship_ID = captain.Ship_ID GROUP BY Ship.Name HAVING COUNT(*) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Name FROM Ship JOIN captain ON Ship.Ship_ID = captain.Ship_ID GROUP BY Ship.Name HAVING COUNT(*) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT T2.country, T1.name, COUNT(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.country, T1.name;",
    "mongodb": "db.airlines.aggregate([{\"$lookup\": {\"from\": \"routes\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"routes\"}}, {\"$unwind\": \"$routes\"}, {\"$group\": {\"_id\": {\"country\": \"$country\", \"name\": \"$name\"}, \"Expr2\": {\"$sum\": 1}}}, {\"$project\": {\"country\": 1, \"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT T1.country, T1.name, COUNT(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.country, T1.name",
    "mongodb": "db.airlines.aggregate([{\"$lookup\": {\"from\": \"routes\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"routes\"}}, {\"$unwind\": \"$routes\"}, {\"$group\": {\"_id\": {\"country\": \"$country\", \"name\": \"$name\"}, \"Expr2\": {\"$sum\": 1}}}, {\"$project\": {\"country\": 1, \"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT T3.name, T2.country, COUNT(*) FROM routes AS T1 JOIN airlines AS T3 ON T1.alid = T3.alid JOIN airports AS T2 ON T1.dst_apid = T2.apid GROUP BY T3.name, T2.country",
    "mongodb": "db.routes.aggregate([{\"$lookup\": {\"from\": \"airlines\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"airlines\"}}, {\"$unwind\": \"$airlines\"}, {\"$lookup\": {\"from\": \"airports\", \"localField\": \"dst_apid\", \"foreignField\": \"apid\", \"as\": \"airports\"}}, {\"$unwind\": \"$airports\"}, {\"$group\": {\"_id\": {\"name\": \"$name\", \"country\": \"$country\"}, \"Expr2\": {\"$sum\": 1}}}, {\"$project\": {\"name\": 1, \"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT Airlines.country, Airlines.name, COUNT(*) AS route_count FROM routes JOIN airlines ON routes.alid = airlines.alid GROUP BY Airlines.country, Airlines.name;",
    "mongodb": "db.routes.aggregate([{\"$lookup\": {\"from\": \"airlines\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"airlines\"}}, {\"$unwind\": \"$airlines\"}, {\"$group\": {\"_id\": {\"country\": \"$country\", \"name\": \"$name\"}, \"route_count\": {\"$sum\": 1}}}, {\"$project\": {\"country\": 1, \"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT T1.country, T1.name, count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.country, T1.name",
    "mongodb": "db.airlines.aggregate([{\"$lookup\": {\"from\": \"routes\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"routes\"}}, {\"$unwind\": \"$routes\"}, {\"$group\": {\"_id\": {\"country\": \"$country\", \"name\": \"$name\"}, \"Expr2\": {\"$sum\": 1}}}, {\"$project\": {\"country\": 1, \"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = \"Cathrine\"",
    "mongodb": "db.Course_Authors_and_Tutors.find({\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"Cathrine\"}}, {\"address_line_1\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = \"Cathrine\"",
    "mongodb": "db.Course_Authors_and_Tutors.find({\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"Cathrine\"}}, {\"address_line_1\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = \"Cathrine\"",
    "mongodb": "db.Course_Authors_and_Tutors.find({\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"Cathrine\"}}, {\"address_line_1\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = \"Cathrine\"",
    "mongodb": "db.Course_Authors_and_Tutors.find({\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"Cathrine\"}}, {\"address_line_1\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = \"Cathrine\"",
    "mongodb": "db.Course_Authors_and_Tutors.find({\"$lookup\": {\"from\": \"\", \"localField\": \"personal_name\", \"foreignField\": \"Cathrine\"}}, {\"address_line_1\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employees.employee_id, jobs.job_title FROM employees JOIN jobs ON employees.job_id = jobs.job_id WHERE employees.department_id = 80;",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"employees.DEPARTMENT_ID\": 80}}, {\"$lookup\": {\"from\": \"jobs\", \"localField\": \"employees.JOB_ID\", \"foreignField\": \"JOB_ID\", \"as\": \"jobs\"}}, {\"$unwind\": \"$jobs\"}, {\"$project\": {\"employees.EMPLOYEE_ID\": 1, \"JOB_TITLE\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.employee_id, T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80;",
    "mongodb": "db.employees.aggregate([{\"$match\": {\"department_id\": 80}}, {\"$lookup\": {\"from\": \"jobs\", \"localField\": \"JOB_ID\", \"foreignField\": \"JOB_ID\", \"as\": \"jobs\"}}, {\"$unwind\": \"$jobs\"}, {\"$project\": {\"employee_id\": 1, \"JOB_TITLE\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT EMPLOYEE_ID, JOB_TITLE FROM employees WHERE DEPARTMENT_ID = 80;",
    "mongodb": "db.employees.find({\"DEPARTMENT_ID\": 80}, {\"EMPLOYEE_ID\": 1, \"JOB_TITLE\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT EMPLOYEE_ID, JOB_TITLE FROM employees WHERE DEPARTMENT_ID = 80;",
    "mongodb": "db.employees.find({\"DEPARTMENT_ID\": 80}, {\"EMPLOYEE_ID\": 1, \"JOB_TITLE\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT EMPLOYEE_ID, JOB_TITLE FROM employees WHERE DEPARTMENT_ID = 80;",
    "mongodb": "db.employees.find({\"DEPARTMENT_ID\": 80}, {\"EMPLOYEE_ID\": 1, \"JOB_TITLE\": 1, \"_id\": 0})"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT headquarters FROM company WHERE Main_Industry = 'Banking' GROUP BY headquarters HAVING COUNT(*) >= 2;",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' GROUP BY Headquarters HAVING COUNT(*) >= 2",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT t1.Headquarters FROM company AS t1 JOIN station_company AS t2 ON t1.Company_ID = t2.Company_ID WHERE t1.Main_Industry = \"Banking\" GROUP BY t1.Headquarters HAVING count(*) >= 2",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: station_company | body={'db': 'gas_company', 'sql': 'SELECT t1.Headquarters FROM company AS t1 JOIN station_company AS t2 ON t1.Company_ID = t2.Company_ID WHERE t1.Main_Industry = \"Banking\" GROUP BY t1.Headquarters HAVING count(*) >= 2', 'error': 'java.sql.SQLException: Non-existing table referenced: station_company'}"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' GROUP BY Headquarters HAVING COUNT(DISTINCT Company_ID) >= 2;",
    "mongodb": ""
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' GROUP BY Headquarters HAVING COUNT(*) >= 2",
    "mongodb": ""
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Position, Team FROM pilot",
    "mongodb": "db.pilot.find({}, {\"Position\": 1, \"Team\": 1, \"_id\": 0})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Position, Team FROM pilot",
    "mongodb": "db.pilot.find({}, {\"Position\": 1, \"Team\": 1, \"_id\": 0})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Position, Team FROM pilot",
    "mongodb": "db.pilot.find({}, {\"Position\": 1, \"Team\": 1, \"_id\": 0})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT T1.Position, T1.Team FROM pilot AS T1",
    "mongodb": "db.pilot.find({}, {\"Position\": 1, \"Team\": 1, \"_id\": 0})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Position, Team FROM pilot",
    "mongodb": "db.pilot.find({}, {\"Position\": 1, \"Team\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF'",
    "mongodb": "db.Documents_with_expenses.find({\"budget_type_code\": \"SF\"}, {\"document_id\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = 'SF'",
    "mongodb": "db.Documents_with_Expenses.find({\"Budget_Type_Code\": \"SF\"}, {\"Document_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = 'SF'",
    "mongodb": "db.Documents_with_Expenses.find({\"Budget_Type_Code\": \"SF\"}, {\"Document_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = 'SF'",
    "mongodb": "db.Documents_with_Expenses.find({\"Budget_Type_Code\": \"SF\"}, {\"Document_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = 'SF'",
    "mongodb": "db.Documents_with_Expenses.find({\"Budget_Type_Code\": \"SF\"}, {\"Document_ID\": 1, \"_id\": 0})"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T3 ON T1.DNO = T3.DNO JOIN FACULTY AS T2 ON T3.FacID = T2.FacID WHERE T1.DName = \"Computer Science\"",
    "mongodb": "db.Department.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"DName\", \"foreignField\": \"Computer Science\"}}}, {\"$lookup\": {\"from\": \"MEMBER_OF\", \"localField\": \"DNO\", \"foreignField\": \"DNO\", \"as\": \"MEMBER_OF\"}}, {\"$unwind\": \"$MEMBER_OF\"}, {\"$lookup\": {\"from\": \"Faculty\", \"localField\": \"FacID\", \"foreignField\": \"FacID\", \"as\": \"Faculty\"}}, {\"$unwind\": \"$Faculty\"}, {\"$project\": {\"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T3 ON T1.DNO = T3.DNO JOIN FACULTY AS T2 ON T3.FacID = T2.FacID WHERE T1.DName = \"Computer Science\"",
    "mongodb": "db.Department.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"DName\", \"foreignField\": \"Computer Science\"}}}, {\"$lookup\": {\"from\": \"MEMBER_OF\", \"localField\": \"DNO\", \"foreignField\": \"DNO\", \"as\": \"MEMBER_OF\"}}, {\"$unwind\": \"$MEMBER_OF\"}, {\"$lookup\": {\"from\": \"Faculty\", \"localField\": \"FacID\", \"foreignField\": \"FacID\", \"as\": \"Faculty\"}}, {\"$unwind\": \"$Faculty\"}, {\"$project\": {\"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Lname FROM Faculty AS f JOIN Member_of AS m ON f.FacID = m.FacID JOIN Department AS d ON m.DNO = d.DNO WHERE d.DName = 'Computer Science'",
    "mongodb": "db.Faculty.aggregate([{\"$match\": {\"DName\": \"Computer Science\"}}, {\"$lookup\": {\"from\": \"Member_of\", \"localField\": \"FacID\", \"foreignField\": \"FacID\", \"as\": \"Member_of\"}}, {\"$unwind\": \"$Member_of\"}, {\"$lookup\": {\"from\": \"Department\", \"localField\": \"DNO\", \"foreignField\": \"DNO\", \"as\": \"Department\"}}, {\"$unwind\": \"$Department\"}, {\"$project\": {\"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Lname FROM Faculty JOIN Member_of ON Faculty.FacID = Member_of.FacID JOIN Department ON Member_of.DNO = Department.DNO WHERE Department.DName = 'Computer Science'",
    "mongodb": "db.Faculty.aggregate([{\"$match\": {\"DName\": \"Computer Science\"}}, {\"$lookup\": {\"from\": \"Member_of\", \"localField\": \"FacID\", \"foreignField\": \"Member_of.FacID\", \"as\": \"Member_of\"}}, {\"$unwind\": \"$Member_of\"}, {\"$lookup\": {\"from\": \"Department\", \"localField\": \"Member_of.DNO\", \"foreignField\": \"DNO\", \"as\": \"Department\"}}, {\"$unwind\": \"$Department\"}, {\"$project\": {\"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Lname FROM Department AS T1 JOIN Faculty AS T2 ON T1.DNO = T2.Building JOIN Member_of AS T3 ON T2.FacID = T3.FacID WHERE T1.DName = \"Computer Science\"",
    "mongodb": "db.Department.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"DName\", \"foreignField\": \"Computer Science\"}}}, {\"$lookup\": {\"from\": \"Faculty\", \"localField\": \"DNO\", \"foreignField\": \"Building\", \"as\": \"Faculty\"}}, {\"$unwind\": \"$Faculty\"}, {\"$lookup\": {\"from\": \"Member_of\", \"localField\": \"FacID\", \"foreignField\": \"FacID\", \"as\": \"Member_of\"}}, {\"$unwind\": \"$Member_of\"}, {\"$project\": {\"Lname\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT max(Points) FROM climber WHERE Country = \"United Kingdom\"",
    "mongodb": "db.climber.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Country\", \"foreignField\": \"United Kingdom\"}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Points\"}}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT max(Points) FROM climber WHERE Country = \"United Kingdom\"",
    "mongodb": "db.climber.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Country\", \"foreignField\": \"United Kingdom\"}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Points\"}}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT max(Points) FROM climber WHERE Country = 'United Kingdom'",
    "mongodb": "db.climber.aggregate([{\"$match\": {\"Country\": \"United Kingdom\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Points\"}}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT MAX(Points) FROM climber WHERE Country = \"United Kingdom\"",
    "mongodb": "db.climber.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"Country\", \"foreignField\": \"United Kingdom\"}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Points\"}}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT MAX(Points) FROM climber WHERE Country = 'United Kingdom'",
    "mongodb": "db.climber.aggregate([{\"$match\": {\"Country\": \"United Kingdom\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$Points\"}}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Major, COUNT(*) FROM Student GROUP BY Major",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Major\": \"$Major\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Major\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Major, COUNT(*) FROM Student GROUP BY Major",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Major\": \"$Major\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Major\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T1.Major, COUNT(*) FROM Student AS T1 GROUP BY T1.Major",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Major\": \"$Major\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Major\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Major, COUNT(*) FROM Student GROUP BY Major",
    "mongodb": "db.Student.aggregate([{\"$group\": {\"_id\": {\"Major\": \"$Major\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Major\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T2.AllergyType, COUNT(*) FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy GROUP BY T2.AllergyType",
    "mongodb": "db.Has_Allergy.aggregate([{\"$lookup\": {\"from\": \"Allergy_Type\", \"localField\": \"Allergy\", \"foreignField\": \"Allergy\", \"as\": \"Allergy_Type\"}}, {\"$unwind\": \"$Allergy_Type\"}, {\"$group\": {\"_id\": {\"AllergyType\": \"$AllergyType\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"AllergyType\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T3.Location FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T1.Station_ID = T3.Station_ID WHERE T2.Market_Value > 100",
    "mongodb": "db.station_company.aggregate([{\"$match\": {\"Market_Value\": {\"$gt\": 100}}}, {\"$lookup\": {\"from\": \"company\", \"localField\": \"Company_ID\", \"foreignField\": \"Company_ID\", \"as\": \"company\"}}, {\"$unwind\": \"$company\"}, {\"$lookup\": {\"from\": \"gas_station\", \"localField\": \"Station_ID\", \"foreignField\": \"Station_ID\", \"as\": \"gas_station\"}}, {\"$unwind\": \"$gas_station\"}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT gas_station.Location FROM station_company JOIN company ON station_company.Company_ID = company.Company_ID JOIN gas_station ON station_company.Station_ID = gas_station.Station_ID WHERE company.Market_Value > 100",
    "mongodb": "db.station_company.aggregate([{\"$match\": {\"Market_Value\": {\"$gt\": 100}}}, {\"$lookup\": {\"from\": \"company\", \"localField\": \"station_company.Company_ID\", \"foreignField\": \"Company_ID\", \"as\": \"company\"}}, {\"$unwind\": \"$company\"}, {\"$lookup\": {\"from\": \"gas_station\", \"localField\": \"station_company.Station_ID\", \"foreignField\": \"Station_ID\", \"as\": \"gas_station\"}}, {\"$unwind\": \"$gas_station\"}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Location FROM gas_station AS gs JOIN station_company AS sc ON gs.Station_ID = sc.Station_ID JOIN company AS c ON sc.Company_ID = c.Company_ID WHERE c.Market_Value > 100",
    "mongodb": "db.gas_station.aggregate([{\"$match\": {\"Market_Value\": {\"$gt\": 100}}}, {\"$lookup\": {\"from\": \"station_company\", \"localField\": \"Station_ID\", \"foreignField\": \"Station_ID\", \"as\": \"station_company\"}}, {\"$unwind\": \"$station_company\"}, {\"$lookup\": {\"from\": \"company\", \"localField\": \"Company_ID\", \"foreignField\": \"Company_ID\", \"as\": \"company\"}}, {\"$unwind\": \"$company\"}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T2.Location FROM gas_station AS T2 JOIN station_company AS T1 ON T2.Station_ID = T1.Station_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID WHERE T3.Market_Value > 100",
    "mongodb": "db.gas_station.aggregate([{\"$match\": {\"Market_Value\": {\"$gt\": 100}}}, {\"$lookup\": {\"from\": \"station_company\", \"localField\": \"Station_ID\", \"foreignField\": \"Station_ID\", \"as\": \"station_company\"}}, {\"$unwind\": \"$station_company\"}, {\"$lookup\": {\"from\": \"company\", \"localField\": \"Company_ID\", \"foreignField\": \"Company_ID\", \"as\": \"company\"}}, {\"$unwind\": \"$company\"}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT T2.Location FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID WHERE T2.Market_Value > 100;",
    "mongodb": "db.station_company.aggregate([{\"$match\": {\"Market_Value\": {\"$gt\": 100}}}, {\"$lookup\": {\"from\": \"company\", \"localField\": \"Company_ID\", \"foreignField\": \"Company_ID\", \"as\": \"company\"}}, {\"$unwind\": \"$company\"}, {\"$project\": {\"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot WHERE Team = \"Bradley\" OR Team = \"Fordham\";",
    "mongodb": "db.pilot.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"Bradley\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"Fordham\"}}]}, {\"Pilot_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot WHERE Team = \"Bradley\" OR Team = \"Fordham\"",
    "mongodb": "db.pilot.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"Bradley\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"Fordham\"}}]}, {\"Pilot_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot WHERE Team = \"Bradley\" OR Team = \"Fordham\";",
    "mongodb": "db.pilot.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"Bradley\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"Fordham\"}}]}, {\"Pilot_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot WHERE Team = \"Bradley\" OR Team = \"Fordham\"",
    "mongodb": "db.pilot.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"Bradley\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"Fordham\"}}]}, {\"Pilot_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Pilot_name FROM pilot WHERE Team = \"Bradley\" OR Team = \"Fordham\"",
    "mongodb": "db.pilot.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"Bradley\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"Team\", \"foreignField\": \"Fordham\"}}]}, {\"Pilot_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT MAX(created) FROM VOTES WHERE state = 'CA';",
    "mongodb": "db.VOTES.aggregate([{\"$match\": {\"state\": \"CA\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$created\"}}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT MAX(created) FROM VOTES WHERE state = 'CA'",
    "mongodb": "db.VOTES.aggregate([{\"$match\": {\"state\": \"CA\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$created\"}}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT MAX(created) FROM VOTES WHERE state = 'CA';",
    "mongodb": "db.VOTES.aggregate([{\"$match\": {\"state\": \"CA\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$created\"}}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT MAX(created) FROM VOTES WHERE state = 'CA'",
    "mongodb": "db.VOTES.aggregate([{\"$match\": {\"state\": \"CA\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$created\"}}}])"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT MAX(created) FROM VOTES WHERE state = 'CA'",
    "mongodb": "db.VOTES.aggregate([{\"$match\": {\"state\": \"CA\"}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$max\": \"$created\"}}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.employee_id, T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$lookup\": {\"from\": \"countries\", \"localField\": \"country_id\", \"foreignField\": \"country_id\", \"as\": \"countries\"}}, {\"$unwind\": \"$countries\"}, {\"$project\": {\"employee_id\": 1, \"country_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.employee_id, T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$lookup\": {\"from\": \"countries\", \"localField\": \"country_id\", \"foreignField\": \"country_id\", \"as\": \"countries\"}}, {\"$unwind\": \"$countries\"}, {\"$project\": {\"employee_id\": 1, \"country_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT employees.EMPLOYEE_ID, countries.COUNTRY_NAME FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID JOIN countries ON locations.COUNTRY_ID = countries.COUNTRY_ID;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"employees.DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$lookup\": {\"from\": \"countries\", \"localField\": \"COUNTRY_ID\", \"foreignField\": \"COUNTRY_ID\", \"as\": \"countries\"}}, {\"$unwind\": \"$countries\"}, {\"$project\": {\"employees.EMPLOYEE_ID\": 1, \"COUNTRY_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT E.EMPLOYEE_ID, C.COUNTRY_NAME FROM employees E JOIN departments D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID JOIN locations L ON D.LOCATION_ID = L.LOCATION_ID JOIN countries C ON L.COUNTRY_ID = C.COUNTRY_ID;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$lookup\": {\"from\": \"countries\", \"localField\": \"COUNTRY_ID\", \"foreignField\": \"COUNTRY_ID\", \"as\": \"countries\"}}, {\"$unwind\": \"$countries\"}, {\"$project\": {\"EMPLOYEE_ID\": 1, \"COUNTRY_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.employee_id, T3.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"departments\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"departments\"}}, {\"$unwind\": \"$departments\"}, {\"$lookup\": {\"from\": \"locations\", \"localField\": \"LOCATION_ID\", \"foreignField\": \"LOCATION_ID\", \"as\": \"locations\"}}, {\"$unwind\": \"$locations\"}, {\"$lookup\": {\"from\": \"countries\", \"localField\": \"country_id\", \"foreignField\": \"country_id\", \"as\": \"countries\"}}, {\"$unwind\": \"$countries\"}, {\"$project\": {\"employee_id\": 1, \"country_name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, salary FROM employees WHERE salary < 6000",
    "mongodb": "db.employees.find({\"salary\": {\"$lt\": 6000}}, {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, salary FROM employees WHERE salary < 6000",
    "mongodb": "db.employees.find({\"salary\": {\"$lt\": 6000}}, {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, salary FROM employees WHERE salary < 6000",
    "mongodb": "db.employees.find({\"salary\": {\"$lt\": 6000}}, {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name, salary FROM employees WHERE salary < 6000",
    "mongodb": "db.employees.find({\"salary\": {\"$lt\": 6000}}, {\"first_name\": 1, \"last_name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS full_name, SALARY FROM employees WHERE SALARY < 6000;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS full_name, SALARY FROM employees WHERE SALARY < 6000;\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T2.Carrier HAVING COUNT(DISTINCT T1.Shop_ID) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T2.Carrier HAVING COUNT(DISTINCT T1.Shop_ID) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T2.Carrier HAVING COUNT(DISTINCT T1.Shop_ID) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T2.Carrier HAVING COUNT(DISTINCT T1.Shop_ID) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT DISTINCT Carrier FROM device WHERE Device_ID IN ( SELECT Device_ID FROM stock GROUP BY Device_ID HAVING COUNT(DISTINCT Shop_ID) > 1 )",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT DISTINCT Carrier FROM device WHERE Device_ID IN ( SELECT Device_ID FROM stock GROUP BY Device_ID HAVING COUNT(DISTINCT Shop_ID) > 1 )', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT DISTINCT T1.Carrier FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Carrier HAVING COUNT(DISTINCT T2.Shop_ID) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT DISTINCT T1.Carrier FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Carrier HAVING COUNT(DISTINCT T2.Shop_ID) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT t1.Carrier FROM device AS t1 JOIN stock AS t2 ON t1.Device_ID = t2.Device_ID GROUP BY t1.Carrier HAVING COUNT(DISTINCT t2.Shop_ID) > 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: stock | body={'db': 'device', 'sql': 'SELECT t1.Carrier FROM device AS t1 JOIN stock AS t2 ON t1.Device_ID = t2.Device_ID GROUP BY t1.Carrier HAVING COUNT(DISTINCT t2.Shop_ID) > 1', 'error': 'java.sql.SQLException: Non-existing table referenced: stock'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name, family_name FROM Students ORDER BY family_name;",
    "mongodb": "db.Students.find({}, {\"personal_name\": 1, \"family_name\": 1, \"_id\": 0}).sort( {\"family_name\": 1} )"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name, family_name FROM Students ORDER BY family_name;",
    "mongodb": "db.Students.find({}, {\"personal_name\": 1, \"family_name\": 1, \"_id\": 0}).sort( {\"family_name\": 1} )"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name, family_name FROM Students ORDER BY family_name",
    "mongodb": "db.Students.find({}, {\"personal_name\": 1, \"family_name\": 1, \"_id\": 0}).sort( {\"family_name\": 1} )"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name, family_name FROM Students ORDER BY family_name ASC",
    "mongodb": "db.Students.find({}, {\"personal_name\": 1, \"family_name\": 1, \"_id\": 0}).sort( {\"family_name\": 1} )"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT personal_name, family_name FROM Students ORDER BY family_name",
    "mongodb": "db.Students.find({}, {\"personal_name\": 1, \"family_name\": 1, \"_id\": 0}).sort( {\"family_name\": 1} )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT sum(Enrollment) , Affiliation FROM university GROUP BY Affiliation",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr0\": {\"$sum\": \"$Enrollment\"}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT sum(u.Enrollment) , u.Affiliation FROM university u GROUP BY u.Affiliation",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr0\": {\"$sum\": \"$Enrollment\"}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Affiliation, SUM(Enrollment) FROM university GROUP BY Affiliation",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr1\": {\"$sum\": \"$Enrollment\"}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT sum(u.enrollment) , u.affiliation FROM university u GROUP BY u.affiliation;",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr0\": {\"$sum\": \"$Enrollment\"}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Affiliation, SUM(Enrollment) FROM university GROUP BY Affiliation",
    "mongodb": "db.university.aggregate([{\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr1\": {\"$sum\": \"$Enrollment\"}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {\"address_line_1\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors;",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {\"address_line_1\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {\"address_line_1\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {\"address_line_1\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {\"address_line_1\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Party FROM driver WHERE Home_city = 'Hartford' AND Age > 40;",
    "mongodb": "db.driver.find({\"Age\": {\"$gt\": 40}, \"Home_city\": \"Hartford\"}, {\"Party\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Party FROM driver WHERE home_city = 'Hartford' AND age > 40",
    "mongodb": "db.driver.find({\"Age\": {\"$gt\": 40}, \"Home_city\": \"Hartford\"}, {\"Party\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT DISTINCT Party FROM driver WHERE Home_city = 'Hartford' AND Age > 40",
    "mongodb": "db.driver.distinct(\"Party\", {\"Age\": {\"$gt\": 40}, \"Home_city\": \"Hartford\"})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Party FROM driver WHERE Home_city = 'Hartford' AND Age > 40",
    "mongodb": "db.driver.find({\"Age\": {\"$gt\": 40}, \"Home_city\": \"Hartford\"}, {\"Party\": 1, \"_id\": 0})"
  },
  {
    "db_id": "school_bus",
    "sql": "SELECT Party FROM driver WHERE Home_city = 'Hartford' AND Age > 40",
    "mongodb": "db.driver.find({\"Age\": {\"$gt\": 40}, \"Home_city\": \"Hartford\"}, {\"Party\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT DISTINCT Location FROM cinema;",
    "mongodb": "db.cinema.distinct(\"Location\", {})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT DISTINCT Location FROM cinema",
    "mongodb": "db.cinema.distinct(\"Location\", {})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT DISTINCT Location FROM cinema",
    "mongodb": "db.cinema.distinct(\"Location\", {})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT DISTINCT Location FROM cinema",
    "mongodb": "db.cinema.distinct(\"Location\", {})"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Location FROM cinema;",
    "mongodb": "db.cinema.find({}, {\"Location\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': \"SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))\", 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': \"SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))\", 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT e.name FROM employee e WHERE e.eid NOT IN ( SELECT c.eid FROM certificate c WHERE c.aid = ( SELECT a.aid FROM aircraft a WHERE a.name = 'Boeing 737-800' ) )",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': \"SELECT e.name FROM employee e WHERE e.eid NOT IN ( SELECT c.eid FROM certificate c WHERE c.aid = ( SELECT a.aid FROM aircraft a WHERE a.name = 'Boeing 737-800' ) )\", 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': \"SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))\", 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': \"SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))\", 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY COUNT(*) ASC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY COUNT(*) ASC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY COUNT(*) ASC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY COUNT(*) ASC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY count(*) ASC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY count(*) ASC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY count(*) ASC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY count(*) ASC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY COUNT(*) ASC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY COUNT(*) ASC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform, COUNT(*) AS Occurrences FROM device GROUP BY Software_Platform ORDER BY Occurrences DESC",
    "mongodb": "db.device.aggregate([{\"$group\": {\"_id\": {\"Software_Platform\": \"$Software_Platform\"}, \"Occurrences\": {\"$sum\": 1}}}, {\"$sort\": {\"Occurrences\": -1}}, {\"$project\": {\"Software_Platform\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform, COUNT(*) AS Frequency FROM device GROUP BY Software_Platform ORDER BY Frequency DESC",
    "mongodb": "db.device.aggregate([{\"$group\": {\"_id\": {\"Software_Platform\": \"$Software_Platform\"}, \"Frequency\": {\"$sum\": 1}}}, {\"$sort\": {\"Frequency\": -1}}, {\"$project\": {\"Software_Platform\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Software_Platform, COUNT(*) FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC",
    "mongodb": "db.device.aggregate([{\"$group\": {\"_id\": {\"Software_Platform\": \"$Software_Platform\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": -1}}, {\"$project\": {\"Software_Platform\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, Winery, Year FROM wine WHERE Price > 100 ORDER BY Year;",
    "mongodb": "db.wine.find({\"Price\": {\"$gt\": 100}}, {\"Grape\": 1, \"Winery\": 1, \"Year\": 1, \"_id\": 0}).sort( {\"Year\": 1} )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, Winery, Year FROM wine WHERE Price > 100 ORDER BY Year",
    "mongodb": "db.wine.find({\"Price\": {\"$gt\": 100}}, {\"Grape\": 1, \"Winery\": 1, \"Year\": 1, \"_id\": 0}).sort( {\"Year\": 1} )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, Winery, Year FROM wine WHERE Price > 100 ORDER BY Year",
    "mongodb": "db.wine.find({\"Price\": {\"$gt\": 100}}, {\"Grape\": 1, \"Winery\": 1, \"Year\": 1, \"_id\": 0}).sort( {\"Year\": 1} )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, Winery, Year FROM wine WHERE Price > 100 ORDER BY Year",
    "mongodb": "db.wine.find({\"Price\": {\"$gt\": 100}}, {\"Grape\": 1, \"Winery\": 1, \"Year\": 1, \"_id\": 0}).sort( {\"Year\": 1} )"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Grape, Winery, Year FROM wine WHERE Price > 100 ORDER BY Year ASC",
    "mongodb": "db.wine.find({\"Price\": {\"$gt\": 100}}, {\"Grape\": 1, \"Winery\": 1, \"Year\": 1, \"_id\": 0}).sort( {\"Year\": 1} )"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, salary FROM employee WHERE eid = 242518965;",
    "mongodb": "db.employee.find({\"eid\": 242518965}, {\"name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, salary FROM employee WHERE eid = 242518965;",
    "mongodb": "db.employee.find({\"eid\": 242518965}, {\"name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, salary FROM employee WHERE eid = 242518965;",
    "mongodb": "db.employee.find({\"eid\": 242518965}, {\"name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, salary FROM employee WHERE eid = 242518965;",
    "mongodb": "db.employee.find({\"eid\": 242518965}, {\"name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name, salary FROM employee WHERE eid = 242518965;",
    "mongodb": "db.employee.find({\"eid\": 242518965}, {\"name\": 1, \"salary\": 1, \"_id\": 0})"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT count(*), Rank FROM captain WHERE age < 50 GROUP BY Rank",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT count(*), Rank FROM captain WHERE age < 50 GROUP BY Rank', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT count(*), Rank FROM captain WHERE age < 50 GROUP BY Rank",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT count(*), Rank FROM captain WHERE age < 50 GROUP BY Rank', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Rank, COUNT(*) FROM captain WHERE age < 50 GROUP BY Rank",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT Rank, COUNT(*) FROM captain WHERE age < 50 GROUP BY Rank', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT count(*), Rank FROM captain WHERE age < 50 GROUP BY Rank",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT count(*), Rank FROM captain WHERE age < 50 GROUP BY Rank', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT count(*), Rank FROM captain WHERE age < 50 GROUP BY Rank",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: captain | body={'db': 'ship_1', 'sql': 'SELECT count(*), Rank FROM captain WHERE age < 50 GROUP BY Rank', 'error': 'java.sql.SQLException: Non-existing table referenced: captain'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE city = 'Goroka'",
    "mongodb": "db.airports.find({\"city\": \"Goroka\"}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE city = 'Goroka';",
    "mongodb": "db.airports.find({\"city\": \"Goroka\"}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE city = 'Goroka'",
    "mongodb": "db.airports.find({\"city\": \"Goroka\"}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE city = \"Goroka\"",
    "mongodb": "db.airports.find({\"$lookup\": {\"from\": \"\", \"localField\": \"city\", \"foreignField\": \"Goroka\"}}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airports WHERE city = \"Goroka\"",
    "mongodb": "db.airports.find({\"$lookup\": {\"from\": \"\", \"localField\": \"city\", \"foreignField\": \"Goroka\"}}, {\"name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT avg(Enrollment) FROM university WHERE Founded < 1850;",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Founded\": {\"$lt\": 1850}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT avg(Enrollment) FROM university WHERE Founded < 1850",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Founded\": {\"$lt\": 1850}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT avg(Enrollment) FROM university WHERE Founded < 1850",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Founded\": {\"$lt\": 1850}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT avg(Enrollment) FROM university WHERE Founded < 1850",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Founded\": {\"$lt\": 1850}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT avg(Enrollment) FROM university WHERE Founded < 1850;",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Founded\": {\"$lt\": 1850}}}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$Enrollment\"}}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name, Age FROM editor",
    "mongodb": "db.editor.find({}, {\"Name\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name, Age FROM editor",
    "mongodb": "db.editor.find({}, {\"Name\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name, Age FROM editor",
    "mongodb": "db.editor.find({}, {\"Name\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name, Age FROM editor",
    "mongodb": "db.editor.find({}, {\"Name\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name, Age FROM editor",
    "mongodb": "db.editor.find({}, {\"Name\": 1, \"Age\": 1, \"_id\": 0})"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {}).sort( {\"personal_name\": 1} )"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {}).sort( {\"personal_name\": 1} )"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {}).sort( {\"personal_name\": 1} )"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name ASC",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {}).sort( {\"personal_name\": 1} )"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
    "mongodb": "db.Course_Authors_and_Tutors.find({}, {}).sort( {\"personal_name\": 1} )"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT count(*) FROM climber",
    "mongodb": "db.climber.find({}, {}).count()"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT count(*) FROM climber",
    "mongodb": "db.climber.find({}, {}).count()"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT count(*) FROM climber",
    "mongodb": "db.climber.find({}, {}).count()"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT count(*) FROM climber",
    "mongodb": "db.climber.find({}, {}).count()"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT COUNT(DISTINCT Climber_ID) FROM climber",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT COUNT(DISTINCT Climber_ID) FROM climber', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Type FROM Ship WHERE Flag = 'Panama' INTERSECT SELECT Type FROM Ship WHERE Flag = 'Malta'",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Type FROM Ship WHERE Flag = 'Panama' INTERSECT SELECT Type FROM Ship WHERE Flag = 'Malta'",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Type FROM Ship WHERE Flag = 'Panama' INTERSECT SELECT Type FROM Ship WHERE Flag = 'Malta'",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Type FROM Ship WHERE Flag = 'Panama' INTERSECT SELECT Type FROM Ship WHERE Flag = 'Malta'",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Type FROM Ship WHERE Flag = 'Panama' INTERSECT SELECT Type FROM Ship WHERE Flag = 'Malta'",
    "mongodb": ""
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School FROM university WHERE Founded > 1850 OR Affiliation = 'Public'",
    "mongodb": "db.university.find({\"$or\": [{\"Founded\": {\"$gt\": 1850}}, {\"Affiliation\": \"Public\"}]}, {\"School\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School FROM university WHERE Founded < 1850 OR Affiliation = 'Public'",
    "mongodb": "db.university.find({\"$or\": [{\"Founded\": {\"$lt\": 1850}}, {\"Affiliation\": \"Public\"}]}, {\"School\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School FROM university WHERE Founded > 1850 OR Affiliation = 'Publicly funded'",
    "mongodb": "db.university.find({\"$or\": [{\"Founded\": {\"$gt\": 1850}}, {\"Affiliation\": \"Publicly funded\"}]}, {\"School\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School FROM university WHERE Founded > 1850 OR Affiliation = 'Public'",
    "mongodb": "db.university.find({\"$or\": [{\"Founded\": {\"$gt\": 1850}}, {\"Affiliation\": \"Public\"}]}, {\"School\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT School FROM university WHERE Founded > 1850 OR Affiliation = 'Public'",
    "mongodb": "db.university.find({\"$or\": [{\"Founded\": {\"$gt\": 1850}}, {\"Affiliation\": \"Public\"}]}, {\"School\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin FROM flight WHERE destination = 'Honolulu';",
    "mongodb": "db.flight.find({\"destination\": \"Honolulu\"}, {\"origin\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin FROM flight WHERE destination = 'Honolulu';",
    "mongodb": "db.flight.find({\"destination\": \"Honolulu\"}, {\"origin\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin FROM flight WHERE destination = \"Honolulu\"",
    "mongodb": "db.flight.find({\"$lookup\": {\"from\": \"\", \"localField\": \"destination\", \"foreignField\": \"Honolulu\"}}, {\"origin\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin FROM flight WHERE destination = 'Honolulu'",
    "mongodb": "db.flight.find({\"destination\": \"Honolulu\"}, {\"origin\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin FROM flight WHERE destination = 'Honolulu'",
    "mongodb": "db.flight.find({\"destination\": \"Honolulu\"}, {\"origin\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT DISTINCT LName FROM Student WHERE StuID IN (SELECT President_Vote FROM Voting_record) AND Advisor = 8741;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Voting_record | body={'db': 'voter_2', 'sql': 'SELECT DISTINCT LName FROM Student WHERE StuID IN (SELECT President_Vote FROM Voting_record) AND Advisor = 8741;', 'error': 'java.sql.SQLException: Non-existing table referenced: Voting_record'}"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT DISTINCT LName FROM Student WHERE StuID IN (SELECT StuID FROM Voting_record WHERE President_Vote = 8741) AND Advisor = 8741;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Voting_record | body={'db': 'voter_2', 'sql': 'SELECT DISTINCT LName FROM Student WHERE StuID IN (SELECT StuID FROM Voting_record WHERE President_Vote = 8741) AND Advisor = 8741;', 'error': 'java.sql.SQLException: Non-existing table referenced: Voting_record'}"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT DISTINCT S.LName FROM Student S JOIN Voting_record V ON S.StuID = V.StuID WHERE V.President_Vote = 8741",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"President_Vote\": 8741}}, {\"$lookup\": {\"from\": \"Voting_record\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Voting_record\"}}, {\"$unwind\": \"$Voting_record\"}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT DISTINCT LName FROM Student AS S JOIN Voting_record AS V ON S.StuID = V.StuID WHERE V.President_Vote = 8741 AND S.Advisor = 8741;",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"Advisor\": 8741, \"President_Vote\": 8741}}, {\"$lookup\": {\"from\": \"Voting_record\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Voting_record\"}}, {\"$unwind\": \"$Voting_record\"}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT DISTINCT LName FROM Student WHERE StuID IN (SELECT StuID FROM Voting_record WHERE President_Vote = 8741)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Voting_record | body={'db': 'voter_2', 'sql': 'SELECT DISTINCT LName FROM Student WHERE StuID IN (SELECT StuID FROM Voting_record WHERE President_Vote = 8741)', 'error': 'java.sql.SQLException: Non-existing table referenced: Voting_record'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID WHERE T3.Age < 34",
    "mongodb": "db.pilot_record.aggregate([{\"$match\": {\"Age\": {\"$lt\": 34}}}, {\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"Aircraft_ID\", \"foreignField\": \"Aircraft_ID\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$lookup\": {\"from\": \"pilot\", \"localField\": \"Pilot_ID\", \"foreignField\": \"Pilot_ID\", \"as\": \"pilot\"}}, {\"$unwind\": \"$pilot\"}, {\"$project\": {\"Fleet_Series\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Fleet_Series FROM aircraft WHERE Aircraft_ID IN (SELECT Aircraft_ID FROM pilot_record WHERE Pilot_ID IN (SELECT Pilot_ID FROM pilot WHERE Age < 34))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: pilot_record | body={'db': 'pilot_record', 'sql': 'SELECT Fleet_Series FROM aircraft WHERE Aircraft_ID IN (SELECT Aircraft_ID FROM pilot_record WHERE Pilot_ID IN (SELECT Pilot_ID FROM pilot WHERE Age < 34))', 'error': 'java.sql.SQLException: Non-existing table referenced: pilot_record'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Fleet_Series FROM aircraft AS T1 JOIN pilot_record AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T2.Pilot_ID = T3.Pilot_ID WHERE T3.Age < 34",
    "mongodb": "db.aircraft.aggregate([{\"$match\": {\"Age\": {\"$lt\": 34}}}, {\"$lookup\": {\"from\": \"pilot_record\", \"localField\": \"Aircraft_ID\", \"foreignField\": \"Aircraft_ID\", \"as\": \"pilot_record\"}}, {\"$unwind\": \"$pilot_record\"}, {\"$lookup\": {\"from\": \"pilot\", \"localField\": \"Pilot_ID\", \"foreignField\": \"Pilot_ID\", \"as\": \"pilot\"}}, {\"$unwind\": \"$pilot\"}, {\"$project\": {\"Fleet_Series\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT Fleet_Series FROM aircraft WHERE Aircraft_ID IN (SELECT Aircraft_ID FROM pilot_record WHERE Pilot_ID IN (SELECT Pilot_ID FROM pilot WHERE Age < 34))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: pilot_record | body={'db': 'pilot_record', 'sql': 'SELECT Fleet_Series FROM aircraft WHERE Aircraft_ID IN (SELECT Aircraft_ID FROM pilot_record WHERE Pilot_ID IN (SELECT Pilot_ID FROM pilot WHERE Age < 34))', 'error': 'java.sql.SQLException: Non-existing table referenced: pilot_record'}"
  },
  {
    "db_id": "pilot_record",
    "sql": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID WHERE T3.Age < 34",
    "mongodb": "db.pilot_record.aggregate([{\"$match\": {\"Age\": {\"$lt\": 34}}}, {\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"Aircraft_ID\", \"foreignField\": \"Aircraft_ID\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$lookup\": {\"from\": \"pilot\", \"localField\": \"Pilot_ID\", \"foreignField\": \"Pilot_ID\", \"as\": \"pilot\"}}, {\"$unwind\": \"$pilot\"}, {\"$project\": {\"Fleet_Series\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t2.All_Games, t1.Location FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t2.Team_Name = 'Clemson'",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Team_Name\": \"Clemson\"}}, {\"$lookup\": {\"from\": \"basketball_match\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"basketball_match\"}}, {\"$unwind\": \"$basketball_match\"}, {\"$project\": {\"All_Games\": 1, \"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t2.All_Games, t1.Location FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t2.Team_Name = 'Clemson'",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Team_Name\": \"Clemson\"}}, {\"$lookup\": {\"from\": \"basketball_match\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"basketball_match\"}}, {\"$unwind\": \"$basketball_match\"}, {\"$project\": {\"All_Games\": 1, \"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Location, All_Games FROM university JOIN basketball_match ON university.School_ID = basketball_match.School_ID WHERE Team_Name = 'Clemson'",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Team_Name\": \"Clemson\"}}, {\"$lookup\": {\"from\": \"basketball_match\", \"localField\": \"School_ID\", \"foreignField\": \"basketball_match.School_ID\", \"as\": \"basketball_match\"}}, {\"$unwind\": \"$basketball_match\"}, {\"$project\": {\"Location\": 1, \"All_Games\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t2.All_Games, t1.Location FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t2.Team_Name = 'Clemson'",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Team_Name\": \"Clemson\"}}, {\"$lookup\": {\"from\": \"basketball_match\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"basketball_match\"}}, {\"$unwind\": \"$basketball_match\"}, {\"$project\": {\"All_Games\": 1, \"Location\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t1.Location, t2.All_Games FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t2.Team_Name = 'Clemson'",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Team_Name\": \"Clemson\"}}, {\"$lookup\": {\"from\": \"basketball_match\", \"localField\": \"School_ID\", \"foreignField\": \"School_ID\", \"as\": \"basketball_match\"}}, {\"$unwind\": \"$basketball_match\"}, {\"$project\": {\"Location\": 1, \"All_Games\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population > 20000)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population > 20000)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population > 20000)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population > 20000)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT count(*) FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Population > 20000)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT count(*) FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Population > 20000)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT count(*) FROM city AS c JOIN county_public_safety AS cps ON c.County_ID = cps.County_ID WHERE cps.Population > 20000",
    "mongodb": "db.city.aggregate([{\"$match\": {\"Population\": {\"$gt\": 20000}}}, {\"$lookup\": {\"from\": \"county_public_safety\", \"localField\": \"County_ID\", \"foreignField\": \"County_ID\", \"as\": \"county_public_safety\"}}, {\"$unwind\": \"$county_public_safety\"}])"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT count(*) FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Population > 20000)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT count(*) FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Population > 20000)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin, count(*) FROM flight GROUP BY origin",
    "mongodb": "db.flight.aggregate([{\"$group\": {\"_id\": {\"origin\": \"$origin\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"origin\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin, COUNT(*) FROM flight GROUP BY origin",
    "mongodb": "db.flight.aggregate([{\"$group\": {\"_id\": {\"origin\": \"$origin\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"origin\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin, COUNT(*) FROM flight GROUP BY origin",
    "mongodb": "db.flight.aggregate([{\"$group\": {\"_id\": {\"origin\": \"$origin\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"origin\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin, count(*) FROM flight GROUP BY origin",
    "mongodb": "db.flight.aggregate([{\"$group\": {\"_id\": {\"origin\": \"$origin\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"origin\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin, count(*) FROM flight GROUP BY origin",
    "mongodb": "db.flight.aggregate([{\"$group\": {\"_id\": {\"origin\": \"$origin\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"origin\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Team_Name FROM basketball_match ORDER BY All_Home DESC",
    "mongodb": "db.basketball_match.find({}, {\"Team_Name\": 1, \"_id\": 0}).sort( {\"All_Home\": -1} )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Team_Name FROM basketball_match ORDER BY All_Home DESC;",
    "mongodb": "db.basketball_match.find({}, {\"Team_Name\": 1, \"_id\": 0}).sort( {\"All_Home\": -1} )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Team_Name, ACC_Home FROM basketball_match ORDER BY ACC_Home DESC",
    "mongodb": "db.basketball_match.find({}, {\"Team_Name\": 1, \"ACC_Home\": 1, \"_id\": 0}).sort( {\"ACC_Home\": -1} )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Team_Name FROM basketball_match ORDER BY ACC_Home DESC",
    "mongodb": "db.basketball_match.find({}, {\"Team_Name\": 1, \"_id\": 0}).sort( {\"ACC_Home\": -1} )"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Team_Name FROM basketball_match ORDER BY All_Home DESC",
    "mongodb": "db.basketball_match.find({}, {\"Team_Name\": 1, \"_id\": 0}).sort( {\"All_Home\": -1} )"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT T1.name, COUNT(T2.rid) AS route_count FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY route_count DESC LIMIT 10;",
    "mongodb": "db.airlines.aggregate([{\"$lookup\": {\"from\": \"routes\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"routes\"}}, {\"$unwind\": \"$routes\"}, {\"$group\": {\"_id\": {\"name\": \"$name\"}, \"route_count\": {\"$sum\": {\"$cond\": [{\"$gt\": [\"$rid\", null]}, 1, 0]}}}}, {\"$sort\": {\"route_count\": -1}}, {\"$limit\": 10}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT T1.name, T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY COUNT(*) DESC LIMIT 10;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': 'SELECT T1.name, T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY COUNT(*) DESC LIMIT 10;', 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT T2.name FROM airlines AS T2 JOIN routes AS T1 ON T2.alid = T1.alid GROUP BY T1.alid ORDER BY COUNT(*) DESC LIMIT 10;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': 'SELECT T2.name FROM airlines AS T2 JOIN routes AS T1 ON T2.alid = T1.alid GROUP BY T1.alid ORDER BY COUNT(*) DESC LIMIT 10;', 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name, COUNT(*) AS num_routes FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY name ORDER BY num_routes DESC LIMIT 10;",
    "mongodb": "db.airlines.aggregate([{\"$lookup\": {\"from\": \"routes\", \"localField\": \"alid\", \"foreignField\": \"alid\", \"as\": \"routes\"}}, {\"$unwind\": \"$routes\"}, {\"$group\": {\"_id\": {\"name\": \"$name\"}, \"num_routes\": {\"$sum\": 1}}}, {\"$sort\": {\"num_routes\": -1}}, {\"$limit\": 10}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT alid, name FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY airlines.alid ORDER BY count(*) DESC LIMIT 10",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': 'SELECT alid, name FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY airlines.alid ORDER BY count(*) DESC LIMIT 10', 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Statement_ID, COUNT(*) FROM Accounts GROUP BY Statement_ID",
    "mongodb": "db.Accounts.aggregate([{\"$group\": {\"_id\": {\"Statement_ID\": \"$Statement_ID\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Statement_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT STATEMENT_ID , count(*) FROM Accounts GROUP BY STATEMENT_ID",
    "mongodb": "db.Accounts.aggregate([{\"$group\": {\"_id\": {\"STATEMENT_ID\": \"$STATEMENT_ID\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"STATEMENT_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Statement_ID, COUNT(*) FROM Accounts GROUP BY Statement_ID",
    "mongodb": "db.Accounts.aggregate([{\"$group\": {\"_id\": {\"Statement_ID\": \"$Statement_ID\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Statement_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Statement_ID, COUNT(*) FROM Statements AS T1 JOIN Accounts AS T2 ON T1.Statement_ID = T2.Statement_ID GROUP BY T1.Statement_ID",
    "mongodb": "db.Statements.aggregate([{\"$lookup\": {\"from\": \"Accounts\", \"localField\": \"Statement_ID\", \"foreignField\": \"Statement_ID\", \"as\": \"Accounts\"}}, {\"$unwind\": \"$Accounts\"}, {\"$group\": {\"_id\": {\"Statement_ID\": \"$Statement_ID\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Statement_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Statement_ID, COUNT(*) FROM Accounts GROUP BY Statement_ID",
    "mongodb": "db.Accounts.aggregate([{\"$group\": {\"_id\": {\"Statement_ID\": \"$Statement_ID\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Statement_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT title, directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT title, directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Title, Directed_by FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM schedule)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT Title, Directed_by FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM schedule)', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Title, Directed_by FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM schedule)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT Title, Directed_by FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM schedule)', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT directed_by, title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM schedule)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT directed_by, title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM schedule)', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Title, Directed_by FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM schedule)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT Title, Directed_by FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM schedule)', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Score > 90;",
    "mongodb": "db.wine.find({\"Score\": {\"$gt\": 90}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Score > 90",
    "mongodb": "db.wine.find({\"Score\": {\"$gt\": 90}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine WHERE Score > 90",
    "mongodb": "db.wine.distinct(\"Name\", {\"Score\": {\"$gt\": 90}})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT Name FROM wine WHERE Score > 90",
    "mongodb": "db.wine.find({\"Score\": {\"$gt\": 90}}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "wine_1",
    "sql": "SELECT DISTINCT Name FROM wine WHERE Score > 90",
    "mongodb": "db.wine.distinct(\"Name\", {\"Score\": {\"$gt\": 90}})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name FROM employees WHERE department_id = 70 OR department_id = 90;",
    "mongodb": "db.employees.find({\"$or\": [{\"department_id\": 70}, {\"department_id\": 90}]}, {\"first_name\": 1, \"last_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name FROM employees WHERE department_id = 70 OR department_id = 90;",
    "mongodb": "db.employees.find({\"$or\": [{\"department_id\": 70}, {\"department_id\": 90}]}, {\"first_name\": 1, \"last_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name FROM employees WHERE department_id IN (70, 90)",
    "mongodb": "db.employees.find({\"department_id\": {\"$in\": [70, 90]}}, {\"first_name\": 1, \"last_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT first_name, last_name FROM employees WHERE department_id = 70 OR department_id = 90;",
    "mongodb": "db.employees.find({\"$or\": [{\"department_id\": 70}, {\"department_id\": 90}]}, {\"first_name\": 1, \"last_name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM employees WHERE department_id = 70 OR department_id = 90",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': \"SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM employees WHERE department_id = 70 OR department_id = 90\", 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT email FROM employees WHERE commission_pct IS NULL AND salary BETWEEN 7000 AND 12000 AND department_id = 50;",
    "mongodb": "db.employees.find({\"department_id\": 50, \"$and\": [{\"salary\": {\"$gte\": 7000}}, {\"salary\": {\"$lte\": 12000}}], \"commission_pct\": null}, {\"email\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT email FROM employees WHERE commission_pct IS NULL AND salary BETWEEN 7000 AND 12000 AND department_id = 50",
    "mongodb": "db.employees.find({\"department_id\": 50, \"$and\": [{\"salary\": {\"$gte\": 7000}}, {\"salary\": {\"$lte\": 12000}}], \"commission_pct\": null}, {\"email\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT EMAIL FROM employees WHERE DEPARTMENT_ID = 50 AND COMMISSION_PCT IS NULL AND SALARY BETWEEN 7000 AND 12000",
    "mongodb": "db.employees.find({\"$and\": [{\"SALARY\": {\"$gte\": 7000}}, {\"SALARY\": {\"$lte\": 12000}}], \"COMMISSION_PCT\": null, \"DEPARTMENT_ID\": 50}, {\"EMAIL\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT EMAIL FROM employees WHERE DEPARTMENT_ID = 50 AND COMMISSION_PCT IS NULL AND SALARY BETWEEN 7000 AND 12000",
    "mongodb": "db.employees.find({\"$and\": [{\"SALARY\": {\"$gte\": 7000}}, {\"SALARY\": {\"$lte\": 12000}}], \"COMMISSION_PCT\": null, \"DEPARTMENT_ID\": 50}, {\"EMAIL\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT email FROM employees WHERE department_id = 50 AND salary BETWEEN 7000 AND 12000 AND commission_pct IS NULL",
    "mongodb": "db.employees.find({\"commission_pct\": null, \"$and\": [{\"salary\": {\"$gte\": 7000}}, {\"salary\": {\"$lte\": 12000}}], \"department_id\": 50}, {\"email\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT aid FROM aircraft WHERE distance > 1000;",
    "mongodb": "db.aircraft.find({\"distance\": {\"$gt\": 1000}}, {\"aid\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT aid FROM aircraft WHERE distance > 1000;",
    "mongodb": "db.aircraft.find({\"distance\": {\"$gt\": 1000}}, {\"aid\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT aid FROM aircraft WHERE distance > 1000",
    "mongodb": "db.aircraft.find({\"distance\": {\"$gt\": 1000}}, {\"aid\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT aid FROM aircraft WHERE distance > 1000",
    "mongodb": "db.aircraft.find({\"distance\": {\"$gt\": 1000}}, {\"aid\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT aid FROM aircraft WHERE distance > 1000",
    "mongodb": "db.aircraft.find({\"distance\": {\"$gt\": 1000}}, {\"aid\": 1, \"_id\": 0})"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t2.Team_Name, t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t1.Founded DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT t2.Team_Name, t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t1.Founded DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t2.Team_Name, t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t1.Founded LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT t2.Team_Name, t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t1.Founded LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Team_Name, ACC_Regular_Season FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID WHERE Founded = (SELECT MAX(Founded) FROM university)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT Team_Name, ACC_Regular_Season FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID WHERE Founded = (SELECT MAX(Founded) FROM university)', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Team_Name, ACC_Regular_Season FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID ORDER BY university.Founded ASC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT Team_Name, ACC_Regular_Season FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID ORDER BY university.Founded ASC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT t2.Team_Name, t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t1.Founded LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: basketball_match | body={'db': 'university_basketball', 'sql': 'SELECT t2.Team_Name, t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t1.Founded LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: basketball_match'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.LName = \"Smith\"",
    "mongodb": "ERROR: HTTP 500 | body={'mongo': \"ERROR: Invalid control character '\\\\n' at: line 1 column 340 (char 339)\"}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT avg(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.LName = \"Smith\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT avg(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.LName = \"Smith\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT AVG(GC.gradepoint) AS mean_grade_point FROM Student AS S JOIN Enrolled_in AS EI ON S.StuID = EI.StuID JOIN Gradeconversion AS GC ON EI.Grade = GC.lettergrade WHERE S.LName = 'Smith'",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"LName\": \"Smith\"}}, {\"$lookup\": {\"from\": \"Enrolled_in\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Enrolled_in\"}}, {\"$unwind\": \"$Enrolled_in\"}, {\"$lookup\": {\"from\": \"Gradeconversion\", \"localField\": \"Grade\", \"foreignField\": \"lettergrade\", \"as\": \"Gradeconversion\"}}, {\"$unwind\": \"$Gradeconversion\"}, {\"$group\": {\"_id\": null, \"mean_grade_point\": {\"$avg\": \"$gradepoint\"}}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT avg(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.LName = \"Smith\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Enrolled_in | body={'db': 'college_3', 'sql': 'SELECT avg(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.LName = \"Smith\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Enrolled_in'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT avg(T4.gradepoint) FROM Student AS T1 JOIN Minor_in AS T2 ON T1.StuID = T2.StuID JOIN Department AS T3 ON T2.DNO = T3.DNO JOIN Enrolled_in AS T4 ON T1.StuID = T4.StuID JOIN Gradeconversion AS T5 ON T4.Grade = T5.lettergrade WHERE T1.LName = 'Smith'",
    "mongodb": "db.Student.aggregate([{\"$match\": {\"LName\": \"Smith\"}}, {\"$lookup\": {\"from\": \"Minor_in\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Minor_in\"}}, {\"$unwind\": \"$Minor_in\"}, {\"$lookup\": {\"from\": \"Department\", \"localField\": \"DNO\", \"foreignField\": \"DNO\", \"as\": \"Department\"}}, {\"$unwind\": \"$Department\"}, {\"$lookup\": {\"from\": \"Enrolled_in\", \"localField\": \"StuID\", \"foreignField\": \"StuID\", \"as\": \"Enrolled_in\"}}, {\"$unwind\": \"$Enrolled_in\"}, {\"$lookup\": {\"from\": \"Gradeconversion\", \"localField\": \"Grade\", \"foreignField\": \"lettergrade\", \"as\": \"Gradeconversion\"}}, {\"$unwind\": \"$Gradeconversion\"}, {\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$gradepoint\"}}}])"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*) > 1",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*) > 1",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*) > 1",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*) >= 2",
    "mongodb": ""
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*) > 1",
    "mongodb": ""
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents",
    "mongodb": "db.Documents.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents",
    "mongodb": "db.Documents.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents",
    "mongodb": "db.Documents.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents",
    "mongodb": "db.Documents.find({}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT count(*) FROM Documents",
    "mongodb": "db.Documents.find({}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Age = (SELECT MAX(Age) FROM Student)",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Age = (SELECT MAX(Age) FROM Student)",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Age = (SELECT MAX(Age) FROM Student)",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Age = (SELECT MAX(Age) FROM Student)",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT StuID FROM Student WHERE Age = (SELECT MAX(Age) FROM Student)",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Boeing 737-800\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Boeing 737-800\"', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Boeing 737-800\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Boeing 737-800\"', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM employee WHERE eid IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': \"SELECT name FROM employee WHERE eid IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))\", 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Boeing 737-800\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: certificate | body={'db': 'flight_1', 'sql': 'SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Boeing 737-800\"', 'error': 'java.sql.SQLException: Non-existing table referenced: certificate'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T2.aid = T3.aid WHERE T3.name = 'Boeing 737-800'",
    "mongodb": "db.employee.aggregate([{\"$match\": {\"name\": \"Boeing 737-800\"}}, {\"$lookup\": {\"from\": \"certificate\", \"localField\": \"eid\", \"foreignField\": \"eid\", \"as\": \"certificate\"}}, {\"$unwind\": \"$certificate\"}, {\"$lookup\": {\"from\": \"aircraft\", \"localField\": \"aid\", \"foreignField\": \"aid\", \"as\": \"aircraft\"}}, {\"$unwind\": \"$aircraft\"}, {\"$project\": {\"name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = \"Computer Science\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = \"Computer Science\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name , T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = \"Computer Science\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name , T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = \"Computer Science\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT t1.course_name, t1.course_description FROM Courses AS t1 JOIN Subjects AS t2 ON t1.subject_id = t2.subject_id WHERE t2.subject_name = \"Computer Science\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT t1.course_name, t1.course_description FROM Courses AS t1 JOIN Subjects AS t2 ON t1.subject_id = t2.subject_id WHERE t2.subject_name = \"Computer Science\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = \"Computer Science\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Courses | body={'db': 'e_learning', 'sql': 'SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = \"Computer Science\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Courses'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = 'Computer Science'",
    "mongodb": "db.Courses.aggregate([{\"$match\": {\"subject_name\": \"Computer Science\"}}, {\"$lookup\": {\"from\": \"Subjects\", \"localField\": \"subject_id\", \"foreignField\": \"subject_id\", \"as\": \"Subjects\"}}, {\"$unwind\": \"$Subjects\"}, {\"$project\": {\"course_name\": 1, \"course_description\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': 'SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY airlines.name ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': 'SELECT name FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY airlines.name ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airlines WHERE alid IN (SELECT alid FROM routes GROUP BY alid ORDER BY count(*) DESC LIMIT 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': 'SELECT name FROM airlines WHERE alid IN (SELECT alid FROM routes GROUP BY alid ORDER BY count(*) DESC LIMIT 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT name FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY name ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': 'SELECT name FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY name ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT T2.name FROM routes AS T1 JOIN airlines AS T2 ON T1.alid = T2.alid GROUP BY T1.alid ORDER BY COUNT(*) DESC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: routes | body={'db': 'flight_4', 'sql': 'SELECT T2.name FROM routes AS T1 JOIN airlines AS T2 ON T1.alid = T2.alid GROUP BY T1.alid ORDER BY COUNT(*) DESC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: routes'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, Project_Details FROM Projects;",
    "mongodb": "db.Projects.find({}, {\"Project_ID\": 1, \"Project_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, Project_Details FROM Projects",
    "mongodb": "db.Projects.find({}, {\"Project_ID\": 1, \"Project_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, Project_Details FROM Projects",
    "mongodb": "db.Projects.find({}, {\"Project_ID\": 1, \"Project_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, Project_Details FROM Projects",
    "mongodb": "db.Projects.find({}, {\"Project_ID\": 1, \"Project_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Project_ID, Project_Details FROM Projects",
    "mongodb": "db.Projects.find({}, {\"Project_ID\": 1, \"Project_Details\": 1, \"_id\": 0})"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints)', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints)', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints)', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': 'SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints)', 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "customer_complaints",
    "sql": "SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints WHERE complaint_outcome_code = 'Clean')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Complaints | body={'db': 'customer_complaints', 'sql': \"SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints WHERE complaint_outcome_code = 'Clean')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Complaints'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"",
    "mongodb": "db.Courses.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"Spanish\"}}}, {\"$lookup\": {\"from\": \"Student_Course_Enrolment\", \"localField\": \"course_id\", \"foreignField\": \"course_id\", \"as\": \"Student_Course_Enrolment\"}}, {\"$unwind\": \"$Student_Course_Enrolment\"}, {\"$project\": {\"date_of_enrolment\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"",
    "mongodb": "db.Courses.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"Spanish\"}}}, {\"$lookup\": {\"from\": \"Student_Course_Enrolment\", \"localField\": \"course_id\", \"foreignField\": \"course_id\", \"as\": \"Student_Course_Enrolment\"}}, {\"$unwind\": \"$Student_Course_Enrolment\"}, {\"$project\": {\"date_of_enrolment\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id JOIN Subjects AS T3 ON T2.subject_id = T3.subject_id WHERE T3.subject_name = 'Spanish'",
    "mongodb": "db.Student_Course_Enrolment.aggregate([{\"$match\": {\"subject_name\": \"Spanish\"}}, {\"$lookup\": {\"from\": \"Courses\", \"localField\": \"course_id\", \"foreignField\": \"course_id\", \"as\": \"Courses\"}}, {\"$unwind\": \"$Courses\"}, {\"$lookup\": {\"from\": \"Subjects\", \"localField\": \"subject_id\", \"foreignField\": \"subject_id\", \"as\": \"Subjects\"}}, {\"$unwind\": \"$Subjects\"}, {\"$project\": {\"date_of_enrolment\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"",
    "mongodb": "db.Courses.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"Spanish\"}}}, {\"$lookup\": {\"from\": \"Student_Course_Enrolment\", \"localField\": \"course_id\", \"foreignField\": \"course_id\", \"as\": \"Student_Course_Enrolment\"}}, {\"$unwind\": \"$Student_Course_Enrolment\"}, {\"$project\": {\"date_of_enrolment\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"",
    "mongodb": "db.Courses.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"course_name\", \"foreignField\": \"Spanish\"}}}, {\"$lookup\": {\"from\": \"Student_Course_Enrolment\", \"localField\": \"course_id\", \"foreignField\": \"course_id\", \"as\": \"Student_Course_Enrolment\"}}, {\"$unwind\": \"$Student_Course_Enrolment\"}, {\"$project\": {\"date_of_enrolment\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT T2.Directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T2.Directed_by ORDER BY SUM(T1.Show_times_per_day) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT T2.Directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T2.Directed_by ORDER BY SUM(T1.Show_times_per_day) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY SUM(T1.show_times_per_day) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY SUM(T1.show_times_per_day) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY SUM(T1.show_times_per_day) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY SUM(T1.show_times_per_day) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT T2.Directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T2.Directed_by ORDER BY SUM(T1.Show_times_per_day) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT T2.Directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T2.Directed_by ORDER BY SUM(T1.Show_times_per_day) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY SUM(T1.show_times_per_day) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: schedule | body={'db': 'cinema', 'sql': 'SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY SUM(T1.show_times_per_day) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: schedule'}"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM actor ORDER BY Name ASC",
    "mongodb": "db.actor.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM actor ORDER BY Name ASC",
    "mongodb": "db.actor.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM actor ORDER BY Name ASC",
    "mongodb": "db.actor.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM actor ORDER BY Name ASC",
    "mongodb": "db.actor.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Name FROM actor ORDER BY Name ASC",
    "mongodb": "db.actor.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Name\": 1} )"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy FROM Allergy_Type WHERE AllergyType = 'food';",
    "mongodb": "db.Allergy_Type.find({\"AllergyType\": \"food\"}, {\"Allergy\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT DISTINCT Allergy FROM Allergy_Type WHERE AllergyType = \"food\"",
    "mongodb": "db.Allergy_Type.distinct(\"Allergy\", {\"$lookup\": {\"from\": \"\", \"localField\": \"AllergyType\", \"foreignField\": \"food\"}})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type WHERE AllergyType = 'food'",
    "mongodb": "db.Allergy_Type.find({\"AllergyType\": \"food\"}, {\"AllergyType\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy FROM Allergy_Type WHERE AllergyType = \"food\"",
    "mongodb": "db.Allergy_Type.find({\"$lookup\": {\"from\": \"\", \"localField\": \"AllergyType\", \"foreignField\": \"food\"}}, {\"Allergy\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT Allergy FROM Allergy_Type WHERE AllergyType = \"food\";",
    "mongodb": "db.Allergy_Type.find({\"$lookup\": {\"from\": \"\", \"localField\": \"AllergyType\", \"foreignField\": \"food\"}}, {\"Allergy\": 1, \"_id\": 0})"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Kelly Clauss'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': \"SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Kelly Clauss'\", 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT area_code FROM VOTES AS V1 JOIN CONTESTANTS AS C1 JOIN VOTES AS V2 JOIN CONTESTANTS AS C2 ON V1.contestant_number = C1.contestant_number AND V2.contestant_number = C2.contestant_number WHERE C1.contestant_name = 'Tabatha Gehling' AND C2.contestant_name = 'Kelly Clauss'",
    "mongodb": "ERROR: HTTP 500 | body={'mongo': \"ERROR: Invalid control character '\\\\n' at: line 1 column 440 (char 439)\"}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT area_code FROM VOTES AS V JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling' INTERSECT SELECT area_code FROM VOTES AS V JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Kelly Clauss'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': \"SELECT area_code FROM VOTES AS V JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling' INTERSECT SELECT area_code FROM VOTES AS V JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Kelly Clauss'\", 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT area_code FROM VOTES AS V1 JOIN CONTESTANTS AS C1 ON V1.contestant_number = C1.contestant_number JOIN VOTES AS V2 ON V1.phone_number = V2.phone_number JOIN CONTESTANTS AS C2 ON V2.contestant_number = C2.contestant_number WHERE C1.contestant_name = 'Tabatha Gehling' AND C2.contestant_name = 'Kelly Clauss'",
    "mongodb": "ERROR: cannot access local variable 'r' where it is not associated with a value"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Kelly Clauss'",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': \"SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Kelly Clauss'\", 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000",
    "mongodb": "db.mountain.find({\"$or\": [{\"Height\": {\"$gt\": 5000}}, {\"Prominence\": {\"$gt\": 1000}}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000",
    "mongodb": "db.mountain.find({\"$or\": [{\"Height\": {\"$gt\": 5000}}, {\"Prominence\": {\"$gt\": 1000}}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000",
    "mongodb": "db.mountain.find({\"$or\": [{\"Height\": {\"$gt\": 5000}}, {\"Prominence\": {\"$gt\": 1000}}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000",
    "mongodb": "db.mountain.find({\"$or\": [{\"Height\": {\"$gt\": 5000}}, {\"Prominence\": {\"$gt\": 1000}}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000",
    "mongodb": "db.mountain.find({\"$or\": [{\"Height\": {\"$gt\": 5000}}, {\"Prominence\": {\"$gt\": 1000}}]}, {\"Name\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM Aircraft WHERE distance > (SELECT avg(distance) FROM Aircraft)",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)",
    "mongodb": ""
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT count(DISTINCT Software_Platform) FROM device",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT count(DISTINCT Software_Platform) FROM device",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT count(DISTINCT Software_Platform) FROM device",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT count(DISTINCT Software_Platform) FROM device",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT count(DISTINCT Software_Platform) FROM device",
    "mongodb": ""
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT name FROM city WHERE county_ID = (SELECT County_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT name FROM city WHERE county_ID = (SELECT County_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT name FROM city WHERE county_ID = (SELECT County_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT name FROM city WHERE county_ID = (SELECT County_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT t2.Name FROM county_public_safety AS t1 JOIN city AS t2 ON t1.County_ID = t2.County_ID WHERE t1.Police_officers = (SELECT MAX(Police_officers) FROM county_public_safety)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT t2.Name FROM county_public_safety AS t1 JOIN city AS t2 ON t1.County_ID = t2.County_ID WHERE t1.Police_officers = (SELECT MAX(Police_officers) FROM county_public_safety)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city WHERE County_ID = (SELECT County_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT Name FROM city WHERE County_ID = (SELECT County_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "county_public_safety",
    "sql": "SELECT Name FROM city WHERE County_ID = (SELECT County_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: city | body={'db': 'county_public_safety', 'sql': 'SELECT Name FROM city WHERE County_ID = (SELECT County_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)', 'error': 'java.sql.SQLException: Non-existing table referenced: city'}"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(salary) , max(salary) FROM employee",
    "mongodb": "db.employee.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$salary\"}, \"Expr1\": {\"$max\": \"$salary\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(salary) , max(salary) FROM employee",
    "mongodb": "db.employee.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$salary\"}, \"Expr1\": {\"$max\": \"$salary\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(salary) , max(salary) FROM employee",
    "mongodb": "db.employee.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$salary\"}, \"Expr1\": {\"$max\": \"$salary\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(salary), max(salary) FROM employee;",
    "mongodb": "db.employee.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$salary\"}, \"Expr1\": {\"$max\": \"$salary\"}}}])"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT avg(salary), max(salary) FROM employee",
    "mongodb": "db.employee.aggregate([{\"$group\": {\"_id\": null, \"Expr0\": {\"$avg\": \"$salary\"}, \"Expr1\": {\"$max\": \"$salary\"}}}])"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Fname , T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY COUNT(*) DESC LIMIT 3;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': 'SELECT T2.Fname , T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY COUNT(*) DESC LIMIT 3;', 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Fname , T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': 'SELECT T2.Fname , T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3', 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Fname, T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY COUNT(*) DESC LIMIT 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': 'SELECT T2.Fname, T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY COUNT(*) DESC LIMIT 3', 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT Fname, Lname FROM Faculty JOIN Course ON Faculty.FacID = Course.Instructor GROUP BY Faculty.FacID ORDER BY COUNT(Course.CID) DESC LIMIT 3;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': 'SELECT Fname, Lname FROM Faculty JOIN Course ON Faculty.FacID = Course.Instructor GROUP BY Faculty.FacID ORDER BY COUNT(Course.CID) DESC LIMIT 3;', 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "college_3",
    "sql": "SELECT T2.Fname, T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY COUNT(*) DESC LIMIT 3",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Course | body={'db': 'college_3', 'sql': 'SELECT T2.Fname, T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY COUNT(*) DESC LIMIT 3', 'error': 'java.sql.SQLException: Non-existing table referenced: Course'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student WHERE city_code = \"HKG\" OR city_code = \"CHI\"",
    "mongodb": "db.Student.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"HKG\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"CHI\"}}]}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student WHERE city_code = \"HKG\" OR city_code = \"CHI\"",
    "mongodb": "db.Student.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"HKG\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"CHI\"}}]}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT COUNT(*) FROM Student WHERE city_code = \"HKG\" OR city_code = \"CHI\";",
    "mongodb": "db.Student.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"HKG\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"CHI\"}}]}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT COUNT(*) FROM Student WHERE city_code IN ('HKG', 'CHI')",
    "mongodb": "db.Student.find({\"city_code\": {\"$in\": [\"HKG\", \"CHI\"]}}, {}).count()"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT count(*) FROM Student WHERE city_code = \"HKG\" OR city_code = \"CHI\"",
    "mongodb": "db.Student.find({\"$or\": [{\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"HKG\"}}, {\"$lookup\": {\"from\": \"\", \"localField\": \"city_code\", \"foreignField\": \"CHI\"}}]}, {}).count()"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Type, Flag FROM Ship ORDER BY Built_Year DESC LIMIT 1",
    "mongodb": "db.Ship.find({}, {\"Name\": 1, \"Type\": 1, \"Flag\": 1, \"_id\": 0}).sort( {\"Built_Year\": -1} ).limit( 1 )"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT s.Name, s.Type, s.Flag FROM Ship s WHERE s.Built_Year = (SELECT MAX(Built_Year) FROM Ship)",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Type, Flag FROM Ship WHERE Built_Year = (SELECT MAX(Built_Year) FROM Ship)",
    "mongodb": ""
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Type, Flag FROM Ship ORDER BY Built_Year DESC LIMIT 1",
    "mongodb": "db.Ship.find({}, {\"Name\": 1, \"Type\": 1, \"Flag\": 1, \"_id\": 0}).sort( {\"Built_Year\": -1} ).limit( 1 )"
  },
  {
    "db_id": "ship_1",
    "sql": "SELECT Name, Type, Flag FROM Ship WHERE Built_Year = (SELECT MAX(Built_Year) FROM Ship)",
    "mongodb": ""
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name LIKE '%s%'",
    "mongodb": "db.Documents.aggregate([{\"$match\": {\"Document_Name\": {\"$regularExpression\": {\"pattern\": \"^.*s.*$\", \"options\": \"\"}}}}, {\"$lookup\": {\"from\": \"Documents_with_Expenses\", \"localField\": \"Document_ID\", \"foreignField\": \"Document_ID\", \"as\": \"Documents_with_Expenses\"}}, {\"$unwind\": \"$Documents_with_Expenses\"}, {\"$project\": {\"Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name LIKE '%s%'",
    "mongodb": "db.Documents.aggregate([{\"$match\": {\"Document_Name\": {\"$regularExpression\": {\"pattern\": \"^.*s.*$\", \"options\": \"\"}}}}, {\"$lookup\": {\"from\": \"Documents_with_Expenses\", \"localField\": \"Document_ID\", \"foreignField\": \"Document_ID\", \"as\": \"Documents_with_Expenses\"}}, {\"$unwind\": \"$Documents_with_Expenses\"}, {\"$project\": {\"Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name LIKE '%s%'",
    "mongodb": "db.Documents.aggregate([{\"$match\": {\"Document_Name\": {\"$regularExpression\": {\"pattern\": \"^.*s.*$\", \"options\": \"\"}}}}, {\"$lookup\": {\"from\": \"Documents_with_Expenses\", \"localField\": \"Document_ID\", \"foreignField\": \"Document_ID\", \"as\": \"Documents_with_Expenses\"}}, {\"$unwind\": \"$Documents_with_Expenses\"}, {\"$project\": {\"Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name LIKE '%s%'",
    "mongodb": "db.Documents.aggregate([{\"$match\": {\"Document_Name\": {\"$regularExpression\": {\"pattern\": \"^.*s.*$\", \"options\": \"\"}}}}, {\"$lookup\": {\"from\": \"Documents_with_Expenses\", \"localField\": \"Document_ID\", \"foreignField\": \"Document_ID\", \"as\": \"Documents_with_Expenses\"}}, {\"$unwind\": \"$Documents_with_Expenses\"}, {\"$project\": {\"Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name LIKE '%s%'",
    "mongodb": "db.Documents.aggregate([{\"$match\": {\"Document_Name\": {\"$regularExpression\": {\"pattern\": \"^.*s.*$\", \"options\": \"\"}}}}, {\"$lookup\": {\"from\": \"Documents_with_Expenses\", \"localField\": \"Document_ID\", \"foreignField\": \"Document_ID\", \"as\": \"Documents_with_Expenses\"}}, {\"$unwind\": \"$Documents_with_Expenses\"}, {\"$project\": {\"Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT job_title, AVG(salary) FROM employees JOIN jobs ON employees.job_id = jobs.job_id GROUP BY job_title",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"jobs\", \"localField\": \"employees.JOB_ID\", \"foreignField\": \"JOB_ID\", \"as\": \"jobs\"}}, {\"$unwind\": \"$jobs\"}, {\"$group\": {\"_id\": {\"JOB_TITLE\": \"$JOB_TITLE\"}, \"Expr1\": {\"$avg\": \"$salary\"}}}, {\"$project\": {\"JOB_TITLE\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT job_title, AVG(salary) FROM employees AS e JOIN jobs AS j ON e.job_id = j.job_id GROUP BY j.job_title;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"jobs\", \"localField\": \"JOB_ID\", \"foreignField\": \"JOB_ID\", \"as\": \"jobs\"}}, {\"$unwind\": \"$jobs\"}, {\"$group\": {\"_id\": {\"JOB_TITLE\": \"$JOB_TITLE\"}, \"Expr1\": {\"$avg\": \"$salary\"}}}, {\"$project\": {\"JOB_TITLE\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT JOB_TITLE, AVG(SALARY) FROM employees JOIN jobs ON employees.JOB_ID = jobs.JOB_ID GROUP BY JOB_TITLE;",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"jobs\", \"localField\": \"employees.JOB_ID\", \"foreignField\": \"JOB_ID\", \"as\": \"jobs\"}}, {\"$unwind\": \"$jobs\"}, {\"$group\": {\"_id\": {\"JOB_TITLE\": \"$JOB_TITLE\"}, \"Expr1\": {\"$avg\": \"$SALARY\"}}}, {\"$project\": {\"JOB_TITLE\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT JOB_TITLE, AVG(SALARY) FROM employees GROUP BY JOB_TITLE",
    "mongodb": "db.employees.aggregate([{\"$group\": {\"_id\": {\"JOB_TITLE\": \"$JOB_TITLE\"}, \"Expr1\": {\"$avg\": \"$SALARY\"}}}, {\"$project\": {\"JOB_TITLE\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT avg(SALARY), JOB_TITLE FROM employees JOIN jobs ON employees.JOB_ID = jobs.JOB_ID GROUP BY JOB_TITLE",
    "mongodb": "db.employees.aggregate([{\"$lookup\": {\"from\": \"jobs\", \"localField\": \"employees.JOB_ID\", \"foreignField\": \"JOB_ID\", \"as\": \"jobs\"}}, {\"$unwind\": \"$jobs\"}, {\"$group\": {\"_id\": {\"JOB_TITLE\": \"$JOB_TITLE\"}, \"Expr0\": {\"$avg\": \"$SALARY\"}}}, {\"$project\": {\"JOB_TITLE\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device ORDER BY Carrier ASC",
    "mongodb": "db.device.find({}, {\"Carrier\": 1, \"_id\": 0}).sort( {\"Carrier\": 1} )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device ORDER BY Carrier ASC",
    "mongodb": "db.device.find({}, {\"Carrier\": 1, \"_id\": 0}).sort( {\"Carrier\": 1} )"
  },
  {
    "db_id": "device",
    "sql": "SELECT Carrier FROM device ORDER BY Carrier ASC",
    "mongodb": "db.device.find({}, {\"Carrier\": 1, \"_id\": 0}).sort( {\"Carrier\": 1} )"
  },
  {
    "db_id": "device",
    "sql": "SELECT DISTINCT Carrier FROM device ORDER BY Carrier ASC",
    "mongodb": ""
  },
  {
    "db_id": "device",
    "sql": "SELECT DISTINCT Carrier FROM device ORDER BY Carrier ASC",
    "mongodb": ""
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': 'SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)', 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': 'SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)', 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': 'SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)', 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': 'SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)', 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "voter_1",
    "sql": "SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: VOTES | body={'db': 'voter_1', 'sql': 'SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)', 'error': 'java.sql.SQLException: Non-existing table referenced: VOTES'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY count(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY count(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents | body={'db': 'cre_Docs_and_Epenses', 'sql': 'SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Documents'}"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Directed_by, COUNT(*) FROM film GROUP BY Directed_by;",
    "mongodb": "db.film.aggregate([{\"$group\": {\"_id\": {\"Directed_by\": \"$Directed_by\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Directed_by\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Directed_by, COUNT(*) AS Total_films_directed FROM film GROUP BY Directed_by",
    "mongodb": "db.film.aggregate([{\"$group\": {\"_id\": {\"Directed_by\": \"$Directed_by\"}, \"Total_films_directed\": {\"$sum\": 1}}}, {\"$project\": {\"Directed_by\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT directed_by, COUNT(*) FROM film GROUP BY directed_by",
    "mongodb": "db.film.aggregate([{\"$group\": {\"_id\": {\"Directed_by\": \"$Directed_by\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Directed_by\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT Directed_by, COUNT(*) AS Number_of_films FROM film GROUP BY Directed_by;",
    "mongodb": "db.film.aggregate([{\"$group\": {\"_id\": {\"Directed_by\": \"$Directed_by\"}, \"Number_of_films\": {\"$sum\": 1}}}, {\"$project\": {\"Directed_by\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cinema",
    "sql": "SELECT directed_by, COUNT(*) AS num_films FROM film GROUP BY directed_by",
    "mongodb": "db.film.aggregate([{\"$group\": {\"_id\": {\"Directed_by\": \"$Directed_by\"}, \"num_films\": {\"$sum\": 1}}}, {\"$project\": {\"Directed_by\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code FROM Student",
    "mongodb": "db.Student.find({}, {\"city_code\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code FROM Student",
    "mongodb": "db.Student.find({}, {\"city_code\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code FROM Student",
    "mongodb": "db.Student.find({}, {\"city_code\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT city_code FROM Student",
    "mongodb": "db.Student.find({}, {\"city_code\": 1, \"_id\": 0})"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT DISTINCT city_code FROM Student",
    "mongodb": "db.Student.distinct(\"city_code\", {})"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Nominee, COUNT(*) FROM musical GROUP BY Nominee",
    "mongodb": "db.musical.aggregate([{\"$group\": {\"_id\": {\"Nominee\": \"$Nominee\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Nominee\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Nominee, COUNT(*) FROM musical GROUP BY Nominee",
    "mongodb": "db.musical.aggregate([{\"$group\": {\"_id\": {\"Nominee\": \"$Nominee\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Nominee\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Nominee, COUNT(*) AS TotalNominations FROM musical GROUP BY Nominee",
    "mongodb": "db.musical.aggregate([{\"$group\": {\"_id\": {\"Nominee\": \"$Nominee\"}, \"TotalNominations\": {\"$sum\": 1}}}, {\"$project\": {\"Nominee\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Nominee, COUNT(*) FROM musical GROUP BY Nominee",
    "mongodb": "db.musical.aggregate([{\"$group\": {\"_id\": {\"Nominee\": \"$Nominee\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Nominee\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "musical",
    "sql": "SELECT Nominee, COUNT(*) FROM musical GROUP BY Nominee",
    "mongodb": "db.musical.aggregate([{\"$group\": {\"_id\": {\"Nominee\": \"$Nominee\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$project\": {\"Nominee\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT DISTINCT departments.DEPARTMENT_NAME FROM departments JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID;",
    "mongodb": "db.departments.aggregate([{\"$lookup\": {\"from\": \"employees\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"employees.DEPARTMENT_ID\", \"as\": \"employees\"}}, {\"$unwind\": \"$employees\"}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT DISTINCT departments.DEPARTMENT_NAME FROM departments JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID;",
    "mongodb": "db.departments.aggregate([{\"$lookup\": {\"from\": \"employees\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"employees.DEPARTMENT_ID\", \"as\": \"employees\"}}, {\"$unwind\": \"$employees\"}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT DISTINCT departments.DEPARTMENT_NAME FROM departments JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID;",
    "mongodb": "db.departments.aggregate([{\"$lookup\": {\"from\": \"employees\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"employees.DEPARTMENT_ID\", \"as\": \"employees\"}}, {\"$unwind\": \"$employees\"}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT DEPARTMENT_NAME FROM departments WHERE DEPARTMENT_ID IN (SELECT DISTINCT DEPARTMENT_ID FROM employees)",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: employees | body={'db': 'hr_1', 'sql': 'SELECT DEPARTMENT_NAME FROM departments WHERE DEPARTMENT_ID IN (SELECT DISTINCT DEPARTMENT_ID FROM employees)', 'error': 'java.sql.SQLException: Non-existing table referenced: employees'}"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT T1.DEPARTMENT_NAME FROM departments AS T1 JOIN employees AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID",
    "mongodb": "db.departments.aggregate([{\"$lookup\": {\"from\": \"employees\", \"localField\": \"DEPARTMENT_ID\", \"foreignField\": \"DEPARTMENT_ID\", \"as\": \"employees\"}}, {\"$unwind\": \"$employees\"}, {\"$project\": {\"DEPARTMENT_NAME\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Main_Industry FROM company",
    "mongodb": "db.company.find({}, {\"Main_Industry\": 1, \"_id\": 0})"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT DISTINCT Main_Industry FROM company",
    "mongodb": "db.company.distinct(\"Main_Industry\", {})"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT DISTINCT Main_Industry FROM company",
    "mongodb": "db.company.distinct(\"Main_Industry\", {})"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Main_Industry FROM company",
    "mongodb": "db.company.find({}, {\"Main_Industry\": 1, \"_id\": 0})"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Main_Industry FROM company",
    "mongodb": "db.company.find({}, {\"Main_Industry\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT JOB_TITLE FROM JOBS WHERE MIN_SALARY > 9000;",
    "mongodb": "db.jobs.find({\"MIN_SALARY\": {\"$gt\": 9000}}, {\"JOB_TITLE\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT JOB_TITLE FROM jobs WHERE MIN_SALARY > 9000;",
    "mongodb": "db.jobs.find({\"MIN_SALARY\": {\"$gt\": 9000}}, {\"JOB_TITLE\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT JOB_TITLE FROM jobs WHERE MIN_SALARY > 9000",
    "mongodb": "db.jobs.find({\"MIN_SALARY\": {\"$gt\": 9000}}, {\"JOB_TITLE\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT JOB_TITLE FROM jobs WHERE MIN_SALARY > 9000",
    "mongodb": "db.jobs.find({\"MIN_SALARY\": {\"$gt\": 9000}}, {\"JOB_TITLE\": 1, \"_id\": 0})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT JOB_TITLE FROM jobs WHERE MIN_SALARY > 9000",
    "mongodb": "db.jobs.find({\"MIN_SALARY\": {\"$gt\": 9000}}, {\"JOB_TITLE\": 1, \"_id\": 0})"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = \"Uganda\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = \"Uganda\"', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = \"Uganda\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = \"Uganda\"', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = \"Uganda\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = \"Uganda\"', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = \"Uganda\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: climber | body={'db': 'climbing', 'sql': 'SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = \"Uganda\"', 'error': 'java.sql.SQLException: Non-existing table referenced: climber'}"
  },
  {
    "db_id": "climbing",
    "sql": "SELECT Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = 'Uganda'",
    "mongodb": "db.climber.aggregate([{\"$match\": {\"Country\": \"Uganda\"}}, {\"$lookup\": {\"from\": \"mountain\", \"localField\": \"Mountain_ID\", \"foreignField\": \"Mountain_ID\", \"as\": \"mountain\"}}, {\"$unwind\": \"$mountain\"}, {\"$project\": {\"Time\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Main_Industry, SUM(Market_Value) FROM company GROUP BY Main_Industry;",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": {\"Main_Industry\": \"$Main_Industry\"}, \"Expr1\": {\"$sum\": \"$Market_Value\"}}}, {\"$project\": {\"Main_Industry\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Main_Industry, SUM(Market_Value) FROM company GROUP BY Main_Industry;",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": {\"Main_Industry\": \"$Main_Industry\"}, \"Expr1\": {\"$sum\": \"$Market_Value\"}}}, {\"$project\": {\"Main_Industry\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Main_Industry, SUM(Market_Value) FROM company GROUP BY Main_Industry",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": {\"Main_Industry\": \"$Main_Industry\"}, \"Expr1\": {\"$sum\": \"$Market_Value\"}}}, {\"$project\": {\"Main_Industry\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Main_Industry, SUM(Market_Value) FROM company GROUP BY Main_Industry",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": {\"Main_Industry\": \"$Main_Industry\"}, \"Expr1\": {\"$sum\": \"$Market_Value\"}}}, {\"$project\": {\"Main_Industry\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "gas_company",
    "sql": "SELECT Main_Industry, SUM(Market_Value) FROM company GROUP BY Main_Industry",
    "mongodb": "db.company.aggregate([{\"$group\": {\"_id\": {\"Main_Industry\": \"$Main_Industry\"}, \"Expr1\": {\"$sum\": \"$Market_Value\"}}}, {\"$project\": {\"Main_Industry\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
    "mongodb": "db.employees.find({\"hire_date\": {\"$gt\": {\"$date\": \"1987-09-07T07:00:00Z\"}}}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
    "mongodb": "db.employees.find({\"hire_date\": {\"$gt\": {\"$date\": \"1987-09-07T07:00:00Z\"}}}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE HIRE_DATE > '1987-09-07'",
    "mongodb": "db.employees.find({\"HIRE_DATE\": {\"$gt\": {\"$date\": \"1987-09-07T07:00:00Z\"}}}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE hire_date > '1987-09-07'",
    "mongodb": "db.employees.find({\"hire_date\": {\"$gt\": {\"$date\": \"1987-09-07T07:00:00Z\"}}}, {})"
  },
  {
    "db_id": "hr_1",
    "sql": "SELECT * FROM employees WHERE HIRE_DATE > '1987-09-07';",
    "mongodb": "db.employees.find({\"HIRE_DATE\": {\"$gt\": {\"$date\": \"1987-09-07T07:00:00Z\"}}}, {})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin, destination FROM flight WHERE price > 300;",
    "mongodb": "db.flight.find({\"price\": {\"$gt\": 300}}, {\"origin\": 1, \"destination\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin, destination FROM flight WHERE price > 300",
    "mongodb": "db.flight.find({\"price\": {\"$gt\": 300}}, {\"origin\": 1, \"destination\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin, destination FROM flight WHERE price > 300",
    "mongodb": "db.flight.find({\"price\": {\"$gt\": 300}}, {\"origin\": 1, \"destination\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin, destination FROM flight WHERE price > 300",
    "mongodb": "db.flight.find({\"price\": {\"$gt\": 300}}, {\"origin\": 1, \"destination\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_1",
    "sql": "SELECT origin, destination FROM flight WHERE price > 300",
    "mongodb": "db.flight.find({\"price\": {\"$gt\": 300}}, {\"origin\": 1, \"destination\": 1, \"_id\": 0})"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1;",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country, COUNT(*) FROM airlines WHERE active = \"Y\" GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1;",
    "mongodb": "db.airlines.aggregate([{\"$match\": {\"$lookup\": {\"from\": \"\", \"localField\": \"active\", \"foreignField\": \"Y\"}}}, {\"$group\": {\"_id\": {\"country\": \"$country\"}, \"Expr1\": {\"$sum\": 1}}}, {\"$sort\": {\"Expr1\": -1}}, {\"$limit\": 1}, {\"$project\": {\"country\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor ORDER BY Age ASC",
    "mongodb": "db.editor.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": 1} )"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor ORDER BY Age ASC",
    "mongodb": "db.editor.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": 1} )"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor ORDER BY Age ASC",
    "mongodb": "db.editor.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": 1} )"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor ORDER BY Age ASC",
    "mongodb": "db.editor.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": 1} )"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor ORDER BY Age ASC",
    "mongodb": "db.editor.find({}, {\"Name\": 1, \"_id\": 0}).sort( {\"Age\": 1} )"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000",
    "mongodb": "db.journal_committee.aggregate([{\"$match\": {\"Sales\": {\"$gt\": 3000}}}, {\"$lookup\": {\"from\": \"editor\", \"localField\": \"Editor_ID\", \"foreignField\": \"Editor_ID\", \"as\": \"editor\"}}, {\"$unwind\": \"$editor\"}, {\"$lookup\": {\"from\": \"journal\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal\"}}, {\"$unwind\": \"$journal\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT Name FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee WHERE Journal_ID IN (SELECT Journal_ID FROM journal WHERE Sales > 3000))",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: journal_committee | body={'db': 'journal_committee', 'sql': 'SELECT Name FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee WHERE Journal_ID IN (SELECT Journal_ID FROM journal WHERE Sales > 3000))', 'error': 'java.sql.SQLException: Non-existing table referenced: journal_committee'}"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name FROM editor AS T2 JOIN journal_committee AS T1 ON T2.Editor_ID = T1.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000",
    "mongodb": "db.editor.aggregate([{\"$match\": {\"Sales\": {\"$gt\": 3000}}}, {\"$lookup\": {\"from\": \"journal_committee\", \"localField\": \"Editor_ID\", \"foreignField\": \"Editor_ID\", \"as\": \"journal_committee\"}}, {\"$unwind\": \"$journal_committee\"}, {\"$lookup\": {\"from\": \"journal\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal\"}}, {\"$unwind\": \"$journal\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT E.Name FROM editor E JOIN journal_committee JC ON E.Editor_ID = JC.Editor_ID JOIN journal J ON JC.Journal_ID = J.Journal_ID WHERE J.Sales > 3000;",
    "mongodb": "db.editor.aggregate([{\"$match\": {\"Sales\": {\"$gt\": 3000}}}, {\"$lookup\": {\"from\": \"journal_committee\", \"localField\": \"Editor_ID\", \"foreignField\": \"Editor_ID\", \"as\": \"journal_committee\"}}, {\"$unwind\": \"$journal_committee\"}, {\"$lookup\": {\"from\": \"journal\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal\"}}, {\"$unwind\": \"$journal\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "journal_committee",
    "sql": "SELECT T2.Name FROM editor AS T2 JOIN journal_committee AS T1 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000;",
    "mongodb": "db.editor.aggregate([{\"$match\": {\"Sales\": {\"$gt\": 3000}}}, {\"$lookup\": {\"from\": \"journal_committee\", \"localField\": \"Editor_ID\", \"foreignField\": \"Editor_ID\", \"as\": \"journal_committee\"}}, {\"$unwind\": \"$journal_committee\"}, {\"$lookup\": {\"from\": \"journal\", \"localField\": \"Journal_ID\", \"foreignField\": \"Journal_ID\", \"as\": \"journal\"}}, {\"$unwind\": \"$journal\"}, {\"$project\": {\"Name\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type JOIN Has_Allergy ON Allergy_Type.Allergy = Has_Allergy.Allergy GROUP BY AllergyType ORDER BY COUNT(*) DESC LIMIT 1;",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT AllergyType FROM Allergy_Type JOIN Has_Allergy ON Allergy_Type.Allergy = Has_Allergy.Allergy GROUP BY AllergyType ORDER BY COUNT(*) DESC LIMIT 1;', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type GROUP BY AllergyType ORDER BY count(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy GROUP BY T1.AllergyType ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy GROUP BY T1.AllergyType ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT A.AllergyType FROM Allergy_Type AS A JOIN Has_Allergy AS H ON A.Allergy = H.Allergy GROUP BY A.AllergyType ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Has_Allergy | body={'db': 'allergy_1', 'sql': 'SELECT A.AllergyType FROM Allergy_Type AS A JOIN Has_Allergy AS H ON A.Allergy = H.Allergy GROUP BY A.AllergyType ORDER BY COUNT(*) DESC LIMIT 1', 'error': 'java.sql.SQLException: Non-existing table referenced: Has_Allergy'}"
  },
  {
    "db_id": "allergy_1",
    "sql": "SELECT AllergyType FROM Allergy_Type GROUP BY AllergyType ORDER BY COUNT(*) DESC LIMIT 1",
    "mongodb": ""
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airlines",
    "mongodb": "db.airlines.find({}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airlines",
    "mongodb": "db.airlines.find({}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airlines",
    "mongodb": "db.airlines.find({}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airlines;",
    "mongodb": "db.airlines.find({}, {}).count()"
  },
  {
    "db_id": "flight_4",
    "sql": "SELECT count(*) FROM airlines WHERE active = \"Y\"",
    "mongodb": "db.airlines.find({\"$lookup\": {\"from\": \"\", \"localField\": \"active\", \"foreignField\": \"Y\"}}, {}).count()"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Documents_with_Expenses.Document_ID FROM Documents_with_Expenses JOIN Ref_Budget_Codes ON Documents_with_Expenses.Budget_Type_Code = Ref_Budget_Codes.Budget_Type_Code WHERE Ref_Budget_Codes.Budget_Type_Description = 'Government'",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$match\": {\"Budget_Type_Description\": \"Government\"}}, {\"$lookup\": {\"from\": \"Ref_Budget_Codes\", \"localField\": \"Documents_with_Expenses.Budget_Type_Code\", \"foreignField\": \"Budget_Type_Code\", \"as\": \"Ref_Budget_Codes\"}}, {\"$unwind\": \"$Ref_Budget_Codes\"}, {\"$project\": {\"Documents_with_Expenses.Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_ID FROM Documents_with_Expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code WHERE T2.Budget_Type_Description = 'Government';",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$match\": {\"Budget_Type_Description\": \"Government\"}}, {\"$lookup\": {\"from\": \"Ref_Budget_Codes\", \"localField\": \"Budget_Type_Code\", \"foreignField\": \"Budget_Type_Code\", \"as\": \"Ref_Budget_Codes\"}}, {\"$unwind\": \"$Ref_Budget_Codes\"}, {\"$project\": {\"Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT T1.Document_ID FROM Documents_with_Expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code WHERE T2.Budget_Type_Description = 'Government'",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$match\": {\"Budget_Type_Description\": \"Government\"}}, {\"$lookup\": {\"from\": \"Ref_Budget_Codes\", \"localField\": \"Budget_Type_Code\", \"foreignField\": \"Budget_Type_Code\", \"as\": \"Ref_Budget_Codes\"}}, {\"$unwind\": \"$Ref_Budget_Codes\"}, {\"$project\": {\"Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = (SELECT Budget_Type_Code FROM Ref_Budget_Codes WHERE Budget_Type_Description = 'Government')",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Documents_with_Expenses | body={'db': 'cre_Docs_and_Epenses', 'sql': \"SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = (SELECT Budget_Type_Code FROM Ref_Budget_Codes WHERE Budget_Type_Description = 'Government')\", 'error': 'java.sql.SQLException: Non-existing table referenced: Documents_with_Expenses'}"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "sql": "SELECT Documents.Document_ID FROM Documents_with_Expenses JOIN Ref_Budget_Codes ON Documents_with_Expenses.Budget_Type_Code = Ref_Budget_Codes.Budget_Type_Code WHERE Ref_Budget_Codes.Budget_Type_Description = 'Government'",
    "mongodb": "db.Documents_with_Expenses.aggregate([{\"$match\": {\"Budget_Type_Description\": \"Government\"}}, {\"$lookup\": {\"from\": \"Ref_Budget_Codes\", \"localField\": \"Documents_with_Expenses.Budget_Type_Code\", \"foreignField\": \"Budget_Type_Code\", \"as\": \"Ref_Budget_Codes\"}}, {\"$unwind\": \"$Ref_Budget_Codes\"}, {\"$project\": {\"Documents.Document_ID\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT sum(u.Enrollment), u.Affiliation FROM university u WHERE u.Founded > 1850 GROUP BY u.Affiliation;",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Founded\": {\"$gt\": 1850}}}, {\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr0\": {\"$sum\": \"$Enrollment\"}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT sum(u.Enrollment) , u.Affiliation FROM university u WHERE u.Founded > 1850 GROUP BY u.Affiliation;",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Founded\": {\"$gt\": 1850}}}, {\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr0\": {\"$sum\": \"$Enrollment\"}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT sum(u.Enrollment) as Total_Enrollment, u.Affiliation FROM university u WHERE u.Founded > 1850 GROUP BY u.Affiliation;",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Founded\": {\"$gt\": 1850}}}, {\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Total_Enrollment\": {\"$sum\": \"$Enrollment\"}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT T2.Affiliation, sum(T2.Enrollment) FROM university AS T2 WHERE T2.Founded > 1850 GROUP BY T2.Affiliation",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Founded\": {\"$gt\": 1850}}}, {\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr1\": {\"$sum\": \"$Enrollment\"}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "university_basketball",
    "sql": "SELECT Affiliation, SUM(Enrollment) FROM university WHERE Founded > 1850 GROUP BY Affiliation",
    "mongodb": "db.university.aggregate([{\"$match\": {\"Founded\": {\"$gt\": 1850}}}, {\"$group\": {\"_id\": {\"Affiliation\": \"$Affiliation\"}, \"Expr1\": {\"$sum\": \"$Enrollment\"}}}, {\"$project\": {\"Affiliation\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.family_name = \"Zieme\" AND T2.personal_name = \"Bernie\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.family_name = \"Zieme\" AND T2.personal_name = \"Bernie\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.family_name = \"Zieme\" AND T2.personal_name = \"Bernie\";",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.family_name = \"Zieme\" AND T2.personal_name = \"Bernie\";', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Bernie\" AND T2.family_name = \"Zieme\"",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Bernie\" AND T2.family_name = \"Zieme\"', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment AS SCE JOIN Students AS S ON SCE.student_id = S.student_id WHERE S.personal_name = \"Bernie\" AND S.family_name = \"Zieme\";",
    "mongodb": "ERROR: java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment | body={'db': 'e_learning', 'sql': 'SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment AS SCE JOIN Students AS S ON SCE.student_id = S.student_id WHERE S.personal_name = \"Bernie\" AND S.family_name = \"Zieme\";', 'error': 'java.sql.SQLException: Non-existing table referenced: Student_Course_Enrolment'}"
  },
  {
    "db_id": "e_learning",
    "sql": "SELECT T2.date_of_registration, T2.date_of_completion FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T1.family_name = 'Zieme' AND T1.personal_name = 'Bernie'",
    "mongodb": "db.Students.aggregate([{\"$match\": {\"personal_name\": \"Bernie\", \"family_name\": \"Zieme\"}}, {\"$lookup\": {\"from\": \"Student_Course_Enrolment\", \"localField\": \"student_id\", \"foreignField\": \"student_id\", \"as\": \"Student_Course_Enrolment\"}}, {\"$unwind\": \"$Student_Course_Enrolment\"}, {\"$project\": {\"date_of_registration\": 1, \"date_of_completion\": 1, \"_id\": 0}}])"
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Advisor FROM Student GROUP BY Advisor HAVING COUNT(*) > 2",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT Advisor FROM Student GROUP BY Advisor HAVING count(*) > 2",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT T1.Advisor, COUNT(T1.StuID) AS num_students FROM Student AS T1 GROUP BY T1.Advisor HAVING COUNT(T1.StuID) > 2",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT DISTINCT Advisor FROM Student GROUP BY Advisor HAVING COUNT(StuID) > 2",
    "mongodb": ""
  },
  {
    "db_id": "voter_2",
    "sql": "SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.Advisor GROUP BY T1.Advisor HAVING COUNT(*) > 2",
    "mongodb": ""
  }
]