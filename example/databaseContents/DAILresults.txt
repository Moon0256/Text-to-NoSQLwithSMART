SELECT T2.School, T1.Name FROM school_bus AS T3 JOIN school AS T2 ON T3.School_ID = T2.School_ID JOIN driver AS T1 ON T3.Driver_ID = T1.Driver_ID;
SELECT T2.School , T1.Name FROM school_bus AS T3 JOIN driver AS T1 ON T3.Driver_ID = T1.Driver_ID JOIN school AS T2 ON T3.School_ID = T2.School_ID
SELECT T1.Name, T2.School FROM driver AS T1 JOIN school_bus AS T3 ON T1.Driver_ID = T3.Driver_ID JOIN school AS T2 ON T3.School_ID = T2.School_ID
SELECT T2.School, T1.Name FROM driver AS T1 JOIN school_bus AS T3 ON T1.Driver_ID = T3.Driver_ID JOIN school AS T2 ON T2.School_ID = T3.School_ID
SELECT T2.Name AS Driver_Name, T1.School AS School_Name FROM school AS T1 JOIN school_bus AS T3 ON T1.School_ID = T3.School_ID JOIN driver AS T2 ON T3.Driver_ID = T2.Driver_ID;
SELECT Name, Openning_year, Capacity FROM cinema
SELECT Name, Openning_year, Capacity FROM cinema
SELECT Openning_year, Name, Capacity FROM cinema
SELECT Capacity, Openning_year, Name FROM cinema
SELECT Name, Capacity, Openning_year FROM cinema
SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1
SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1
SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1
SELECT Fname FROM Student WHERE Fname LIKE '%a%'
SELECT Fname FROM Student WHERE Fname LIKE '%a%' 
SELECT Fname FROM Student WHERE Fname LIKE '%a%';
SELECT Fname FROM Student WHERE Fname LIKE '%a%'
SELECT Fname FROM Student WHERE Fname LIKE '%a%'
SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)
SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)
SELECT * FROM employees WHERE EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM job_history)
SELECT * FROM employees WHERE EMPLOYEE_ID NOT IN (SELECT DISTINCT EMPLOYEE_ID FROM job_history)
SELECT * FROM employees WHERE EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM job_history)
SELECT T1.DName FROM Department AS T1 JOIN Member_of AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY COUNT(*) ASC LIMIT 1;
SELECT T1.DName FROM Department AS T1 JOIN Member_of AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY COUNT(*) ASC LIMIT 1;
SELECT DName FROM Department WHERE DNO IN (SELECT DNO FROM Member_of GROUP BY DNO ORDER BY COUNT(FacID) ASC LIMIT 1)
SELECT DName FROM Department GROUP BY DNO ORDER BY count(*) ASC LIMIT 1;
SELECT DName FROM Department GROUP BY DName ORDER BY COUNT(*) LIMIT 1;
SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING COUNT(*) >= 2
SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING count(*) >= 2;
SELECT name FROM aircraft JOIN flight ON aircraft.aid = flight.aid GROUP BY aircraft.aid HAVING COUNT(*) >= 2;
SELECT T2.name FROM aircraft AS T2 JOIN flight AS T1 ON T2.aid = T1.aid GROUP BY T2.name HAVING COUNT(*) >= 2
SELECT name FROM aircraft WHERE aid IN (SELECT aid FROM flight GROUP BY aid HAVING count(*) >= 2)
SELECT AVG(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma')
SELECT AVG(Price) FROM wine JOIN appellations ON wine.Appelation = appellations.Appelation WHERE appellations.County = 'Sonoma'
SELECT AVG(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma')
SELECT AVG(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma')
SELECT avg(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma')
SELECT DISTINCT Name FROM wine ORDER BY Name
SELECT Name FROM wine ORDER BY Name ASC
SELECT DISTINCT Name FROM wine ORDER BY Name ASC
SELECT DISTINCT Name FROM wine ORDER BY Name ASC
SELECT DISTINCT Name FROM wine ORDER BY Name
SELECT Rank, COUNT(*) FROM captain GROUP BY Rank
SELECT count(*), Rank FROM captain GROUP BY Rank
SELECT Rank, count(*) FROM captain GROUP BY Rank
SELECT Rank, COUNT(*) FROM captain GROUP BY Rank
SELECT Rank, COUNT(*) FROM captain GROUP BY Rank
SELECT T1.course_name, COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name
SELECT T1.course_name, COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name;
SELECT T1.course_name, COUNT(T2.student_id) AS total_students_enrolled FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name;
SELECT T1.course_name, COUNT(T2.student_id) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name
SELECT Courses.course_name, COUNT(Student_Course_Enrolment.student_id) FROM Courses JOIN Student_Course_Enrolment ON Courses.course_id = Student_Course_Enrolment.course_id GROUP BY Courses.course_name
SELECT LName FROM Student WHERE Major = 50;
SELECT LName FROM Student WHERE Major = 50;
SELECT LName FROM Student WHERE Major = 50 
SELECT LName FROM Student WHERE Major = 50;
SELECT LName FROM Student WHERE Major = 50
SELECT count(*) FROM device 
SELECT count(*) FROM device
SELECT count(*) FROM device
SELECT COUNT(*) FROM device;
SELECT count(*) FROM device
SELECT T1.subject_id, T2.subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id, T2.subject_name
SELECT T2.subject_id, T2.subject_name, COUNT(*) AS num_available_courses FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T2.subject_id, T2.subject_name;
SELECT Subjects.subject_id, Subjects.subject_name, COUNT(Courses.course_id) AS total_courses FROM Subjects JOIN Courses ON Subjects.subject_id = Courses.subject_id GROUP BY Subjects.subject_id, Subjects.subject_name
SELECT Subjects.subject_id, Subjects.subject_name, COUNT(Courses.course_id) FROM Subjects LEFT JOIN Courses ON Subjects.subject_id = Courses.subject_id GROUP BY Subjects.subject_id, Subjects.subject_name
SELECT subject_id, subject_name, count(*) FROM Courses GROUP BY subject_id, subject_name
SELECT count(DISTINCT Affiliation) FROM university
SELECT count(DISTINCT Affiliation) FROM university
SELECT count(DISTINCT Affiliation) FROM university
SELECT count(DISTINCT Affiliation) FROM university
SELECT count(DISTINCT Affiliation) FROM university
SELECT Name FROM captain ORDER BY age DESC
SELECT Name FROM captain ORDER BY age DESC
SELECT Name FROM captain ORDER BY age
SELECT Name FROM captain ORDER BY age DESC
SELECT Name FROM captain ORDER BY age DESC
SELECT Name, Openning_year FROM cinema ORDER BY Openning_year DESC;
SELECT Name, Openning_year FROM cinema ORDER BY Openning_year DESC
SELECT Name, Openning_year FROM cinema ORDER BY Openning_year DESC;
SELECT Name, Openning_year FROM cinema ORDER BY Openning_year DESC
SELECT Name, Openning_year FROM cinema ORDER BY Openning_year DESC
SELECT School, Nickname FROM university ORDER BY Founded;
SELECT School, Nickname FROM university ORDER BY Founded;
SELECT School, Nickname FROM university ORDER BY Founded
SELECT School, Nickname FROM university ORDER BY Founded
SELECT School, Nickname FROM university ORDER BY Founded;
SELECT e.first_name, e.last_name, e.hire_date, e.salary, e.department_id FROM employees e WHERE e.first_name NOT LIKE '%M%'
SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%'
SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%'
SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%'
SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%'
SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = "advanced database"
SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = "advanced database"
SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = "advanced database"
SELECT login_name FROM Course_Authors_and_Tutors WHERE author_id = (SELECT author_id FROM Courses WHERE course_name = "advanced database")
SELECT t1.personal_name, t1.login_name FROM Course_Authors_and_Tutors AS t1 JOIN Courses AS t2 ON t1.author_id = t2.author_id JOIN Subjects AS t3 ON t2.subject_id = t3.subject_id WHERE t3.subject_name = "advanced database"
SELECT name, distance FROM aircraft WHERE aid = 12;
SELECT name, distance FROM aircraft WHERE aid = 12;
SELECT name, distance FROM aircraft WHERE aid = 12
SELECT name, distance FROM aircraft WHERE aid = 12;
SELECT name, distance FROM aircraft WHERE aid = 12;
SELECT first_name, last_name, salary FROM employees WHERE commission_pct IS NULL;
SELECT CONCAT(first_name, ' ', last_name) AS full_name, salary FROM employees WHERE commission_pct IS NULL;
SELECT FIRST_NAME, LAST_NAME, SALARY FROM employees WHERE COMMISSION_PCT IS NULL
SELECT FIRST_NAME, LAST_NAME, SALARY FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL;
SELECT salary, CONCAT(first_name, ' ', last_name) AS full_name FROM employees WHERE commission_pct IS NULL;
SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC
SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC
SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC
SELECT * FROM employees WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%' ORDER BY SALARY DESC;
SELECT * FROM employees WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%' ORDER BY SALARY DESC;
SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1
SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1
SELECT T1.School_Colors FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID ORDER BY T1.Enrollment DESC LIMIT 1
SELECT T1.School_Colors FROM school AS T1 WHERE T1.Enrollment = (SELECT MAX(Enrollment) FROM school)
SELECT T1.School_Colors FROM school AS T1 JOIN ( SELECT School_ID, MAX(Enrollment) AS max_enrollment FROM school ) AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Enrollment = T2.max_enrollment
SELECT count(*) FROM county_public_safety 
SELECT count(*) FROM county_public_safety
SELECT count(*) FROM county_public_safety
SELECT count(*) FROM county_public_safety;
SELECT COUNT(*) FROM county_public_safety;
SELECT T2.department_name , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name
SELECT T2.DEPARTMENT_NAME, COUNT(*) FROM EMPLOYEES AS T1 JOIN DEPARTMENTS AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T2.DEPARTMENT_NAME;
SELECT T1.DEPARTMENT_NAME, COUNT(T2.EMPLOYEE_ID) FROM departments AS T1 JOIN employees AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T1.DEPARTMENT_NAME
SELECT T2.DEPARTMENT_NAME, COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T2.DEPARTMENT_NAME;
SELECT T1.DEPARTMENT_NAME, COUNT(T2.EMPLOYEE_ID) FROM DEPARTMENTS AS T1 JOIN EMPLOYEES AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T1.DEPARTMENT_NAME;
SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1
SELECT Denomination FROM school WHERE School_ID = (SELECT School_ID FROM player GROUP BY School_ID ORDER BY COUNT(*) DESC LIMIT 1)
SELECT Denomination FROM school WHERE School_ID = (SELECT School_ID FROM player GROUP BY School_ID ORDER BY COUNT(*) DESC LIMIT 1)
SELECT T1.Denomination FROM school AS T1 JOIN player AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.Denomination ORDER BY COUNT(*) DESC LIMIT 1
SELECT count(*) FROM Documents_with_Expenses;
SELECT count(*) FROM Documents_with_Expenses
SELECT count(*) FROM Documents_with_expenses
SELECT count(*) FROM Documents_with_Expenses
SELECT count(*) FROM Documents_with_Expenses
SELECT Location FROM gas_station ORDER BY Open_Year;
SELECT Location FROM gas_station ORDER BY Open_Year;
SELECT Location FROM gas_station ORDER BY Open_Year
SELECT Location FROM gas_station ORDER BY Open_Year
SELECT Location FROM gas_station ORDER BY Open_Year
SELECT DISTINCT Nominee FROM musical WHERE Award != "Tony Award"
SELECT DISTINCT Nominee FROM musical WHERE Award != "Tony Award"
SELECT DISTINCT Nominee FROM musical WHERE Award != "Tony Award"
SELECT DISTINCT Nominee FROM musical WHERE Award != "Tony Award"
SELECT DISTINCT Nominee FROM musical WHERE Award <> "Tony Award"
SELECT enrollment, primary_conference FROM university ORDER BY founded LIMIT 1;
SELECT enrollment, primary_conference FROM university ORDER BY founded LIMIT 1
SELECT Enrollment, Primary_conference FROM university ORDER BY Founded ASC LIMIT 1
SELECT enrollment, primary_conference FROM university ORDER BY founded LIMIT 1
SELECT enrollment, primary_conference FROM university WHERE Founded = (SELECT MIN(Founded) FROM university)
SELECT T1.Project_ID, T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID GROUP BY T1.Project_ID HAVING COUNT(*) >= 2;
SELECT T1.Project_ID, T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID GROUP BY T1.Project_ID HAVING COUNT(*) > 2;
SELECT Projects.Project_ID, Projects.Project_Details FROM Projects JOIN Documents ON Projects.Project_ID = Documents.Project_ID GROUP BY Projects.Project_ID HAVING COUNT(Documents.Document_ID) >= 2
SELECT T1.Project_ID, T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID GROUP BY T1.Project_ID HAVING COUNT(*) >= 2
SELECT Project_ID, Project_Details FROM Projects WHERE Project_ID IN (SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2)
SELECT flno, distance FROM flight ORDER BY price DESC LIMIT 1
SELECT flno, distance FROM flight ORDER BY price DESC LIMIT 1
SELECT flno, distance FROM flight ORDER BY price DESC LIMIT 1;
SELECT flno, distance FROM flight ORDER BY price DESC LIMIT 1
SELECT flno, distance FROM flight ORDER BY price DESC LIMIT 1
SELECT name, city, country, elevation FROM airports WHERE city = 'New York'
SELECT name, city, country, elevation FROM airports WHERE city = 'New York'
SELECT name, city, country, elevation FROM airports WHERE city = 'New York'
SELECT name, city, country, elevation FROM airports WHERE city = "New York";
SELECT name, city, country, elevation FROM airports WHERE city = "New York"
SELECT name, distance FROM aircraft
SELECT name, distance FROM aircraft;
SELECT name, distance FROM aircraft
SELECT name, distance FROM aircraft
SELECT name, distance FROM aircraft
SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'
SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'
SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'
SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'
SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'
SELECT count(*) FROM editor
SELECT count(*) FROM editor
SELECT count(*) FROM editor
SELECT count(*) FROM editor 
SELECT count(*) FROM editor
SELECT T1.first_name, T1.last_name, T1.employee_id, T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id;
SELECT T1.first_name , T1.last_name , T1.employee_id , T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id
SELECT e.FIRST_NAME, e.LAST_NAME, e.EMPLOYEE_ID, c.COUNTRY_NAME FROM employees e JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID JOIN locations l ON d.LOCATION_ID = l.LOCATION_ID JOIN countries c ON l.COUNTRY_ID = c.COUNTRY_ID;
SELECT T1.first_name, T1.last_name, T1.employee_id, T3.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id;
SELECT employees.first_name, employees.last_name, employees.employee_id, countries.country_name FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id JOIN countries ON locations.country_id = countries.country_id;
SELECT DISTINCT Winery FROM wine WHERE Price BETWEEN 50 AND 100
SELECT DISTINCT Winery FROM wine WHERE Price BETWEEN 50 AND 100
SELECT DISTINCT Winery FROM wine WHERE Price BETWEEN 50 AND 100
SELECT DISTINCT Winery FROM wine WHERE Price BETWEEN 50 AND 100
SELECT DISTINCT Winery FROM wine WHERE Price BETWEEN 50 AND 100
SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500
SELECT * FROM employees WHERE salary > (SELECT MIN(salary) FROM employees) AND salary < 2500
SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500
SELECT * FROM employees WHERE SALARY > 0 AND SALARY <= 2500
SELECT * FROM employees WHERE salary > (SELECT MIN(min_salary) FROM jobs) AND salary <= 2500
SELECT first_name, department_id FROM employees WHERE last_name = 'McEwen';
SELECT first_name, department_id FROM employees WHERE last_name = 'McEwen'
SELECT FIRST_NAME, DEPARTMENT_ID FROM employees WHERE LAST_NAME = "McEwen"
SELECT FIRST_NAME, DEPARTMENT_ID FROM EMPLOYEES WHERE LAST_NAME = 'McEwen'
SELECT FIRST_NAME, DEPARTMENT_ID FROM employees WHERE LAST_NAME = 'McEwen'
SELECT count(DISTINCT city) FROM airports GROUP BY city HAVING count(*) > 3;
SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*) > 3)
SELECT count(DISTINCT city) FROM airports GROUP BY city HAVING count(*) > 3;
SELECT count(city) FROM airports GROUP BY city HAVING count(*) > 3
SELECT count(DISTINCT city) FROM airports GROUP BY city HAVING count(*) > 3
SELECT DISTINCT Name FROM wine WHERE Year < 2000 OR Year > 2010
SELECT DISTINCT Name FROM wine WHERE Year < 2000 OR Year > 2010
SELECT DISTINCT Name FROM wine WHERE Year < 2000 OR Year > 2010
SELECT DISTINCT Name FROM wine WHERE Year < 2000 OR Year > 2010
SELECT DISTINCT Name FROM wine WHERE Year < 2000 OR Year > 2010
SELECT flno, origin, destination FROM flight ORDER BY origin;
SELECT flno, origin, destination FROM flight ORDER BY origin;
SELECT flno, origin, destination FROM flight ORDER BY origin;
SELECT flno, origin, destination FROM flight ORDER BY origin;
SELECT flno, origin, destination FROM flight ORDER BY origin;
SELECT Name FROM technician WHERE Age = 36 OR Age = 37
SELECT Name FROM technician WHERE Age = 36 OR Age = 37;
SELECT Name FROM technician WHERE Age = 36 OR Age = 37
SELECT Name FROM technician WHERE Age = 36 OR Age = 37
SELECT Name FROM technician WHERE Age IN (36, 37)
SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1
SELECT Location FROM county_public_safety GROUP BY Location ORDER BY COUNT(*) DESC LIMIT 1
SELECT Location FROM county_public_safety GROUP BY Location ORDER BY count(*) DESC LIMIT 1
SELECT Location FROM county_public_safety GROUP BY Location ORDER BY COUNT(DISTINCT County_ID) DESC LIMIT 1
SELECT T2.Location FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID GROUP BY T2.Location ORDER BY COUNT(*) DESC LIMIT 1
SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast')
SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = "Central Coast")
SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast')
SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = "Central Coast")
SELECT Appelation FROM wine WHERE Year > 2008 AND Appelation NOT IN (SELECT Appelation FROM appellations WHERE Area = "Central Coast")
SELECT Allergy, COUNT(*) FROM Has_Allergy GROUP BY Allergy;
SELECT Allergy, COUNT(*) FROM Has_Allergy GROUP BY Allergy;
SELECT Allergy, COUNT(StuID) FROM Has_Allergy GROUP BY Allergy
SELECT AllergyType, COUNT(StuID) FROM Has_Allergy JOIN Allergy_Type ON Has_Allergy.Allergy = Allergy_Type.Allergy GROUP BY AllergyType
SELECT T2.AllergyType, COUNT(*) FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy GROUP BY T2.AllergyType
SELECT T1.Allergy, T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = "Lisa" ORDER BY T1.Allergy
SELECT T1.Allergy, T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = "Lisa" ORDER BY T1.Allergy;
SELECT A.Allergy, A.AllergyType FROM Has_Allergy AS HA JOIN Allergy_Type AS A ON HA.Allergy = A.Allergy JOIN Student AS S ON HA.StuID = S.StuID WHERE S.Fname = 'Lisa' AND S.Sex = 'F' ORDER BY A.Allergy;
SELECT T1.Allergy, T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = "Lisa" AND T3.Sex = "F" ORDER BY T1.Allergy;
SELECT T1.Allergy, T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = "Lisa" AND T3.Sex = "F" ORDER BY T1.Allergy;
SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)
SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)
SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)
SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)
SELECT Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)
SELECT Location, COUNT(*) FROM gas_station GROUP BY Location ORDER BY COUNT(*) DESC;
SELECT Location, COUNT(*) FROM gas_station GROUP BY Location ORDER BY COUNT(*)
SELECT Location, COUNT(*) FROM gas_station GROUP BY Location ORDER BY COUNT(*) DESC
SELECT count(*) , Location FROM gas_station GROUP BY Location ORDER BY count(*) DESC
SELECT Location, COUNT(*) FROM gas_station GROUP BY Location ORDER BY COUNT(*) DESC
SELECT login_name FROM Students WHERE family_name = "Ward"
SELECT login_name FROM Students WHERE family_name = "Ward"
SELECT login_name FROM Students WHERE family_name = "Ward"
SELECT login_name FROM Students WHERE family_name = "Ward"
SELECT login_name FROM Students WHERE family_name = "Ward"
SELECT Name FROM driver ORDER BY Age DESC
SELECT Name FROM driver ORDER BY Age DESC
SELECT Name FROM driver ORDER BY Age DESC 
SELECT Name FROM driver ORDER BY Age DESC 
SELECT Name FROM driver ORDER BY Age DESC
SELECT T2.Fname, T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID WHERE T1.CName = "COMPUTER LITERACY"
SELECT Faculty.Fname, Faculty.Lname FROM Course JOIN Faculty ON Course.Instructor = Faculty.FacID WHERE Course.CName = "COMPUTER LITERACY";
SELECT Fname, Lname FROM Faculty JOIN Course ON Faculty.FacID = Course.Instructor WHERE Course.CName = "COMPUTER LITERACY"
SELECT T2.Fname, T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID WHERE T1.CName = 'COMPUTER LITERACY'
SELECT T2.Fname, T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID WHERE T1.CName = 'COMPUTER LITERACY';
SELECT Fname, Lname, Age FROM Student WHERE Sex = 'F'
SELECT Fname, Lname, Age FROM Student WHERE Sex = 'F'
SELECT Fname, LName, Age FROM Student WHERE Sex = 'F'
SELECT Fname, Lname, Age FROM Student WHERE Sex = 'F'
SELECT Fname, LName, Age FROM Student WHERE Sex = 'F'
SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)
SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)
SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)
SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)
SELECT Name FROM editor WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)
SELECT T1.statement_id, T2.statement_details, T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id;
SELECT T1.statement_id , T2.statement_details , T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id 
SELECT T1.Statement_ID, T1.Statement_Details, T2.Account_Details FROM Statements AS T1 JOIN Accounts AS T2 ON T1.Statement_ID = T2.Statement_ID;
SELECT T1.Statement_ID, T2.Statement_Details, T1.Account_Details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.Statement_ID = T2.Statement_ID
SELECT T1.Statement_ID, T2.Statement_Details, T2.Account_Details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.Statement_ID = T2.Statement_ID
SELECT Class FROM captain GROUP BY Class HAVING COUNT(*) > 2
SELECT Class FROM captain GROUP BY Class HAVING COUNT(*) > 2
SELECT Class FROM captain GROUP BY Class HAVING COUNT(*) > 2
SELECT Class, COUNT(*) FROM captain GROUP BY Class HAVING COUNT(*) > 2
SELECT Class FROM captain GROUP BY Class HAVING COUNT(*) > 2
SELECT Name, Home_city, Age FROM driver
SELECT Name, Home_city, Age FROM driver 
SELECT Name, Home_city, Age FROM driver
SELECT Name, Home_city, Age FROM driver 
SELECT Name, Home_city, Age FROM driver
SELECT count(*) FROM Courses
SELECT count(*) FROM Courses 
SELECT count(*) FROM Courses
SELECT count(*) FROM Courses
SELECT count(*) FROM Courses;
SELECT AllergyType FROM Allergy_Type
SELECT DISTINCT AllergyType FROM Allergy_Type
SELECT AllergyType FROM Allergy_Type
SELECT DISTINCT AllergyType FROM Allergy_Type
SELECT DISTINCT AllergyType FROM Allergy_Type
SELECT name, salary FROM employee ORDER BY salary;
SELECT name, salary FROM employee ORDER BY salary;
SELECT name, salary FROM employee ORDER BY salary ASC
SELECT name, salary FROM employee ORDER BY salary
SELECT name, salary FROM employee ORDER BY salary
SELECT * FROM departments WHERE department_name = 'Marketing'
SELECT * FROM departments WHERE department_name = 'Marketing'
SELECT * FROM departments WHERE department_name = 'Marketing';
SELECT * FROM departments WHERE department_name = 'Marketing'
SELECT * FROM departments WHERE DEPARTMENT_NAME = 'Marketing';
SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)
SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)
SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)
SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)
SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE "%Al%"
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE "%Al%"
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE "%Al%"
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT contestant_name FROM contestants WHERE contestant_name LIKE "%Al%"
SELECT DISTINCT Position FROM pilot WHERE Age > 30
SELECT DISTINCT Position FROM pilot WHERE Age > 30
SELECT DISTINCT Pilot_name FROM pilot WHERE Age > 30
SELECT DISTINCT Position FROM pilot WHERE Age > 30
SELECT DISTINCT Position FROM pilot WHERE Age > 30
SELECT count(DISTINCT AllergyType) FROM Allergy_Type
SELECT count(DISTINCT Allergy) FROM Allergy_Type
SELECT count(DISTINCT AllergyType) FROM Allergy_Type
SELECT count(DISTINCT AllergyType) FROM Allergy_Type
SELECT count(DISTINCT AllergyType) FROM Allergy_Type;
SELECT DISTINCT Home_city FROM driver 
SELECT DISTINCT Home_city FROM driver
SELECT DISTINCT Home_city FROM driver
SELECT DISTINCT Home_city FROM driver
SELECT DISTINCT Home_city FROM driver 
SELECT destination, COUNT(*) FROM flight GROUP BY destination;
SELECT destination, COUNT(*) FROM flight GROUP BY destination
SELECT destination, count(*) FROM flight GROUP BY destination;
SELECT destination, COUNT(*) FROM flight GROUP BY destination
SELECT destination, COUNT(*) FROM flight GROUP BY destination
SELECT Party, COUNT(*) FROM driver GROUP BY Party
SELECT Party, COUNT(*) FROM driver GROUP BY Party
SELECT Party, COUNT(*) FROM driver GROUP BY Party
SELECT Party, COUNT(*) FROM driver GROUP BY Party
SELECT Party, COUNT(*) FROM driver GROUP BY Party
SELECT Lname FROM Faculty WHERE Building = "Barton" ORDER BY Lname;
SELECT Lname FROM Faculty WHERE Building = "Barton" ORDER BY Lname;
SELECT Lname FROM Faculty WHERE Building = 'Barton' ORDER BY Lname ASC;
SELECT Lname FROM Faculty WHERE Building = "Barton" ORDER BY Lname;
SELECT Lname FROM Faculty WHERE Building = 'Barton' ORDER BY Lname;
SELECT name, city, country FROM airports ORDER BY x DESC LIMIT 1
SELECT name, city, country FROM airports ORDER BY elevation DESC LIMIT 1
SELECT name, city, country FROM airports ORDER BY elevation DESC LIMIT 1;
SELECT name, city, country FROM airports ORDER BY elevation DESC LIMIT 1
SELECT name, city, country FROM airports WHERE elevation = (SELECT MAX(elevation) FROM airports)
SELECT School, Location FROM university WHERE Affiliation = 'Public'
SELECT School, Location FROM university WHERE Affiliation = 'Public'
SELECT School, Location FROM university WHERE Affiliation = "Public"
SELECT School, Location FROM university WHERE Affiliation = 'Public'
SELECT School, Location FROM university WHERE Affiliation = 'Public'
SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1;
SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T1.Area ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Type, COUNT(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T2.Type
SELECT T2.Type, COUNT(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T2.Type
SELECT Type , COUNT(*) FROM school_bus AS sb JOIN school AS s ON sb.School_ID = s.School_ID GROUP BY s.Type
SELECT T2.Type, COUNT(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T2.Type;
SELECT T2.Type, COUNT(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T2.Type
SELECT max(elevation) FROM airports WHERE country = 'Iceland'
SELECT max(elevation) FROM airports WHERE country = 'Iceland'
SELECT MAX(elevation) FROM airports WHERE country = 'Iceland'
SELECT max(elevation) FROM airports WHERE country = 'Iceland'
SELECT MAX(elevation) FROM airports WHERE country = 'Iceland'
SELECT salary, manager_id FROM employees WHERE manager_id IS NOT NULL;
SELECT salary, manager_id FROM employees WHERE manager_id IS NOT NULL;
SELECT salary, manager_id FROM employees WHERE manager_id IS NOT NULL
SELECT SALARY, MANAGER_ID FROM employees WHERE MANAGER_ID IS NOT NULL;
SELECT salary, manager_id FROM employees WHERE manager_id IS NOT NULL
SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = "Clara")
SELECT e.first_name, e.last_name, e.hire_date FROM employees e WHERE e.department_id IN (SELECT department_id FROM employees WHERE first_name = 'Clara');
SELECT e.FIRST_NAME, e.LAST_NAME, e.HIRE_DATE FROM employees e JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID WHERE d.DEPARTMENT_NAME = 'Clara';
SELECT T1.FIRST_NAME, T1.LAST_NAME, T1.HIRE_DATE FROM EMPLOYEES AS T1 JOIN DEPARTMENTS AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID WHERE T2.DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Clara')
SELECT T2.first_name, T2.last_name, T2.hire_date FROM employees AS T1 JOIN employees AS T2 ON T1.department_id = T2.department_id WHERE T1.first_name = 'Clara'
SELECT Open_Date, Open_Year FROM shop WHERE Shop_Name = "Apple"
SELECT Open_Date, Open_Year FROM shop WHERE Shop_Name = "Apple"
SELECT Open_Date, Open_Year FROM shop WHERE Shop_Name = "Apple"
SELECT Open_Year, Open_Date FROM shop WHERE Shop_Name = "Apple"
SELECT Open_Date, Open_Year FROM shop WHERE Shop_Name = "Apple"
SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2
SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2
SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2
SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*) >= 2
SELECT T1.StuID FROM Has_allergy AS T1 GROUP BY T1.StuID HAVING COUNT(DISTINCT T1.Allergy) >= 2
SELECT min(Crime_rate) , max(Crime_rate) FROM county_public_safety
SELECT min(Crime_rate) , max(Crime_rate) FROM county_public_safety
SELECT min(Crime_rate) , max(Crime_rate) FROM county_public_safety
SELECT min(Crime_rate) , max(Crime_rate) FROM county_public_safety
SELECT County_ID, Name, MIN(Crime_rate) AS Least_Severe_Crime_Rate, MAX(Crime_rate) AS Most_Severe_Crime_Rate FROM county_public_safety GROUP BY County_ID, Name;
SELECT count(*) FROM Customers WHERE customer_type_code = ( SELECT customer_type_code FROM Customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1 )
SELECT count(*) FROM Customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1
SELECT SUM(count) FROM (SELECT count(*) as count FROM Customers GROUP BY customer_type_code ORDER BY count DESC LIMIT 1) as highest_count;
SELECT count(*) FROM Customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1
SELECT customer_type_code, COUNT(*) FROM Customers GROUP BY customer_type_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)
SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)
SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)
SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)
SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)
SELECT Name, Score FROM wine;
SELECT Name, Score FROM wine
SELECT Name, Score FROM wine
SELECT Name, Score FROM wine
SELECT Name, Score FROM wine;
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway';
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'
SELECT Team FROM player ORDER BY Age DESC LIMIT 1
SELECT Team FROM player ORDER BY Age DESC LIMIT 1
SELECT Team FROM player WHERE Age = (SELECT MAX(Age) FROM player)
SELECT Team FROM player ORDER BY Age DESC LIMIT 1
SELECT Team FROM player ORDER BY Age DESC LIMIT 1;
SELECT login_name, family_name FROM Course_Authors_and_Tutors;
SELECT login_name, family_name FROM Course_Authors_and_Tutors;
SELECT login_name, family_name FROM Course_Authors_and_Tutors;
SELECT login_name, family_name FROM Course_Authors_and_Tutors
SELECT login_name, family_name FROM Course_Authors_and_Tutors
SELECT max(Price) , max(Score) FROM wine WHERE Appelation = "St. Helena"
SELECT max(Price) , max(Score) FROM wine WHERE Appelation = "St. Helena"
SELECT max(Price), max(Score) FROM wine WHERE Appelation = 'St. Helena'
SELECT MAX(Price), MAX(Score) FROM wine WHERE Appelation = "St. Helena"
SELECT max(Price) , max(Score) FROM wine WHERE Appelation = "St. Helena"
SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students;
SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students
SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students
SELECT login_name FROM Course_Authors_and_Tutors WHERE login_name IN (SELECT login_name FROM Students)
SELECT login_name FROM Course_Authors_and_Tutors WHERE login_name IN (SELECT login_name FROM Students)
SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000
SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000
SELECT PHONE_NUMBER FROM employees WHERE SALARY BETWEEN 8000 AND 12000
SELECT PHONE_NUMBER FROM employees WHERE SALARY BETWEEN 8000 AND 12000
SELECT PHONE_NUMBER FROM employees WHERE SALARY BETWEEN 8000 AND 12000;
SELECT Denomination, COUNT(*) FROM school GROUP BY Denomination
SELECT Denomination, COUNT(*) FROM school GROUP BY Denomination
SELECT Denomination, COUNT(*) FROM school GROUP BY Denomination
SELECT Denomination, COUNT(*) FROM school GROUP BY Denomination
SELECT Denomination, COUNT(*) FROM school GROUP BY Denomination
SELECT vote_id, phone_number, state FROM VOTES;
SELECT vote_id, phone_number, state FROM VOTES
SELECT vote_id, phone_number, state FROM VOTES
SELECT vote_id, phone_number, state FROM VOTES
SELECT vote_id, phone_number, state FROM VOTES
SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1
SELECT Age FROM editor GROUP BY Age ORDER BY count(*) DESC LIMIT 1
SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1
SELECT Age FROM editor GROUP BY Age ORDER BY count(*) DESC LIMIT 1
SELECT AVG(Age) AS Predominant_Age FROM editor
SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1
SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1
SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1
SELECT Name FROM county_public_safety WHERE Population = (SELECT MAX(Population) FROM county_public_safety)
SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1
SELECT date_of_latest_logon FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"
SELECT date_of_latest_logon FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"
SELECT MAX(date_of_latest_logon) FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"
SELECT date_of_latest_logon FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"
SELECT date_of_latest_logon FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"
SELECT Grape, Appelation, Name FROM wine WHERE Score > 93 ORDER BY Name;
SELECT Grape, Appelation, Name FROM wine WHERE Score > 93 ORDER BY Name;
SELECT Grape, Appelation, Name FROM wine WHERE Score > 93 ORDER BY Name
SELECT Grape, Appelation, Name FROM wine WHERE Score > 93 ORDER BY Name
SELECT W.Name, G.Grape, A.Appelation FROM wine AS W JOIN grapes AS G ON W.Grape = G.Grape JOIN appellations AS A ON W.Appelation = A.Appelation WHERE W.Score > 93 ORDER BY W.Name;
SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2;
SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2;
SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2
SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2
SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2
SELECT DName FROM Department WHERE Building = "Mergenthaler"
SELECT DName FROM Department WHERE Building = "Mergenthaler";
SELECT DName FROM Department WHERE Building = "Mergenthaler"
SELECT DName FROM Department WHERE Building = "Mergenthaler"
SELECT DName FROM Department WHERE Building = "Mergenthaler"
SELECT Name FROM city ORDER BY Name ASC
SELECT Name FROM city ORDER BY Name ASC
SELECT Name FROM city ORDER BY Name ASC
SELECT Name FROM city ORDER BY Name ASC
SELECT Name FROM city ORDER BY Name ASC
SELECT T1.statement_id, T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1
SELECT Statement_ID, Statement_Details FROM Statements WHERE Statement_ID IN (SELECT Statement_ID FROM Accounts GROUP BY Statement_ID ORDER BY COUNT(*) DESC LIMIT 1)
SELECT T1.Statement_ID, T2.Statement_Details FROM Statements AS T1 JOIN Accounts AS T2 ON T1.Statement_ID = T2.Statement_ID GROUP BY T1.Statement_ID ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Statement_ID, T1.Statement_Details FROM Statements AS T1 JOIN Accounts AS T2 ON T1.Statement_ID = T2.Statement_ID GROUP BY T1.Statement_ID ORDER BY COUNT(*) DESC LIMIT 1
SELECT Account_ID, Account_Details FROM Accounts
SELECT Account_ID, Account_Details FROM Accounts
SELECT Account_ID, Account_Details FROM Accounts;
SELECT Account_ID, Account_Details FROM Accounts
SELECT Account_ID, Account_Details FROM Accounts
SELECT count(*) FROM Course
SELECT count(*) FROM Course
SELECT count(*) FROM Course
SELECT count(*) FROM Course
SELECT count(*) FROM Course
SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality
SELECT Nationality, COUNT(*) FROM pilot GROUP BY Nationality
SELECT Nationality, COUNT(*) FROM pilot GROUP BY Nationality
SELECT Nationality, COUNT(*) FROM pilot GROUP BY Nationality
SELECT Nationality, COUNT(*) FROM pilot GROUP BY Nationality
SELECT Directed_by FROM film;
SELECT Directed_by FROM film;
SELECT DISTINCT Directed_by FROM film
SELECT directed_by FROM film
SELECT DISTINCT Directed_by FROM film
SELECT Headquarters, COUNT(*) FROM company GROUP BY Headquarters
SELECT Headquarters, COUNT(*) FROM company GROUP BY Headquarters
SELECT Headquarters, COUNT(*) FROM company GROUP BY Headquarters
SELECT Headquarters, COUNT(Company) FROM company GROUP BY Headquarters
SELECT Headquarters, COUNT(*) FROM company GROUP BY Headquarters
SELECT Name FROM climber WHERE Country != "Switzerland"
SELECT Name FROM climber WHERE Country != "Switzerland"
SELECT Name FROM climber WHERE Country != 'Switzerland'
SELECT Name FROM climber WHERE Country != 'Switzerland'
SELECT Name FROM climber WHERE Country != "Switzerland"
SELECT COUNT(DISTINCT StuID) FROM Enrolled_in WHERE Grade = "B"
SELECT COUNT(DISTINCT StuID) FROM Enrolled_in WHERE Grade = "B"
SELECT COUNT(DISTINCT StuID) FROM Enrolled_in WHERE Grade = "B"
SELECT COUNT(DISTINCT StuID) FROM Enrolled_in WHERE Grade = "B"
SELECT count(DISTINCT StuID) FROM Enrolled_in WHERE Grade = 'B'
SELECT Name FROM climber ORDER BY Points DESC
SELECT Name FROM climber ORDER BY Points DESC
SELECT Name FROM climber ORDER BY Points DESC
SELECT Name FROM climber ORDER BY Points DESC
SELECT Name FROM climber ORDER BY Points DESC
SELECT T2.Company, COUNT(*) FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Company_ID;
SELECT T2.Company, COUNT(*) FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Company_ID
SELECT T1.Company, COUNT(T2.Station_ID) AS Total_gas_stations FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Company;
SELECT T2.Company, COUNT(T1.Station_ID) FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T2.Company
SELECT T2.Company, COUNT(*) FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Company_ID, T2.Company
SELECT T2.AllergyType, COUNT(*) FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy GROUP BY T2.AllergyType;
SELECT T2.AllergyType, COUNT(*) FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy GROUP BY T2.AllergyType;
SELECT T2.AllergyType, COUNT(*) FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy GROUP BY T2.AllergyType
SELECT AllergyType, COUNT(*) FROM Has_Allergy JOIN Allergy_Type ON Has_Allergy.Allergy = Allergy_Type.Allergy GROUP BY AllergyType
SELECT T2.AllergyType, COUNT(*) FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy GROUP BY T2.AllergyType
SELECT Major FROM Student WHERE Sex = "M"
SELECT Major FROM Student WHERE Sex = 'M'
SELECT Major FROM Student WHERE Sex = 'M'
SELECT Major FROM Student WHERE Sex = "M"
SELECT Major FROM Student WHERE Sex = "M"
SELECT complaint_status_code, COUNT(*) FROM Complaints WHERE complaint_type_code = "Product Failure" GROUP BY complaint_status_code;
SELECT complaint_status_code, COUNT(*) FROM Complaints WHERE complaint_type_code = "Product Failure" GROUP BY complaint_status_code;
SELECT complaint_status_code, count(*) FROM Complaints WHERE complaint_type_code = "Product Failure" GROUP BY complaint_status_code;
SELECT complaint_status_code, count(*) FROM Complaints WHERE complaint_type_code = "Product Failure" GROUP BY complaint_status_code;
SELECT complaint_status_code, count(*) FROM Complaints WHERE complaint_type_code = "Product Failure" GROUP BY complaint_status_code
SELECT max(Enrollment) FROM university
SELECT max(Enrollment) FROM university
SELECT MAX(Enrollment) FROM university
SELECT max(Enrollment) FROM university
SELECT max(Enrollment) FROM university
SELECT Country FROM mountain WHERE Height > 5000
SELECT Country FROM mountain WHERE Height > 5000
SELECT Country FROM mountain WHERE Height > 5000;
SELECT DISTINCT Country FROM mountain WHERE Height > 5000
SELECT DISTINCT Country FROM mountain WHERE Height > 5000
SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1
SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1
SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1
SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1
SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id WHERE t3.product_price = (SELECT MIN(product_price) FROM Products)
SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.name, COUNT(*) FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid, T2.name
SELECT T2.name, count(*) FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid, T2.name
SELECT name, COUNT(*) FROM aircraft JOIN flight ON aircraft.aid = flight.aid GROUP BY name
SELECT T2.name, COUNT(*) FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid;
SELECT T2.name, count(*) FROM aircraft AS T1 JOIN flight AS T2 ON T1.aid = T2.aid GROUP BY T2.name
SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'
SELECT T1.Document_Date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Budget_Type_Code = 'GV' INTERSECT SELECT T1.Document_Date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Budget_Type_Code = 'SF'
SELECT T1.Document_Date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Budget_Type_Code = 'GV' INTERSECT SELECT T1.Document_Date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Budget_Type_Code = 'SF'
SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'
SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'
SELECT Home_city FROM driver GROUP BY Home_city ORDER BY COUNT(*) DESC LIMIT 1
SELECT Home_city FROM driver GROUP BY Home_city ORDER BY count(*) DESC LIMIT 1
SELECT Home_city FROM driver GROUP BY Home_city ORDER BY count(*) DESC LIMIT 1
SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1
SELECT Home_city FROM driver GROUP BY Home_city ORDER BY count(*) DESC LIMIT 1
SELECT advisor, COUNT(*) FROM Student GROUP BY advisor
SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor
SELECT T1.Fname, T1.LName, COUNT(T2.StuID) AS Total_Students FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.Advisor GROUP BY T1.Advisor, T1.Fname, T1.LName
SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor
SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor
SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.personal_name = "Julio"
SELECT Courses.course_name FROM Course_Authors_and_Tutors JOIN Courses ON Course_Authors_and_Tutors.author_id = Courses.author_id WHERE Course_Authors_and_Tutors.personal_name = "Julio"
SELECT Courses.course_name FROM Course_Authors_and_Tutors JOIN Courses ON Course_Authors_and_Tutors.author_id = Courses.author_id WHERE Course_Authors_and_Tutors.personal_name = "Julio"
SELECT course_name FROM Courses WHERE author_id IN (SELECT author_id FROM Course_Authors_and_Tutors WHERE personal_name = "Julio")
SELECT C.course_name FROM Courses C JOIN Course_Authors_and_Tutors CAT ON C.author_id = CAT.author_id WHERE CAT.personal_name = "Julio"
SELECT Character, Duration FROM actor
SELECT Character, Duration FROM actor
SELECT Character, Duration FROM actor
SELECT Character, Duration FROM actor
SELECT T1.Character, T1.Duration FROM actor AS T1
SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING COUNT(*) <= 3;
SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation GROUP BY T2.Appelation HAVING count(*) <= 3
SELECT County FROM appellations WHERE Appelation IN (SELECT Appelation FROM wine GROUP BY Appelation HAVING count(DISTINCT Grape) <= 3)
SELECT County FROM appellations WHERE Appelation IN (SELECT Appelation FROM wine GROUP BY Appelation HAVING COUNT(*) <= 3)
SELECT County FROM appellations JOIN wine ON appellations.Appelation = wine.Appelation GROUP BY appellations.Appelation, appellations.County HAVING COUNT(DISTINCT wine.No) <= 3
SELECT employees.first_name, departments.department_name FROM employees JOIN departments ON employees.department_id = departments.department_id;
SELECT employees.first_name, departments.department_name FROM employees JOIN departments ON employees.department_id = departments.department_id;
SELECT e.FIRST_NAME, d.DEPARTMENT_NAME FROM employees e JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID;
SELECT e.first_name, d.department_name FROM employees e JOIN departments d ON e.department_id = d.department_id;
SELECT employees.first_name, departments.department_name FROM employees JOIN departments ON employees.department_id = departments.department_id;
SELECT sum(Enrollment) as Total_Enrollment, min(Enrollment) as Min_Enrollment FROM university
SELECT sum(enrollment) , min(enrollment) FROM university
SELECT sum(Enrollment) , min(Enrollment) FROM university
SELECT School, sum(Enrollment) as Total_Enrollment, min(Enrollment) as Min_Enrollment FROM university GROUP BY School
SELECT sum(Enrollment), min(Enrollment) FROM university
SELECT T2.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid WHERE T1.name = "John Williams"
SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = "John Williams"
SELECT a.name FROM aircraft a JOIN certificate c ON a.aid = c.aid JOIN employee e ON c.eid = e.eid WHERE e.name = "John Williams"
SELECT T2.name FROM aircraft AS T2 JOIN certificate AS T1 ON T2.aid = T1.aid JOIN employee AS T3 ON T1.eid = T3.eid WHERE T3.name = 'John Williams'
SELECT T2.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid WHERE T1.name = 'John Williams'
SELECT avg(j.Sales) FROM journal j JOIN journal_committee jc ON j.Journal_ID = jc.Journal_ID JOIN editor e ON jc.Editor_ID = e.Editor_ID WHERE jc.Work_Type = 'Photo'
SELECT avg(Sales) FROM journal WHERE Journal_ID IN (SELECT Journal_ID FROM journal_committee WHERE Editor_ID IN (SELECT Editor_ID FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee WHERE Work_Type = 'Photo')))
SELECT avg(Sales) FROM journal_committee AS jc JOIN journal AS j ON jc.Journal_ID = j.Journal_ID WHERE jc.Work_Type = 'Photo'
SELECT avg(Sales) FROM journal AS J JOIN journal_committee AS JC ON J.Journal_ID = JC.Journal_ID JOIN editor AS E ON JC.Editor_ID = E.Editor_ID WHERE JC.Work_Type = 'Photo'
SELECT avg(j.Sales) FROM journal j JOIN journal_committee jc ON j.Journal_ID = jc.Journal_ID JOIN editor e ON jc.Editor_ID = e.Editor_ID WHERE e.Work_Type = 'Photo'
SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1
SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1
SELECT Range, COUNT(*) AS Peak_Count FROM mountain GROUP BY Range ORDER BY Peak_Count DESC LIMIT 1
SELECT Range FROM mountain GROUP BY Range ORDER BY count(*) DESC LIMIT 1
SELECT Range FROM mountain GROUP BY Range ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM editor WHERE Age = 24 OR Age = 25
SELECT Name FROM editor WHERE Age = 24 OR Age = 25
SELECT Name FROM editor WHERE Age = 24 OR Age = 25
SELECT Name FROM editor WHERE Age = 24 OR Age = 25
SELECT Name FROM editor WHERE Age = 24 OR Age = 25
SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain)
SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain)
SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM captain)
SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain)
SELECT Name, Type FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain)
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY count(*) DESC LIMIT 1
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY count(*) DESC LIMIT 1
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1
SELECT max(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast') AND Year < 2005
SELECT max(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast') AND Year < 2005;
SELECT max(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast') AND Year < 2005
SELECT MAX(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'Central Coast') AND Year < 2005;
SELECT MAX(Price) FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = "Central Coast") AND Year < 2005
SELECT DISTINCT Grape FROM grapes WHERE Color = 'White' AND Grape IN (SELECT Grape FROM wine WHERE Score > 90)
SELECT DISTINCT Grape FROM grapes JOIN wine ON grapes.Grape = wine.Grape WHERE grapes.Color = "White" AND wine.Score > 90
SELECT T1.Grape FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape WHERE T2.Score > 90 AND T1.Color = "White"
SELECT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "White" AND T2.Score > 90
SELECT Grape FROM grapes WHERE Color = "White" AND Grape IN (SELECT Grape FROM wine WHERE Score > 90)
SELECT flno FROM flight WHERE distance > 2000;
SELECT flno FROM flight WHERE distance > 2000
SELECT flno FROM flight WHERE distance > 2000
SELECT flno FROM flight WHERE distance > 2000
SELECT flno FROM flight WHERE distance > 2000
SELECT first_name, last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163)
SELECT first_name, last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163)
SELECT first_name, last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163)
SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS full_name FROM employees WHERE SALARY > (SELECT SALARY FROM employees WHERE EMPLOYEE_ID = 163)
SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS Employee_Name FROM employees WHERE SALARY > (SELECT SALARY FROM employees WHERE EMPLOYEE_ID = 163)
SELECT Team FROM player ORDER BY Team ASC;
SELECT Player, Team FROM player ORDER BY Team ASC
SELECT Team FROM player ORDER BY Team ASC
SELECT Team FROM player ORDER BY Team ASC
SELECT Team FROM player ORDER BY Team ASC
SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1
SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1
SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1
SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1
SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1
SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'North Coast')
SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'North Coast');
SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'North Coast')
SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = "North Coast")
SELECT DISTINCT Name FROM wine WHERE Appelation IN (SELECT Appelation FROM appellations WHERE Area = 'North Coast')
SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment;
SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment
SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment
SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment
SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment;
SELECT Fname FROM Student ORDER BY Age DESC;
SELECT Fname FROM Student ORDER BY Age DESC 
SELECT Fname FROM Student ORDER BY Age DESC
SELECT Fname FROM Student ORDER BY Age DESC
SELECT Fname FROM Student ORDER BY Age DESC
SELECT T2.department_name , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name;
SELECT department_name, COUNT(*) FROM employees AS e JOIN departments AS d ON e.department_id = d.department_id GROUP BY department_name;
SELECT T2.DEPARTMENT_NAME, COUNT(T1.EMPLOYEE_ID) FROM EMPLOYEES AS T1 JOIN DEPARTMENTS AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T2.DEPARTMENT_NAME;
SELECT T2.DEPARTMENT_NAME, COUNT(T1.EMPLOYEE_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T1.DEPARTMENT_ID;
SELECT T2.DEPARTMENT_NAME, COUNT(*) FROM EMPLOYEES AS T1 JOIN DEPARTMENTS AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T2.DEPARTMENT_NAME
SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1
SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1
SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1
SELECT Color FROM grapes WHERE Grape IN ( SELECT Grape FROM wine GROUP BY Grape HAVING AVG(Price) = ( SELECT MAX(avg_price) FROM ( SELECT AVG(Price) as avg_price FROM wine GROUP BY Grape ) ) )
SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1
SELECT count(*) FROM employee WHERE salary BETWEEN 100000 AND 200000
SELECT count(*) FROM employee WHERE salary BETWEEN 100000 AND 200000
SELECT COUNT(*) FROM employee WHERE salary BETWEEN 100000 AND 200000
SELECT count(*) FROM employee WHERE salary BETWEEN 100000 AND 200000
SELECT count(*) FROM employee WHERE salary BETWEEN 100000 AND 200000
SELECT COUNT(*) FROM Students WHERE personal_name LIKE "%son%"
SELECT COUNT(*) FROM Students WHERE personal_name LIKE "%son%"
SELECT COUNT(*) FROM Students WHERE personal_name LIKE "%son%"
SELECT COUNT(*) FROM Students WHERE personal_name LIKE "%son%"
SELECT COUNT(*) FROM Students WHERE personal_name LIKE "%son%"
SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1
SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1
SELECT T1.last_name FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id ORDER BY T2.date_complaint_raised LIMIT 1
SELECT T1.last_name FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id ORDER BY T2.date_complaint_raised ASC LIMIT 1
SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised ASC LIMIT 1
SELECT Document_Type_Code, COUNT(*) FROM Documents GROUP BY Document_Type_Code
SELECT Document_Type_Code, COUNT(*) FROM Documents GROUP BY Document_Type_Code
SELECT Document_Type_Code, COUNT(*) FROM Documents GROUP BY Document_Type_Code
SELECT Document_Type_Code, COUNT(*) FROM Documents GROUP BY Document_Type_Code
SELECT Document_Type_Code, COUNT(*) FROM Documents GROUP BY Document_Type_Code
SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) > 1
SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) > 1
SELECT Location FROM cinema WHERE Capacity > 300 AND Location IN (SELECT Location FROM cinema GROUP BY Location HAVING COUNT(*) > 1)
SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING count(*) >= 2;
SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) > 1;
SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport';
SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport';
SELECT count(*) FROM routes WHERE dst_ap = 'JFK'
SELECT count(*) FROM routes JOIN airports ON routes.dst_apid = airports.apid WHERE airports.name = 'John F Kennedy International Airport';
SELECT count(*) FROM routes WHERE dst_ap = 'JFK'
SELECT count(*) FROM VOTES WHERE state = 'NY' OR state = 'CA'
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT count(*) FROM VOTES WHERE state IN ('NY', 'CA')
SELECT count(*) FROM VOTES WHERE state IN ('NY', 'CA')
SELECT contestant_name, COUNT(*) AS vote_tally FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state WHERE AREA_CODE_STATE.state IN ('NY', 'CA') GROUP BY contestant_name;
SELECT avg(capacity) , min(capacity) , max(capacity) FROM cinema WHERE openning_year >= 2011
SELECT avg(capacity), min(capacity), max(capacity) FROM cinema WHERE Openning_year >= 2011
SELECT avg(capacity), min(capacity), max(capacity) FROM cinema WHERE Openning_year >= 2011
SELECT avg(capacity) , min(capacity) , max(capacity) FROM cinema WHERE Openning_year >= 2011
SELECT avg(capacity), min(capacity), max(capacity) FROM cinema WHERE Openning_year >= 2011
SELECT * FROM employees WHERE hire_date < '2002-06-21'
SELECT * FROM employees WHERE hire_date < '2002-06-21'
SELECT * FROM employees WHERE HIRE_DATE < '2002-06-21'
SELECT * FROM employees WHERE hire_date < '2002-06-21'
SELECT * FROM employees WHERE HIRE_DATE < '2002-06-21';
SELECT document_id FROM Documents WHERE document_id NOT IN (SELECT document_id FROM Documents_with_expenses)
SELECT Document_ID FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)
SELECT Document_ID FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)
SELECT document_id FROM Documents WHERE document_id NOT IN (SELECT document_id FROM Documents_with_Expenses)
SELECT Document_ID FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)
SELECT Name FROM driver WHERE Home_city = 'Hartford' AND Age < 40;
SELECT Name FROM driver WHERE Home_city = 'Hartford' AND Age < 40
SELECT Name FROM driver WHERE Home_city = 'Hartford' AND Age < 40
SELECT Name FROM driver WHERE Age < 40 AND Home_city = 'Hartford'
SELECT Name FROM driver WHERE Age < 40 AND Home_city = "Hartford"
SELECT Name FROM wine WHERE Year = 2008;
SELECT Name FROM wine WHERE Year = 2008
SELECT Name FROM wine WHERE Year = 2008;
SELECT Name FROM wine WHERE Year = 2008
SELECT Name FROM wine WHERE Year = 2008
SELECT count(*) FROM aircraft WHERE distance BETWEEN 1000 AND 5000
SELECT count(*) FROM aircraft WHERE distance BETWEEN 1000 AND 5000
SELECT count(*) FROM aircraft WHERE distance BETWEEN 1000 AND 5000
SELECT count(*) FROM aircraft WHERE distance BETWEEN 1000 AND 5000
SELECT count(*) FROM aircraft WHERE distance BETWEEN 1000 AND 5000
SELECT name FROM employee ORDER BY salary LIMIT 3;
SELECT name FROM employee ORDER BY salary ASC LIMIT 3
SELECT name FROM employee ORDER BY salary LIMIT 3
SELECT name FROM employee ORDER BY salary ASC LIMIT 3
SELECT name FROM employee ORDER BY salary LIMIT 3
SELECT Rank FROM captain WHERE Class = 'Cutter' INTERSECT SELECT Rank FROM captain WHERE Class = 'Armed schooner'
SELECT Rank FROM captain WHERE Class = 'Cutter' INTERSECT SELECT Rank FROM captain WHERE Class = 'Armed schooner'
SELECT T1.Rank FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Type = 'Cutter' INTERSECT SELECT T1.Rank FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Type = 'Armed schooner'
SELECT Rank FROM captain WHERE Class = "Cutter" OR Class = "Armed schooner"
SELECT T1.Rank FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Type = "Cutter" INTERSECT SELECT T1.Rank FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Type = "Armed schooner"
SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)
SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)
SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)
SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)
SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)
SELECT DName FROM Department WHERE (Division = "AS" OR Division = "EN") AND Building = "NEB"
SELECT DName FROM Department WHERE Division = "AS" UNION SELECT DName FROM Department WHERE Division = "EN" AND Building = "NEB"
SELECT DName FROM Department WHERE (Division = 'AS' OR Division = 'EN') AND Building = 'NEB'
SELECT DName FROM Department WHERE Division = 'AS' OR (Division = 'EN' AND Building = 'NEB')
SELECT DName FROM Department WHERE Division = "AS" OR (Division = "EN" AND Building = "NEB")
SELECT min(Market_Value), max(Market_Value), avg(Market_Value) FROM company
SELECT Company, min(Market_Value), max(Market_Value), avg(Market_Value) FROM company GROUP BY Company
SELECT MIN(Market_Value), MAX(Market_Value), AVG(Market_Value) FROM company
SELECT min(Market_Value) , max(Market_Value) , avg(Market_Value) FROM company
SELECT Company, min(Market_Value), max(Market_Value), avg(Market_Value) FROM company GROUP BY Company
SELECT CName FROM Course WHERE Days = "MTW"
SELECT CName FROM Course WHERE Days = "MTW"
SELECT CName FROM Course WHERE Days IN ('Mon', 'Tue', 'Wed');
SELECT CName FROM Course WHERE Days = "MTW"
SELECT CName FROM Course WHERE Days IN ('Mon', 'Tue', 'Wed')
SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(*) < 3;
SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(*) < 3
SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(Document_ID) < 3
SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(*) < 3
SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code HAVING COUNT(Document_ID) < 3
SELECT Starting_Year FROM technician WHERE Team = "CLE" INTERSECT SELECT Starting_Year FROM technician WHERE Team = "CWS"
SELECT Starting_Year FROM technician WHERE Team = "CLE" OR Team = "CWS"
SELECT Starting_Year FROM technician WHERE Team = "CLE" INTERSECT SELECT Starting_Year FROM technician WHERE Team = "CWS"
SELECT Starting_Year FROM technician WHERE Team = 'CLE' INTERSECT SELECT Starting_Year FROM technician WHERE Team = 'CWS'
SELECT Starting_Year FROM technician WHERE Team = "CLE" INTERSECT SELECT Starting_Year FROM technician WHERE Team = "CWS"
SELECT company, main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)
SELECT company, main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)
SELECT Company, Main_Industry FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company)
SELECT Company, Main_Industry FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company)
SELECT Company, Main_Industry FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company)
SELECT city FROM airports GROUP BY city HAVING count(*) > 2 ORDER BY count(*)
SELECT city FROM airports GROUP BY city HAVING count(*) > 2 ORDER BY count(*)
SELECT city, COUNT(*) AS num_airports FROM airports GROUP BY city HAVING COUNT(*) > 2 ORDER BY num_airports DESC;
SELECT city, COUNT(*) AS airport_count FROM airports GROUP BY city HAVING COUNT(*) > 2 ORDER BY airport_count;
SELECT city, COUNT(*) AS total_airports FROM airports GROUP BY city HAVING COUNT(*) > 2 ORDER BY total_airports;
SELECT count(DISTINCT Advisor) FROM Student
SELECT count(*) FROM advisor
SELECT COUNT(DISTINCT Advisor) FROM Student
SELECT COUNT(DISTINCT Advisor) FROM Student
SELECT count(DISTINCT Advisor) FROM Student
SELECT name, city, country FROM airports ORDER BY elevation LIMIT 1;
SELECT name, city, country FROM airports ORDER BY elevation LIMIT 1;
SELECT name, city, country FROM airports ORDER BY elevation LIMIT 1
SELECT name, city, country FROM airports ORDER BY elevation ASC LIMIT 1
SELECT name, city, country FROM airports ORDER BY elevation ASC LIMIT 1
SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID
SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID
SELECT Name, COUNT(Actor_ID) FROM musical JOIN actor ON musical.Musical_ID = actor.Musical_ID GROUP BY Name
SELECT T1.Name, COUNT(*) FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID
SELECT T1.Name, COUNT(T2.Actor_ID) FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Name
SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90
SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90;
SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90
SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90
SELECT T1.Crime_rate FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID WHERE T2.White > 90
SELECT name FROM aircraft ORDER BY distance LIMIT 3
SELECT name FROM aircraft ORDER BY distance LIMIT 3
SELECT name FROM aircraft ORDER BY distance ASC LIMIT 3
SELECT name FROM aircraft ORDER BY distance ASC LIMIT 3
SELECT name FROM aircraft ORDER BY distance LIMIT 3
SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC
SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC
SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC
SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers
SELECT Name, Crime_rate FROM county_public_safety ORDER BY Police_officers ASC
SELECT Station_ID, Location, Manager_Name FROM gas_station ORDER BY Open_Year;
SELECT Station_ID, Location, Manager_Name FROM gas_station ORDER BY Open_Year;
SELECT Station_ID, Location, Manager_Name FROM gas_station ORDER BY Open_Year
SELECT Station_ID, Location, Manager_Name FROM gas_station ORDER BY Open_Year;
SELECT Station_ID, Location, Manager_Name FROM gas_station ORDER BY Open_Year
SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000
SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000
SELECT JOB_ID FROM employees GROUP BY JOB_ID HAVING AVG(SALARY) > 8000
SELECT JOB_ID FROM employees GROUP BY JOB_ID HAVING AVG(SALARY) > 8000
SELECT JOB_ID FROM employees GROUP BY JOB_ID HAVING AVG(SALARY) > 8000;
SELECT Main_Industry, COUNT(DISTINCT Company_ID) AS Number_of_Companies FROM company GROUP BY Main_Industry ORDER BY SUM(Market_Value) DESC LIMIT 1
SELECT main_industry, COUNT(*) FROM company WHERE main_industry = (SELECT main_industry FROM company GROUP BY main_industry ORDER BY SUM(market_value) DESC LIMIT 1) GROUP BY main_industry;
SELECT Main_Industry, COUNT(DISTINCT Company_ID) AS Num_Companies FROM company GROUP BY Main_Industry ORDER BY SUM(Market_Value) DESC LIMIT 1
SELECT Main_Industry, COUNT(Company_ID) AS Total_Companies FROM company GROUP BY Main_Industry ORDER BY Market_Value DESC LIMIT 1;
SELECT Main_Industry, COUNT(*) FROM company GROUP BY Main_Industry ORDER BY SUM(Market_Value) DESC LIMIT 1;
SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1
SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1
SELECT T1.name, T1.salary FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.name, T1.salary FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.name, T1.salary FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC;
SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC
SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC
SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC
SELECT Name FROM actor JOIN musical ON actor.Musical_ID = musical.Musical_ID ORDER BY musical.Year DESC
SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*) > 1;
SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*) > 1;
SELECT Location FROM school WHERE School_ID IN (SELECT School_ID FROM player GROUP BY School_ID HAVING COUNT(*) > 1)
SELECT s.Location FROM school s JOIN player p ON s.School_ID = p.School_ID GROUP BY s.School_ID HAVING COUNT(p.Player_ID) > 1
SELECT Location FROM school WHERE School_ID IN (SELECT School_ID FROM player GROUP BY School_ID HAVING COUNT(*) > 1)
SELECT T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID WHERE T2.Document_Name = "King Book"
SELECT T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID WHERE T2.Document_Name = 'King Book'
SELECT Project_Details FROM Projects JOIN Documents ON Projects.Project_ID = Documents.Project_ID WHERE Document_Name = "King Book"
SELECT T2.Project_Details FROM Documents AS T1 JOIN Projects AS T2 ON T1.Project_ID = T2.Project_ID WHERE T1.Document_Name = "King Book"
SELECT T1.Project_Details FROM Projects AS T1 JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID WHERE T2.Document_Name = "King Book"
SELECT title, directed_by FROM film;
SELECT title, directed_by FROM film
SELECT Title, Directed_by FROM film;
SELECT Title, Directed_by FROM film
SELECT Title, Directed_by FROM film
SELECT MAX(ACC_Percent) FROM basketball_match 
SELECT ACC_Percent FROM basketball_match ORDER BY ACC_Percent DESC LIMIT 1
SELECT MAX(ACC_Percent) FROM basketball_match
SELECT MAX(ACC_Percent) FROM basketball_match
SELECT MAX(ACC_Percent) FROM basketball_match
SELECT DISTINCT Name FROM climber JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID WHERE climber.Country = "West Germany"
SELECT DISTINCT Name FROM climber JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID WHERE climber.Country = "West Germany"
SELECT DISTINCT Name FROM mountain WHERE Mountain_ID IN (SELECT Mountain_ID FROM climber WHERE Country = 'West Germany')
SELECT DISTINCT m.Name FROM mountain m JOIN climber c ON m.Mountain_ID = c.Mountain_ID WHERE c.Country = 'West Germany'
SELECT DISTINCT m.Name FROM mountain AS m JOIN climber AS c ON m.Mountain_ID = c.Mountain_ID WHERE c.Country = "West Germany"
SELECT CName FROM Course ORDER BY Credits;
SELECT CName FROM Course ORDER BY Credits;
SELECT CName FROM Course ORDER BY Credits ASC;
SELECT CName FROM Course ORDER BY Credits
SELECT CName FROM Course ORDER BY Credits
SELECT COUNT(*), country FROM airports GROUP BY country ORDER BY COUNT(*) DESC;
SELECT count(*) , country FROM airports GROUP BY country ORDER BY count(*) DESC
SELECT country, COUNT(*) FROM airports GROUP BY country ORDER BY COUNT(*) DESC
SELECT country, COUNT(*) AS num_airports FROM airports GROUP BY country ORDER BY num_airports DESC;
SELECT country, COUNT(*) AS num_airports FROM airports GROUP BY country ORDER BY num_airports DESC;
SELECT count(*) FROM flight 
SELECT count(*) FROM flight
SELECT count(*) FROM flight
SELECT count(*) FROM flight
SELECT count(*) FROM flight
SELECT Fname FROM Student WHERE Age > 22
SELECT Fname FROM Student WHERE Age > 22;
SELECT Fname FROM Student WHERE Age > 22
SELECT Fname FROM Student WHERE Age > 22
SELECT Fname FROM Student WHERE Age > 22
SELECT count(DISTINCT Rank) FROM captain
SELECT count(DISTINCT Rank) FROM captain
SELECT COUNT(DISTINCT Rank) FROM captain
SELECT count(DISTINCT Rank) FROM captain
SELECT Rank, COUNT(*) FROM captain GROUP BY Rank
SELECT count(*) FROM cinema
SELECT count(*) FROM cinema
SELECT count(*) FROM cinema
SELECT count(*) FROM cinema
SELECT count(*) FROM cinema
SELECT last_name FROM Staff WHERE email_address LIKE "%wrau%"
SELECT last_name FROM Staff WHERE email_address LIKE "%wrau%"
SELECT last_name FROM Staff WHERE email_address LIKE "%wrau%"
SELECT last_name FROM Staff WHERE email_address LIKE "%wrau%"
SELECT last_name FROM Staff WHERE email_address LIKE "%wrau%"
SELECT avg(product_price) , product_category_code FROM products GROUP BY product_category_code
SELECT avg(product_price) , product_category_code FROM Products GROUP BY product_category_code
SELECT avg(product_price), product_category_code FROM Products GROUP BY product_category_code
SELECT avg(product_price), product_category_code FROM Products GROUP BY product_category_code
SELECT avg(product_price) , product_category_code FROM Products GROUP BY product_category_code
SELECT Location FROM shop WHERE Open_Year > 2012 INTERSECT SELECT Location FROM shop WHERE Open_Year < 2008
SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008
SELECT Location FROM shop WHERE Shop_ID IN (SELECT Shop_ID FROM stock WHERE Device_ID IN (SELECT Device_ID FROM device WHERE Open_Year > 2012)) INTERSECT SELECT Location FROM shop WHERE Shop_ID IN (SELECT Shop_ID FROM stock WHERE Device_ID IN (SELECT Device_ID FROM device WHERE Open_Year < 2008))
SELECT Location FROM shop WHERE Open_Year > 2012 INTERSECT SELECT Location FROM shop WHERE Open_Year < 2008
SELECT Location FROM shop WHERE Open_Year > 2012 UNION SELECT Location FROM shop WHERE Open_Year < 2008
SELECT city FROM airports WHERE country = 'United States' GROUP BY city HAVING count(*) > 3;
SELECT city FROM airports WHERE country = 'United States' GROUP BY city HAVING count(*) > 3
SELECT city FROM airports WHERE country = "United States" GROUP BY city HAVING COUNT(*) > 3;
SELECT city, COUNT(*) FROM airports WHERE country = 'US' GROUP BY city HAVING COUNT(*) > 3;
SELECT COUNT(DISTINCT city) FROM airports WHERE country = 'United States' GROUP BY city HAVING COUNT(*) > 3
SELECT DISTINCT Name FROM wine ORDER BY Price;
SELECT Name FROM wine ORDER BY Price ASC
SELECT DISTINCT Name FROM wine ORDER BY Price ASC
SELECT Name FROM wine ORDER BY Price;
SELECT DISTINCT Name FROM wine ORDER BY Price ASC
SELECT Major FROM Student GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Major FROM Student GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1
SELECT T3.Major FROM Student AS T1 JOIN Major AS T2 ON T1.Major = T2.MajorID GROUP BY T3.Major ORDER BY COUNT(*) DESC LIMIT 1
SELECT Major FROM Student GROUP BY Major ORDER BY count(*) DESC LIMIT 1
SELECT Major FROM Student GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1 
SELECT Character FROM actor ORDER BY age DESC
SELECT Character FROM actor ORDER BY age DESC
SELECT Character FROM actor ORDER BY age DESC
SELECT Character FROM actor ORDER BY age DESC
SELECT Character FROM actor ORDER BY age DESC
SELECT Country, COUNT(*) FROM climber GROUP BY Country
SELECT Country, COUNT(*) FROM climber GROUP BY Country
SELECT Country, COUNT(*) FROM climber GROUP BY Country
SELECT Country, COUNT(*) FROM climber GROUP BY Country
SELECT Country, COUNT(*) FROM climber GROUP BY Country
SELECT Case_burden FROM county_public_safety ORDER BY Population DESC
SELECT Case_burden FROM county_public_safety ORDER BY Population DESC
SELECT Case_burden FROM county_public_safety ORDER BY Population DESC
SELECT Name, Population, Case_burden FROM county_public_safety ORDER BY Population DESC
SELECT Name, Case_burden, Population FROM county_public_safety ORDER BY Population DESC, Case_burden DESC
SELECT Major FROM Student GROUP BY Major HAVING COUNT(*) < 3
SELECT Major FROM Student GROUP BY Major HAVING COUNT(*) < 3
SELECT Major FROM Student GROUP BY Major HAVING COUNT(StuID) < 3
SELECT Major, COUNT(*) AS Student_Count FROM Student GROUP BY Major HAVING COUNT(*) < 3
SELECT Major, COUNT(*) FROM Student GROUP BY Major HAVING COUNT(*) < 3
SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2
SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2
SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2
SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2;
SELECT Project_ID FROM Projects WHERE Project_ID IN (SELECT Project_ID FROM Documents GROUP BY Project_ID HAVING COUNT(*) >= 2)
SELECT Flag FROM Ship GROUP BY Flag ORDER BY COUNT(*) DESC LIMIT 1
SELECT Flag FROM Ship GROUP BY Flag ORDER BY COUNT(*) DESC LIMIT 1
SELECT Flag FROM Ship GROUP BY Flag ORDER BY COUNT(*) DESC LIMIT 1
SELECT Flag FROM Ship GROUP BY Flag ORDER BY COUNT(*) DESC LIMIT 1
SELECT Flag FROM Ship GROUP BY Flag ORDER BY COUNT(*) DESC LIMIT 1
SELECT Team FROM player ORDER BY Age DESC LIMIT 5
SELECT Team FROM player ORDER BY Age DESC LIMIT 5
SELECT Team FROM player ORDER BY Age DESC LIMIT 5
SELECT Team FROM player ORDER BY Age DESC LIMIT 5
SELECT Team FROM player ORDER BY Age DESC LIMIT 5
SELECT T2.DName, T2.Room FROM Course AS T1 JOIN Department AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = "INTRODUCTION TO COMPUTER SCIENCE";
SELECT T2.DName, T2.Room FROM Course AS T1 JOIN Department AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = "INTRODUCTION TO COMPUTER SCIENCE";
SELECT DName, Room FROM Department WHERE DNO IN (SELECT DNO FROM Course WHERE CName = 'INTRODUCTION TO COMPUTER SCIENCE')
SELECT T2.DName, T2.Room FROM Course AS T1 JOIN Department AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = "INTRODUCTION TO COMPUTER SCIENCE";
SELECT DName, Room FROM Department JOIN Course ON Department.DNO = Course.DNO WHERE CName = "INTRODUCTION TO COMPUTER SCIENCE"
SELECT T2.Title, MAX(T1.Price) FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T2.Title
SELECT T2.Title, MAX(T1.Price) FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T2.Film_ID;
SELECT Title, MAX(Price) FROM schedule JOIN film ON schedule.Film_ID = film.Film_ID GROUP BY Title
SELECT Title, MAX(Price) FROM film JOIN schedule ON film.Film_ID = schedule.Film_ID GROUP BY film.Film_ID, Title
SELECT T2.Title, MAX(T1.Price) FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T1.Film_ID;
SELECT T1.course_description , T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2
SELECT T1.course_description, T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2
SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2
SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2
SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2
SELECT Document_ID, Document_Name FROM Documents;
SELECT Document_ID, Document_Name FROM Documents
SELECT Document_ID, Document_Name FROM Documents
SELECT Document_ID, Document_Name FROM Documents
SELECT Document_ID, Document_Name FROM Documents
SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina';
SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina'
SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina';
SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina'
SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina'
SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = "operating system" OR T2.course_name = "data structure"
SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id JOIN Subjects AS T3 ON T2.subject_id = T3.subject_id WHERE T3.subject_name = "operating system" OR T3.subject_name = "data structure"
SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = "operating system" OR T2.course_name = "data structure"
SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE author_id IN (SELECT author_id FROM Courses WHERE course_name = "operating system" OR course_name = "data structure")
SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = "operating system" OR T2.course_name = "data structure"
SELECT email_address, phone_number FROM Customers ORDER BY email_address, phone_number;
SELECT email_address, phone_number FROM Customers ORDER BY email_address, phone_number;
SELECT email_address, phone_number FROM Customers ORDER BY email_address, phone_number
SELECT email_address, phone_number FROM Customers ORDER BY email_address, phone_number
SELECT email_address, phone_number FROM Customers ORDER BY email_address, phone_number;
SELECT LOCATION FROM cinema WHERE Cinema_ID NOT IN (SELECT Cinema_ID FROM cinema WHERE Capacity > 800)
SELECT Location FROM cinema WHERE Capacity <= 800
SELECT Location FROM cinema WHERE Cinema_ID NOT IN (SELECT Cinema_ID FROM cinema WHERE Capacity > 800)
SELECT Location FROM cinema WHERE Capacity <= 800
SELECT Location FROM cinema WHERE Capacity <= 800
SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')
SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')
SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')
SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')
SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')
SELECT Shop_Name, Location FROM shop ORDER BY Shop_Name ASC;
SELECT Shop_Name, Location FROM shop ORDER BY Shop_Name ASC;
SELECT Shop_Name, Location FROM shop ORDER BY Shop_Name ASC
SELECT Shop_Name, Location FROM shop ORDER BY Shop_Name ASC
SELECT Shop_Name, Location FROM shop ORDER BY Shop_Name ASC
SELECT T3.Pilot_name , T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID ORDER BY T3.Rank;
SELECT T2.Pilot_name, T1.Fleet_Series FROM pilot_record AS T3 JOIN aircraft AS T1 ON T3.Aircraft_ID = T1.Aircraft_ID JOIN pilot AS T2 ON T3.Pilot_ID = T2.Pilot_ID ORDER BY T2.Rank ASC;
SELECT T2.Pilot_name, T1.Fleet_Series FROM aircraft AS T1 JOIN pilot_record AS T3 ON T1.Aircraft_ID = T3.Aircraft_ID JOIN pilot AS T2 ON T3.Pilot_ID = T2.Pilot_ID ORDER BY T2.Rank ASC
SELECT Pilot_name, Fleet_Series FROM pilot JOIN pilot_record ON pilot.Pilot_ID = pilot_record.Pilot_ID JOIN aircraft ON pilot_record.Aircraft_ID = aircraft.Aircraft_ID ORDER BY Rank ASC
SELECT T3.Pilot_name , T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID ORDER BY T3.Rank;
SELECT T1.Location, T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID;
SELECT T1.Location, T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID
SELECT Location, Nickname FROM school_details
SELECT s.Location, sd.Nickname FROM school s JOIN school_details sd ON s.School_ID = sd.School_ID;
SELECT T2.Nickname, T1.Location FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID
SELECT Carrier FROM device WHERE Software_Platform != 'Android'
SELECT Carrier FROM device WHERE Software_Platform != 'Android'
SELECT Carrier FROM device WHERE Software_Platform != 'Android'
SELECT Carrier FROM device WHERE Software_Platform != 'Android'
SELECT Carrier FROM device WHERE Software_Platform != "Android"
SELECT product_description FROM Products WHERE product_name = "Chocolate";
SELECT product_description FROM Products WHERE product_name = "Chocolate"
SELECT product_description FROM Products WHERE product_name = "Chocolate"
SELECT * FROM Products WHERE product_name = "Chocolate"
SELECT product_description FROM Products WHERE product_name = "Chocolate"
SELECT LName FROM Student WHERE Age = (SELECT MIN(Age) FROM Student)
SELECT LName FROM Student WHERE Age = (SELECT MIN(Age) FROM Student)
SELECT LName FROM Student WHERE Age = (SELECT MIN(Age) FROM Student)
SELECT LName FROM Student WHERE Age = (SELECT MIN(Age) FROM Student)
SELECT LName FROM Student ORDER BY Age LIMIT 1
SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)
SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)
SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)
SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)
SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)
SELECT count(*) FROM routes AS r JOIN airports AS a ON r.dst_apid = a.apid WHERE a.country = 'Italy';
SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'
SELECT COUNT(*) FROM routes JOIN airports ON routes.dst_apid = airports.apid WHERE airports.country = 'Italy';
SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'
SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country = 'Italy')
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1;
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1;
SELECT Shop_Name FROM shop JOIN stock ON shop.Shop_ID = stock.Shop_ID GROUP BY shop.Shop_ID ORDER BY sum(Quantity) DESC LIMIT 1
SELECT Shop_Name FROM shop JOIN stock ON shop.Shop_ID = stock.Shop_ID GROUP BY shop.Shop_ID ORDER BY SUM(stock.Quantity) DESC LIMIT 1
SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)
SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)
SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)
SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)
SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)
SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)
SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)
SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)
SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)
SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)
SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)
SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)
SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)
SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)
SELECT Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)
SELECT max(Years_Working) , min(Years_Working) , avg(Years_Working) FROM school_bus
SELECT max(Years_Working), min(Years_Working), avg(Years_Working) FROM school_bus;
SELECT max(Years_Working) , avg(Years_Working) , min(Years_Working) FROM school_bus
SELECT avg(Years_Working), min(Years_Working), max(Years_Working) FROM school_bus
SELECT max(years_working) - min(years_working) AS range_years_working, avg(years_working) AS avg_years_working FROM school_bus
SELECT School, Type FROM school WHERE School_ID NOT IN (SELECT School_ID FROM school_bus)
SELECT Name, Type FROM school WHERE School_ID NOT IN (SELECT School_ID FROM school_bus)
SELECT T1.School, T1.Type FROM school AS T1 LEFT JOIN school_bus AS T2 ON T1.School_ID = T2.School_ID WHERE T2.School_ID IS NULL
SELECT T1.School, T1.Type FROM school AS T1 LEFT JOIN school_bus AS T2 ON T1.School_ID = T2.School_ID WHERE T2.School_ID IS NULL
SELECT Name, Type FROM school WHERE School_ID NOT IN (SELECT School_ID FROM school_bus)
SELECT Age, COUNT(*) FROM Student GROUP BY Age
SELECT Age, COUNT(*) FROM Student GROUP BY Age
SELECT Age, COUNT(*) FROM Student GROUP BY Age
SELECT Age, COUNT(*) FROM Student GROUP BY Age
SELECT Age, COUNT(*) FROM Student GROUP BY Age 
SELECT count(*) FROM airlines AS a JOIN routes AS r ON a.alid = r.alid WHERE a.name = 'American Airlines';
SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines';
SELECT count(*) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines')
SELECT count(*) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines')
SELECT count(*) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines')
SELECT count(*) FROM Student
SELECT count(*) FROM Student
SELECT count(*) FROM Student 
SELECT COUNT(*) FROM Student;
SELECT count(*) FROM Student 
SELECT departure_date, arrival_date FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu';
SELECT departure_date , arrival_date FROM flight WHERE origin = "Los Angeles" AND destination = "Honolulu"
SELECT departure_date, arrival_date FROM flight WHERE origin = "Los Angeles" AND destination = "Honolulu";
SELECT departure_date, arrival_date FROM flight WHERE origin = "Los Angeles" AND destination = "Honolulu"
SELECT departure_date, arrival_date FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu'
SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) >= 2;
SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) >= 2;
SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) >= 2;
SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(*) >= 2;
SELECT Location FROM cinema WHERE Cinema_ID IN (SELECT Cinema_ID FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING count(*) >= 2)
SELECT product_name, product_category_code FROM Products ORDER BY product_price DESC LIMIT 1
SELECT product_name , product_category_code FROM Products ORDER BY product_price DESC LIMIT 1
SELECT product_name, product_category_code FROM Products ORDER BY product_price DESC LIMIT 1
SELECT product_name, product_category_code FROM Products ORDER BY product_price DESC LIMIT 1
SELECT product_name, product_category_code FROM Products ORDER BY product_price DESC LIMIT 1
SELECT count(DISTINCT eid) FROM certificate
SELECT count(DISTINCT eid) FROM certificate
SELECT count(DISTINCT eid) FROM certificate
SELECT COUNT(DISTINCT eid) FROM certificate
SELECT COUNT(DISTINCT eid) FROM certificate
SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t2.Rank = 'Midshipman' INTERSECT SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t2.Rank = 'Lieutenant'
SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t2.Rank = 'Midshipman' INTERSECT SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t2.Rank = 'Lieutenant'
SELECT T2.Name FROM Ship AS T2 JOIN Captain AS T1 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Rank = 'Midshipman' INTERSECT SELECT T2.Name FROM Ship AS T2 JOIN Captain AS T1 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Rank = 'Lieutenant'
SELECT t2.Name FROM captain AS t1 JOIN Ship AS t2 ON t1.Ship_ID = t2.Ship_ID WHERE t1.Rank = 'Midshipman' OR t1.Rank = 'Lieutenant'
SELECT T2.Name FROM Ship AS T2 JOIN Captain AS T1 ON T2.Ship_ID = T1.Ship_ID WHERE T1.Rank = 'Midshipman' INTERSECT SELECT T2.Name FROM Ship AS T2 JOIN Captain AS T1 ON T2.Ship_ID = T1.Ship_ID WHERE T1.Rank = 'Lieutenant'
SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1
SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1
SELECT country FROM airlines GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country FROM airlines WHERE country IN (SELECT country FROM airlines WHERE active = 'Y') GROUP BY country ORDER BY count(*) DESC LIMIT 1
SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM captain WHERE Rank = 'Midshipman' OR Rank = 'Lieutenant'
SELECT Name FROM captain WHERE Rank = 'Midshipman' OR Rank = 'Lieutenant'
SELECT Name FROM captain WHERE Rank IN ('Midshipman', 'Lieutenant')
SELECT Name FROM captain WHERE Rank = 'Midshipman' OR Rank = 'Lieutenant'
SELECT Name FROM captain WHERE Rank = "Midshipman" OR Rank = "Lieutenant"
SELECT Major FROM Student
SELECT DISTINCT Major FROM Student
SELECT Major FROM Student
SELECT DISTINCT Major FROM Student
SELECT DISTINCT Major FROM Student
SELECT avg(age) , sex FROM Student GROUP BY sex
SELECT avg(age) , sex FROM Student GROUP BY sex 
SELECT avg(Age) , Sex FROM Student GROUP BY Sex
SELECT avg(age) , sex FROM Student GROUP BY sex
SELECT avg(Age), Sex FROM Student GROUP BY Sex
SELECT Name FROM musical WHERE Nominee = "Bob Fosse"
SELECT Name FROM musical WHERE Nominee = "Bob Fosse"
SELECT T1.Name FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = "Bob Fosse"
SELECT Name FROM musical WHERE Nominee = "Bob Fosse"
SELECT Name FROM musical WHERE Nominee = "Bob Fosse";
SELECT Police_force FROM county_public_safety WHERE Location = "East" INTERSECT SELECT Police_force FROM county_public_safety WHERE Location = "West"
SELECT Police_force FROM county_public_safety WHERE Location = "East" INTERSECT SELECT Police_force FROM county_public_safety WHERE Location = "West"
SELECT T1.Police_force FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID WHERE T2.Location IN ('East', 'West') GROUP BY T1.Police_force HAVING COUNT(DISTINCT T2.Location) = 2
SELECT Police_force FROM county_public_safety WHERE Location = "East" INTERSECT SELECT Police_force FROM county_public_safety WHERE Location = "West"
SELECT Police_force FROM county_public_safety WHERE Location = "East" INTERSECT SELECT Police_force FROM county_public_safety WHERE Location = "West"
SELECT Major FROM Student WHERE Sex = 'F' GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1
SELECT Major FROM Student WHERE Sex = "F" GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1
SELECT Major FROM Student WHERE Sex = "F" GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Major FROM Student WHERE Sex = 'F' GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1
SELECT Major FROM Student WHERE Sex = "F" GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1
SELECT Budget_Type_Code, COUNT(*) FROM Documents_with_Expenses GROUP BY Budget_Type_Code;
SELECT Budget_Type_Code, COUNT(*) FROM Documents_with_Expenses GROUP BY Budget_Type_Code
SELECT Budget_Type_Code, COUNT(*) FROM Documents_with_Expenses GROUP BY Budget_Type_Code
SELECT Budget_Type_Code, COUNT(Document_ID) FROM Documents_with_Expenses GROUP BY Budget_Type_Code
SELECT Budget_Type_Code, COUNT(Document_ID) FROM Documents_with_Expenses GROUP BY Budget_Type_Code
SELECT Document_Type_Code, Document_Type_Name, Document_Type_Description FROM Ref_Document_Types;
SELECT Document_Type_Code, Document_Type_Name, Document_Type_Description FROM Ref_Document_Types
SELECT Document_Type_Code, Document_Type_Name, Document_Type_Description FROM Ref_Document_Types 
SELECT Document_Type_Code, Document_Type_Name, Document_Type_Description FROM Ref_Document_Types
SELECT Document_Type_Code, Document_Type_Name, Document_Type_Description FROM Ref_Document_Types 
SELECT DISTINCT President_Vote FROM Voting_record WHERE Registration_Date = "08/30/2015"
SELECT DISTINCT President_Vote FROM Voting_record WHERE Registration_Date = "08/30/2015"
SELECT DISTINCT President_Vote FROM Voting_record WHERE Election_Cycle = '08/30/2015'
SELECT DISTINCT President_Vote FROM Voting_record WHERE Election_Cycle = '08/30/2015'
SELECT DISTINCT President_Vote FROM Voting_record WHERE Registration_Date = "08/30/2015"
SELECT employee_id, first_name, last_name, job_title FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_title = 'PU_MAN')
SELECT employee_id, first_name, last_name, job_id FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')
SELECT employee_id, first_name, last_name, job_title FROM employees JOIN jobs ON employees.job_id = jobs.job_id WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')
SELECT employee_id, first_name, last_name, job_id FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')
SELECT e.employee_id, e.first_name, e.last_name, j.job_title FROM employees e JOIN jobs j ON e.job_id = j.job_id WHERE e.salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')
SELECT min(Age), avg(Age), max(Age) FROM Student
SELECT min(Age) , avg(Age) , max(Age) FROM Student
SELECT min(Age) , avg(Age) , max(Age) FROM Student
SELECT min(Age) , avg(Age) , max(Age) FROM Student
SELECT min(age) as youngest_age, avg(age) as average_age, max(age) as oldest_age FROM student
SELECT Name FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Crime_rate < 100)
SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate < 100)
SELECT T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T2.Crime_rate < 100
SELECT Name FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Crime_rate < 100)
SELECT Name FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Crime_rate < 100)
SELECT Fname, Lname FROM Faculty WHERE Sex = 'M' AND Building = 'NEB';
SELECT Fname, Lname FROM Faculty WHERE Sex = "M" AND Building = "NEB"
SELECT T1.Fname, T1.Lname FROM Faculty AS T1 JOIN Member_of AS T2 ON T1.FacID = T2.FacID JOIN Department AS T3 ON T2.DNO = T3.DNO WHERE T1.Sex = 'M' AND T3.Building = 'NEB'
SELECT Fname, Lname FROM Faculty WHERE Sex = 'M' AND Building = 'NEB'
SELECT Fname, Lname FROM Faculty WHERE Sex = 'M' AND Building = 'NEB'
SELECT Location FROM school ORDER BY Founded DESC
SELECT Location FROM school ORDER BY Founded DESC
SELECT Location FROM school ORDER BY Founded DESC
SELECT Location FROM school ORDER BY Founded DESC
SELECT Location FROM school ORDER BY Founded DESC
SELECT Name FROM technician WHERE Team != "NYY"
SELECT Name FROM technician WHERE Team != "NYY"
SELECT Name FROM technician WHERE Team != 'NYY'
SELECT Name FROM technician WHERE Team != 'NYY'
SELECT Name FROM technician WHERE Team != "NYY"
SELECT Location FROM school ORDER BY Enrollment ASC
SELECT Location FROM school ORDER BY Enrollment ASC;
SELECT Location FROM school ORDER BY Enrollment ASC 
SELECT Location FROM school ORDER BY Enrollment ASC
SELECT Location FROM school ORDER BY Enrollment ASC 
SELECT flno FROM flight WHERE aid IN (SELECT aid FROM aircraft WHERE name = 'Airbus A340-300');
SELECT flno FROM flight WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Airbus A340-300');
SELECT flno FROM flight WHERE aid IN (SELECT aid FROM aircraft WHERE name = 'Airbus A340-300')
SELECT T1.flno FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = "Airbus A340-300"
SELECT T1.flno FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = "Airbus A340-300";
SELECT T3.Manager_Name FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T1.Station_ID = T3.Station_ID WHERE T2.Company = 'ExxonMobil'
SELECT T3.Manager_Name FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T1.Station_ID = T3.Station_ID WHERE T2.Company = 'ExxonMobil'
SELECT gas_station.Manager_Name FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID JOIN company ON station_company.Company_ID = company.Company_ID WHERE company.Company = "ExxonMobil"
SELECT Manager_Name FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID JOIN company ON station_company.Company_ID = company.Company_ID WHERE company.Company = "ExxonMobil"
SELECT T2.Manager_Name FROM gas_station AS T1 JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID JOIN company AS T3 ON T2.Company_ID = T3.Company_ID WHERE T3.Company = "ExxonMobil"
SELECT Advisor FROM Student GROUP BY Advisor HAVING COUNT(*) > 2;
SELECT Advisor FROM Student GROUP BY Advisor HAVING COUNT(*) > 2
SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.Advisor GROUP BY T1.Advisor HAVING COUNT(*) > 2
SELECT T1.Advisor, COUNT(*) FROM Student AS T1 GROUP BY T1.Advisor HAVING COUNT(*) > 2
SELECT Advisor FROM Student GROUP BY Advisor HAVING COUNT(*) > 2
SELECT count(*) FROM Department WHERE Division = "AS"
SELECT count(*) FROM Department WHERE Division = "AS"
SELECT count(*) FROM Department WHERE Division = "AS"
SELECT COUNT(*) FROM Department WHERE Division = 'AS'
SELECT count(*) FROM Department WHERE Division = "AS"
SELECT Document_Name, Document_ID FROM Documents WHERE Document_Type_Code = 'BK';
SELECT Document_Name, Document_ID FROM Documents WHERE Document_Type_Code = "BK"
SELECT Document_Name, Document_ID FROM Documents WHERE Document_Type_Code = "BK"
SELECT Document_ID, Document_Name FROM Documents WHERE Document_Type_Code = 'BK'
SELECT Document_Name, Document_ID FROM Documents WHERE Document_Type_Code = 'BK'
SELECT avg(distance) , avg(price) FROM flight WHERE origin = 'Los Angeles'
SELECT avg(distance) , avg(price) FROM flight WHERE origin = "Los Angeles"
SELECT avg(price), avg(distance) FROM flight WHERE origin = "Los Angeles"
SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles';
SELECT avg(distance), avg(price) FROM flight WHERE origin = 'Los Angeles'
SELECT count(*) , project_id FROM Documents WHERE document_type_code = "BK" GROUP BY project_id
SELECT count(*), Project_ID FROM Documents WHERE Document_Type_Code = "BK" GROUP BY Project_ID;
SELECT Project_ID, COUNT(*) FROM Documents WHERE Document_Type_Code = 'BK' GROUP BY Project_ID
SELECT Project_ID, COUNT(*) FROM Documents WHERE Document_Type_Code = "BK" GROUP BY Project_ID
SELECT count(*) FROM Documents WHERE Document_Type_Code = 'BK'
SELECT count(*) FROM university WHERE Location LIKE "%NY%"
SELECT count(*) FROM university WHERE Location LIKE "%NY%"
SELECT count(*) FROM university WHERE Location = 'New York';
SELECT COUNT(*) FROM university WHERE Location LIKE "%NY%"
SELECT count(*) FROM university WHERE Location LIKE '%NY%'
SELECT count(DISTINCT city) FROM airports WHERE country = 'Greenland'
SELECT count(DISTINCT city) FROM airports WHERE country = 'Greenland';
SELECT count(DISTINCT city) FROM airports WHERE country = 'Greenland'
SELECT COUNT(DISTINCT city) FROM airports WHERE country = 'Greenland';
SELECT count(DISTINCT city) FROM airports WHERE country = 'Greenland';
SELECT count(*) FROM Allergy_Type WHERE AllergyType = "animal"
SELECT count(*) FROM Allergy_Type WHERE AllergyType = "animal"
SELECT count(*) FROM Allergy_Type WHERE AllergyType = 'animal'
SELECT count(*) FROM Allergy_Type WHERE AllergyType = 'animal'
SELECT count(*) FROM Allergy_Type WHERE AllergyType = 'Animal'
SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1
SELECT Team, COUNT(*) FROM technician GROUP BY Team ORDER BY COUNT(*) DESC;
SELECT Team FROM technician GROUP BY Team ORDER BY count(*) DESC LIMIT 1
SELECT T1.Team FROM technician AS T1 GROUP BY T1.Team ORDER BY count(*) DESC LIMIT 1
SELECT Team FROM technician GROUP BY Team ORDER BY count(*) DESC LIMIT 1
SELECT Hispanic FROM city WHERE Black > 10
SELECT Hispanic FROM city WHERE Black > 10
SELECT Hispanic FROM city WHERE Black > 10
SELECT Hispanic FROM city WHERE Black > 10
SELECT Hispanic FROM city WHERE Black > 10
SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)
SELECT eid FROM employee EXCEPT SELECT eid FROM certificate
SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)
SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)
SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)
SELECT DISTINCT Fname FROM Student JOIN Enrolled_in ON Student.StuID = Enrolled_in.StuID JOIN Gradeconversion ON Enrolled_in.Grade = Gradeconversion.lettergrade WHERE Gradeconversion.gradepoint >= 3.8;
SELECT DISTINCT Fname FROM Student JOIN Enrolled_in ON Student.StuID = Enrolled_in.StuID JOIN Gradeconversion ON Enrolled_in.Grade = Gradeconversion.lettergrade WHERE Gradeconversion.gradepoint >= 3.8;
SELECT DISTINCT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Enrolled_in WHERE Grade IN (SELECT lettergrade FROM Gradeconversion WHERE gradepoint >= 3.8))
SELECT DISTINCT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Enrolled_in WHERE Grade IN (SELECT lettergrade FROM Gradeconversion WHERE gradepoint >= 3.8))
SELECT DISTINCT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Enrolled_in WHERE Grade IN (SELECT lettergrade FROM Gradeconversion WHERE gradepoint >= 3.8))
SELECT DISTINCT Police_force FROM county_public_safety WHERE Location != "East"
SELECT DISTINCT Police_force FROM county_public_safety WHERE Location != "East"
SELECT DISTINCT Police_force FROM county_public_safety WHERE Location != "East"
SELECT DISTINCT Police_force FROM county_public_safety WHERE Location != "East"
SELECT Police_force FROM county_public_safety WHERE Location != 'East'
SELECT count(*) FROM film WHERE Title LIKE "%Dummy%"
SELECT count(*) FROM film WHERE Title LIKE "%Dummy%"
SELECT count(*) FROM film WHERE Title LIKE "%Dummy%"
SELECT count(*) FROM film WHERE Title LIKE "%Dummy%"
SELECT count(*) FROM film WHERE Title LIKE "%Dummy%"
SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1
SELECT Advisor FROM Student GROUP BY Advisor ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Fname, T2.LName FROM Student AS T1 JOIN Faculty AS T2 ON T1.Advisor = T2.FacID GROUP BY T1.Advisor ORDER BY COUNT(*) DESC LIMIT 1
SELECT Advisor, COUNT(StuID) AS StudentCount FROM Student GROUP BY Advisor ORDER BY StudentCount DESC LIMIT 1
SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN (SELECT Advisor, COUNT(*) AS num_students FROM Student GROUP BY Advisor ORDER BY num_students DESC LIMIT 1) AS T2 ON T1.Advisor = T2.Advisor
SELECT count(*) FROM Projects
SELECT count(*) FROM Projects
SELECT count(*) FROM Projects;
SELECT count(*) FROM Projects
SELECT count(*) FROM Projects
SELECT Manager_Name FROM gas_station WHERE Open_Year > 2000 GROUP BY Manager_Name ORDER BY COUNT(*) DESC LIMIT 1
SELECT Manager_Name FROM gas_station WHERE Open_Year > 2000 GROUP BY Manager_Name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Manager_Name FROM gas_station AS T1 JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID WHERE T1.Open_Year >= 2000 GROUP BY T1.Manager_Name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Manager_Name FROM gas_station AS T1 JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID WHERE T1.Open_Year > 2000 GROUP BY T2.Manager_Name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Manager_Name FROM gas_station WHERE Station_ID IN ( SELECT Station_ID FROM station_company WHERE Rank_of_the_Year > 2000 GROUP BY Station_ID ORDER BY count(*) DESC LIMIT 1 )
SELECT email_address , phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)
SELECT email_address , phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)
SELECT email_address, phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)
SELECT email_address, phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)
SELECT email_address, phone_number FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Complaints)
SELECT Budget_Type_Description FROM Ref_Budget_Codes WHERE Budget_Type_Code = "ORG"
SELECT Budget_Type_Description FROM Ref_Budget_Codes WHERE Budget_Type_Code = "ORG"
SELECT Budget_Type_Description FROM Ref_Budget_Codes WHERE Budget_Type_Code = "ORG";
SELECT Budget_Type_Description FROM Ref_Budget_Codes WHERE Budget_Type_Code = "ORG"
SELECT Budget_Type_Description FROM Ref_Budget_Codes WHERE Budget_Type_Code = 'ORG'
SELECT course_description FROM Courses WHERE course_name = "database"
SELECT course_description FROM Courses WHERE course_name = "database"
SELECT course_description FROM Courses WHERE course_name = "database"
SELECT course_description FROM Courses WHERE course_name = "database"
SELECT course_description FROM Courses WHERE course_name = "database"
SELECT POSITION FROM pilot WHERE Join_Year > 2005 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year < 2000
SELECT Position FROM pilot WHERE Join_Year < 2000 UNION SELECT Position FROM pilot WHERE Join_Year > 2005
SELECT Position FROM pilot WHERE Join_Year < 2000 INTERSECT SELECT Position FROM pilot WHERE Join_Year > 2005
SELECT Position FROM pilot WHERE Join_Year < 2000 INTERSECT SELECT Position FROM pilot WHERE Join_Year > 2005
SELECT DISTINCT Position FROM pilot WHERE Pilot_ID IN (SELECT Pilot_ID FROM pilot WHERE Join_Year < 2000) OR Pilot_ID IN (SELECT Pilot_ID FROM pilot WHERE Join_Year > 2005)
SELECT city FROM airports GROUP BY city HAVING count(*) = 2
SELECT city FROM airports GROUP BY city HAVING COUNT(*) = 2
SELECT city FROM airports GROUP BY city HAVING count(*) = 2;
SELECT city FROM airports GROUP BY city HAVING COUNT(*) = 2;
SELECT city FROM airports GROUP BY city HAVING count(*) = 2;
SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)
SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)
SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING COUNT(*) >= 2
SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN ( SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2 )
SELECT contestant_name, contestant_number FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) >= 2)
SELECT Name FROM actor WHERE Age != 20
SELECT Name FROM actor WHERE Age != 20
SELECT Name FROM actor WHERE Age < 20 OR Age > 20
SELECT Name FROM actor WHERE age != 20
SELECT Name FROM actor WHERE Age != 20
SELECT document_name , document_date FROM Documents AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'
SELECT document_name , document_date FROM Documents AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'
SELECT Document_Name, Document_Date FROM Documents WHERE Project_ID = (SELECT Project_ID FROM Projects WHERE Project_Details = 'Graph Database project')
SELECT Document_Name, Document_Date FROM Documents WHERE Project_ID IN (SELECT Project_ID FROM Projects WHERE Project_Details = 'Graph Database project')
SELECT Document_Name, Document_Date FROM Documents WHERE Project_ID IN (SELECT Project_ID FROM Projects WHERE Project_Details = 'Graph Database project')
SELECT max(Age) , min(Age) FROM Student WHERE Major = 600
SELECT max(Age) , min(Age) FROM Student WHERE Major = 600
SELECT min(Age) as youngest_age, max(Age) as oldest_age FROM Student WHERE Major = 600
SELECT max(Age), min(Age) FROM Student WHERE Major = 600
SELECT min(Age), max(Age) FROM Student WHERE Major = 600
SELECT Founded FROM university WHERE Affiliation != 'Public' ORDER BY Founded DESC LIMIT 1
SELECT Founded FROM university WHERE Affiliation != 'Public' ORDER BY Founded DESC LIMIT 1
SELECT Founded FROM university WHERE Affiliation != 'Public' ORDER BY Founded DESC LIMIT 1
SELECT Founded FROM university WHERE Affiliation != 'Public' ORDER BY Founded DESC LIMIT 1
SELECT Founded FROM university WHERE Affiliation != 'Public' ORDER BY Founded DESC LIMIT 1
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(DISTINCT T1.Device_ID) > 1
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(DISTINCT T1.Device_ID) > 1
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN device AS T3 ON T1.Device_ID = T3.Device_ID GROUP BY T1.Shop_ID HAVING COUNT(DISTINCT T1.Device_ID) >= 2
SELECT Shop_ID FROM stock GROUP BY Shop_ID HAVING COUNT(DISTINCT Device_ID) > 1
SELECT Shop_Name FROM shop WHERE Shop_ID IN (SELECT Shop_ID FROM stock GROUP BY Shop_ID HAVING COUNT(DISTINCT Device_ID) > 1)
SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)
SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)
SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)
SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)
SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)
SELECT Age , COUNT(*) FROM editor GROUP BY Age
SELECT Age, COUNT(*) FROM editor GROUP BY Age
SELECT Age, COUNT(*) FROM editor GROUP BY Age
SELECT Age, COUNT(*) FROM editor GROUP BY Age
SELECT Age, COUNT(*) FROM editor GROUP BY Age
SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes;
SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes
SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes
SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes
SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes
SELECT flno FROM flight WHERE origin = "Los Angeles";
SELECT flno FROM flight WHERE origin = 'Los Angeles'
SELECT flno FROM flight WHERE origin = 'Los Angeles';
SELECT flno FROM flight WHERE origin = 'Los Angeles'
SELECT flno FROM flight WHERE origin = 'Los Angeles';
SELECT Fname FROM Faculty WHERE Rank = "Professor" ORDER BY Fname;
SELECT Fname FROM Faculty WHERE Rank = "Professor" ORDER BY Fname;
SELECT Fname FROM Faculty ORDER BY Fname ASC;
SELECT Fname FROM Faculty WHERE Rank = 'Professor' ORDER BY Fname;
SELECT Fname FROM Faculty WHERE Rank = "Professor" ORDER BY Fname;
SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students
SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students
SELECT T1.personal_name FROM Course_Authors_and_Tutors AS T1 JOIN Students AS T2 ON T1.personal_name = T2.personal_name
SELECT personal_name FROM Course_Authors_and_Tutors WHERE personal_name IN (SELECT personal_name FROM Students)
SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students
SELECT Name FROM county_public_safety ORDER BY Population DESC
SELECT Name FROM county_public_safety ORDER BY Population DESC
SELECT Name FROM county_public_safety ORDER BY Population DESC
SELECT Name FROM county_public_safety ORDER BY Population DESC
SELECT Name FROM county_public_safety ORDER BY Population DESC
SELECT count(DISTINCT complaint_type_code) FROM Complaints
SELECT COUNT(DISTINCT complaint_type_code) FROM Complaints;
SELECT count(DISTINCT complaint_type_code) FROM Complaints
SELECT count(DISTINCT complaint_type_code) FROM Complaints
SELECT complaint_type_code, count(*) FROM Complaints GROUP BY complaint_type_code;
SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.city_code = "NYC"
SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.city_code = "NYC"
SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.city_code = "NYC"
SELECT max(T2.gradepoint) , min(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.city_code = "NYC"
SELECT max(gradepoint) , min(gradepoint) FROM Student AS s JOIN Minor_in AS m ON s.StuID = m.StuID JOIN Department AS d ON m.DNO = d.DNO WHERE s.city_code = "NYC"
SELECT count(*) , flag FROM ship GROUP BY flag
SELECT COUNT(*) , Flag FROM Ship GROUP BY Flag
SELECT count(*) , Flag FROM Ship GROUP BY Flag
SELECT Flag, COUNT(*) FROM Ship GROUP BY Flag
SELECT Flag, COUNT(*) FROM Ship GROUP BY Flag
SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1
SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1
SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1
SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1
SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1
SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = "The Phantom of the Opera"
SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = "The Phantom of the Opera"
SELECT Name FROM actor WHERE Musical_ID IN (SELECT Musical_ID FROM musical WHERE Name = "The Phantom of the Opera")
SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = "The Phantom of the Opera"
SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = "The Phantom of the Opera"
SELECT T3.Pilot_name , T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID
SELECT T2.Pilot_name, T1.Model FROM pilot_record AS T3 JOIN aircraft AS T1 ON T3.Aircraft_ID = T1.Aircraft_ID JOIN pilot AS T2 ON T3.Pilot_ID = T2.Pilot_ID;
SELECT T2.Pilot_name, T1.Model FROM pilot_record AS T3 JOIN pilot AS T2 ON T3.Pilot_ID = T2.Pilot_ID JOIN aircraft AS T1 ON T3.Aircraft_ID = T1.Aircraft_ID;
SELECT T2.Pilot_name, T1.Model FROM aircraft AS T1 JOIN pilot_record AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID;
SELECT T2.Pilot_name, T1.Model FROM pilot_record AS T3 JOIN aircraft AS T1 ON T3.Aircraft_ID = T1.Aircraft_ID JOIN pilot AS T2 ON T3.Pilot_ID = T2.Pilot_ID;
SELECT count(*) FROM Course WHERE Credits > 2;
SELECT COUNT(*) FROM Course WHERE Credits > 2;
SELECT count(*) FROM Course WHERE Credits > 2
SELECT count(*) FROM Course WHERE Credits > 2
SELECT count(*) FROM Course WHERE Credits > 2;
SELECT LOCATION, COUNT(*) FROM cinema GROUP BY LOCATION;
SELECT Location, COUNT(*) FROM cinema GROUP BY Location
SELECT Location, COUNT(*) FROM cinema GROUP BY Location
SELECT Location, COUNT(*) FROM cinema GROUP BY Location
SELECT Location, COUNT(*) FROM cinema GROUP BY Location
SELECT T1.statement_details , T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id = T2.document_id WHERE T1.statement_details = 'Private Project'
SELECT T1.statement_details, T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id = T2.document_id WHERE T1.statement_details = 'Private Project'
SELECT t2.Statement_Details, t1.Document_Name FROM Statements AS t2 JOIN Documents AS t1 ON t2.Statement_ID = t1.Document_ID WHERE t1.Document_Type_Code = (SELECT Document_Type_Code FROM Ref_Document_Types WHERE Document_Type_Name = 'Private Project')
SELECT S.Statement_Details, D.Document_Name FROM Statements AS S JOIN Documents AS D ON S.Statement_ID = D.Document_ID JOIN Ref_Document_Types AS R ON D.Document_Type_Code = R.Document_Type_Code WHERE R.Document_Type_Name = 'Private Project'
SELECT T1.Statement_Details, T2.Document_Name FROM Statements AS T1 JOIN Documents AS T2 ON T1.Statement_ID = T2.Document_ID WHERE T1.Statement_Details = 'Private Project'
SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1
SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1
SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1
SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1
SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t2.ACC_Percent LIMIT 1
SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*) > 1
SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*) > 1
SELECT Denomination, COUNT(*) FROM school GROUP BY Denomination HAVING COUNT(*) > 1
SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*) > 1
SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*) > 1
SELECT Name FROM mountain ORDER BY Name ASC
SELECT Name FROM mountain ORDER BY Name ASC
SELECT Name FROM mountain ORDER BY Name ASC
SELECT Name FROM mountain ORDER BY Name ASC 
SELECT Name FROM mountain ORDER BY Name
SELECT Company, Rank FROM company ORDER BY Sales_billion DESC;
SELECT Company, Rank FROM company ORDER BY Sales_billion DESC;
SELECT Company, Rank FROM company ORDER BY Sales_billion DESC
SELECT Company, Rank FROM company ORDER BY Sales_billion DESC
SELECT Company, Rank, Sales_billion FROM company ORDER BY Sales_billion DESC 
SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' INTERSECT SELECT Headquarters FROM company WHERE Main_Industry = 'Oil and gas'
SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' INTERSECT SELECT Headquarters FROM company WHERE Main_Industry = 'Oil and gas'
SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' INTERSECT SELECT Headquarters FROM company WHERE Main_Industry = 'Oil and gas'
SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' INTERSECT SELECT Headquarters FROM company WHERE Main_Industry = 'Oil & Gas'
SELECT Headquarters FROM company WHERE Company_ID IN ( SELECT Company_ID FROM station_company WHERE Company_ID IN ( SELECT Company_ID FROM company WHERE Main_Industry = 'Banking' ) AND Company_ID IN ( SELECT Company_ID FROM company WHERE Main_Industry = 'Oil and gas' ) )
SELECT document_type_code, document_name, document_description FROM Documents WHERE document_name = 'Noel CV' OR document_name = 'King Book'
SELECT document_type_code , document_name , document_description FROM Documents WHERE document_name = 'Noel CV' OR document_name = 'King Book'
SELECT Document_Type_Code, Document_Name, Document_Description FROM Documents WHERE Document_Name = 'Noel CV' OR Document_Name = 'King Book';
SELECT Document_Type_Code, Document_Name, Document_Description FROM Documents WHERE Document_Name = 'Noel CV' OR Document_Name = 'King Book';
SELECT Document_Type_Code, Document_Name, Document_Description FROM Documents WHERE Document_Name = 'Noel CV' OR Document_Name = 'King Book'
SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1
SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1
SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY COUNT(*) DESC LIMIT 1
SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY COUNT(*) DESC LIMIT 1
SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY COUNT(*) DESC LIMIT 1
SELECT count(*) FROM airports WHERE name LIKE '%International%'
SELECT count(*) FROM airports WHERE name LIKE '%International%'
SELECT count(*) FROM airports WHERE name LIKE "%International%"
SELECT count(*) FROM airports WHERE name LIKE "%International%"
SELECT count(*) FROM airports WHERE name LIKE '%International%'
SELECT count(*) FROM Student WHERE Age = 18
SELECT count(*) FROM Student WHERE Age = 18;
SELECT count(*) FROM Student WHERE Age = 18
SELECT count(*) FROM Student WHERE Age = 18;
SELECT count(*) FROM Student WHERE Age = 18
SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')
SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')
SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')
SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')
SELECT Name, Flag FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Captain WHERE Rank = 'Midshipman')
SELECT AVG(Price) , AVG(Cases) FROM wine WHERE Year = 2009 AND Grape = "Zinfandel"
SELECT AVG(Price) , AVG(Cases) FROM wine WHERE Year = 2009 AND Grape = "Zinfandel"
SELECT avg(Price), avg(Cases) FROM wine WHERE Grape = 'Zinfandel' AND Year = 2009
SELECT AVG(Cases), AVG(Price) FROM wine WHERE Grape = 'Zinfandel' AND Year = 2009;
SELECT avg(Price), sum(Cases) FROM wine WHERE Grape = 'Zinfandel' AND Year = 2009
SELECT Major, COUNT(*) AS Total_Students FROM Student GROUP BY Major ORDER BY Total_Students DESC LIMIT 1
SELECT Major FROM Student GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1
SELECT Major, COUNT(*) AS Enrollment FROM Student GROUP BY Major ORDER BY Enrollment DESC LIMIT 1
SELECT Major FROM Student GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1
SELECT Major FROM Student GROUP BY Major ORDER BY COUNT(*) DESC LIMIT 1
SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1
SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1
SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1
SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1
SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1
SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Boeing 737-800" INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Airbus A340-300"
SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Airbus A340-300';
SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T2.aid = T3.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T2.aid = T3.aid WHERE T3.name = 'Airbus A340-300'
SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Boeing 737-800' INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = 'Airbus A340-300'
SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Boeing 737-800" INTERSECT SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Airbus A340-300"
SELECT Company, Main_Industry FROM company WHERE Headquarters != 'USA'
SELECT Company, Main_Industry FROM company WHERE Headquarters != 'USA' 
SELECT Company, Main_Industry FROM company WHERE Headquarters NOT LIKE '%USA%'
SELECT Company, Main_Industry FROM company WHERE Headquarters != 'USA';
SELECT Company, Main_Industry FROM company WHERE Headquarters != 'USA'
SELECT COUNT(DISTINCT Country) FROM climber
SELECT COUNT(DISTINCT Country) FROM climber
SELECT count(DISTINCT Country) FROM climber
SELECT COUNT(DISTINCT Country) FROM climber
SELECT COUNT(DISTINCT Country) FROM climber
SELECT count(*) FROM actor
SELECT count(*) FROM actor
SELECT count(*) FROM actor
SELECT count(*) FROM actor
SELECT count(*) FROM actor
SELECT Price FROM wine WHERE Year < 2010
SELECT Price FROM wine WHERE Year < 2010
SELECT Price FROM wine WHERE Year < 2010
SELECT Price FROM wine WHERE Year < 2010
SELECT Price FROM wine WHERE Year < 2010
SELECT count(*) , city FROM airports WHERE country = 'United States' GROUP BY city ORDER BY count(*) DESC;
SELECT count(*) , city FROM airports WHERE country = 'United States' GROUP BY city ORDER BY count(*) DESC
SELECT count(*) , city FROM airports WHERE country = 'United States' GROUP BY city ORDER BY count(*) DESC
SELECT city, count(*) as num_airports FROM airports WHERE country = "United States" GROUP BY city ORDER BY num_airports DESC;
SELECT count(*), city FROM airports WHERE country = 'United States' GROUP BY city ORDER BY count(*) DESC;
SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)
SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)
SELECT count(*) FROM university WHERE School_ID NOT IN (SELECT School_ID FROM basketball_match)
SELECT count(*) FROM university WHERE School_ID NOT IN (SELECT School_ID FROM basketball_match)
SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)
SELECT MAX(Price), MAX(Score), Year FROM wine GROUP BY Year;
SELECT MAX(Price), MAX(Score), Year FROM wine GROUP BY Year;
SELECT max(Price) , max(Score) , Year FROM wine GROUP BY Year
SELECT Year, MAX(Price) AS Highest_Price, MAX(Score) AS Highest_Score FROM wine GROUP BY Year
SELECT max(Price), max(Score), Year FROM wine GROUP BY Year
SELECT department_id, SUM(salary) FROM employees GROUP BY department_id HAVING COUNT(*) >= 2
SELECT department_id, SUM(salary) FROM employees GROUP BY department_id HAVING COUNT(*) > 2;
SELECT DEPARTMENT_ID, SUM(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID HAVING COUNT(*) >= 2;
SELECT DEPARTMENT_ID, SUM(SALARY) FROM employees GROUP BY DEPARTMENT_ID HAVING COUNT(*) >= 2
SELECT DEPARTMENT_ID, SUM(SALARY) FROM employees GROUP BY DEPARTMENT_ID HAVING COUNT(*) >= 2
SELECT Built_Year FROM Ship GROUP BY Built_Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Built_Year FROM Ship GROUP BY Built_Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Built_Year FROM Ship GROUP BY Built_Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Built_Year FROM Ship GROUP BY Built_Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT Built_Year FROM Ship GROUP BY Built_Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT eid, salary FROM employee WHERE name = 'Mark Young';
SELECT eid, salary FROM employee WHERE name = 'Mark Young';
SELECT eid, salary FROM employee WHERE name = 'Mark Young'
SELECT eid, salary FROM employee WHERE name = 'Mark Young';
SELECT eid, salary FROM employee WHERE name = "Mark Young"
SELECT eid FROM employee WHERE salary > 100000;
SELECT eid FROM employee WHERE salary >= 100000;
SELECT eid FROM employee WHERE salary >= 100000
SELECT eid FROM employee WHERE salary >= 100000
SELECT eid FROM employee WHERE salary >= 100000
SELECT count(*) , Grape FROM wine GROUP BY Grape
SELECT Grape, COUNT(*) FROM wine GROUP BY Grape
SELECT Grape, COUNT(*) FROM wine GROUP BY Grape
SELECT Grape, COUNT(*) FROM wine GROUP BY Grape
SELECT Grape, COUNT(DISTINCT Name) FROM wine GROUP BY Grape
SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)
SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)
SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)
SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)
SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)
SELECT Name, Class, Rank FROM captain
SELECT Name, Class, Rank FROM captain
SELECT Name, Class, Rank FROM captain
SELECT C.Name AS Captain_Name, C.Class AS Captain_Classification, C.Rank AS Captain_Rank, S.Name AS Ship_Name FROM Captain AS C JOIN Ship AS S ON C.Ship_ID = S.Ship_ID;
SELECT Name, Class, Rank FROM captain;
SELECT Pilot_name FROM pilot ORDER BY Rank ASC
SELECT Pilot_name FROM pilot ORDER BY Rank ASC
SELECT Pilot_name FROM pilot ORDER BY Rank ASC
SELECT Pilot_name FROM pilot ORDER BY Rank ASC
SELECT Pilot_name FROM pilot ORDER BY Rank ASC
SELECT CName FROM Course WHERE Credits = 3 OR (Credits = 1 AND Hours = '4 hours');
SELECT CName FROM Course WHERE Credits = 3 UNION SELECT CName FROM Course WHERE Credits = 1 AND Hours = '4'
SELECT CName FROM Course WHERE Credits = 3 OR (Credits = 1 AND Hours = '4 hours')
SELECT CName FROM Course WHERE Credits = 3 OR (Credits = 1 AND Hours = '4')
SELECT CName FROM Course WHERE Credits = 3 OR (Credits = 1 AND Hours = '4 hours')
SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'
SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'
SELECT COUNT(DISTINCT dst_apid) FROM routes WHERE alid = (SELECT alid FROM airlines WHERE name = 'American Airlines')
SELECT count(DISTINCT dst_apid) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines')
SELECT COUNT(DISTINCT dst_apid) FROM airlines AS a JOIN routes AS r ON a.alid = r.alid WHERE a.name = 'American Airlines';
SELECT count(*) FROM driver 
SELECT count(*) FROM driver
SELECT count(*) FROM driver 
SELECT count(*) FROM driver
SELECT count(*) FROM driver 
SELECT Advisor FROM Student WHERE city_code = "BAL"
SELECT Advisor FROM Student WHERE city_code = "BAL"
SELECT T2.Fname, T2.LName FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.StuID WHERE T1.city_code = "BAL"
SELECT Advisor FROM Student WHERE city_code = "BAL"
SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.StuID WHERE T1.city_code = "BAL"
SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor
SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor
SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor
SELECT T1.Advisor, COUNT(*) FROM Student AS T1 GROUP BY T1.Advisor
SELECT count(*) , Advisor FROM Student GROUP BY Advisor
SELECT T2.Shop_Name, T1.Carrier FROM stock AS T3 JOIN device AS T1 ON T3.Device_ID = T1.Device_ID JOIN shop AS T2 ON T3.Shop_ID = T2.Shop_ID
SELECT T2.Shop_Name, T1.Carrier FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID
SELECT T2.Shop_Name, T1.Carrier FROM stock AS T3 JOIN device AS T1 ON T3.Device_ID = T1.Device_ID JOIN shop AS T2 ON T3.Shop_ID = T2.Shop_ID;
SELECT T2.Shop_Name, T1.Carrier FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID;
SELECT Shop.Shop_Name, Device.Carrier FROM shop JOIN stock ON shop.Shop_ID = stock.Shop_ID JOIN device ON stock.Device_ID = device.Device_ID
SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;
SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;
SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;
SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;
SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2;
SELECT StuID FROM Student WHERE Sex = 'M'
SELECT StuID FROM Student WHERE Sex = 'M'
SELECT StuID FROM Student WHERE Sex = 'M'
SELECT StuID FROM Student WHERE Sex = 'M'
SELECT StuID FROM Student WHERE Sex = 'M'
SELECT Advisor FROM Student WHERE StuID = 1004;
SELECT Advisor FROM Student WHERE StuID = 1004
SELECT Advisor FROM Student WHERE StuID = 1004
SELECT T2.Fname, T2.LName FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.StuID WHERE T1.StuID = 1004;
SELECT T2.Fname, T2.LName FROM Student AS T1 JOIN Advisor AS T2 ON T1.Advisor = T2.Advisor_ID WHERE T1.StuID = 1004
SELECT Location FROM school WHERE School_ID NOT IN (SELECT School_ID FROM player)
SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)
SELECT Location FROM school WHERE School_ID NOT IN (SELECT School_ID FROM player)
SELECT Location FROM school WHERE School_ID NOT IN (SELECT School_ID FROM player)
SELECT Location FROM school WHERE School_ID NOT IN (SELECT School_ID FROM player)
SELECT Winery FROM wine GROUP BY Winery HAVING COUNT(*) >= 4
SELECT Winery FROM wine GROUP BY Winery HAVING count(*) >= 4
SELECT Winery FROM wine GROUP BY Winery HAVING COUNT(DISTINCT Name) >= 4
SELECT Winery FROM wine GROUP BY Winery HAVING COUNT(DISTINCT Name) >= 4;
SELECT Winery FROM wine GROUP BY Winery HAVING count(*) >= 4;
SELECT document_type_description FROM Ref_document_types WHERE document_type_name = "Film"
SELECT Document_Type_Description FROM Ref_Document_Types WHERE Document_Type_Name = "Film"
SELECT Document_Type_Description FROM Ref_Document_Types WHERE Document_Type_Name = "Film";
SELECT Document_Type_Description FROM Ref_Document_Types WHERE Document_Type_Name = 'Film'
SELECT * FROM Ref_Document_Types WHERE Document_Type_Name = "Film"
SELECT Enrollment FROM school WHERE Denomination != "Catholic"
SELECT Enrollment FROM school WHERE Denomination != "Catholic"
SELECT Enrollment FROM school WHERE Denomination != 'Catholic'
SELECT Enrollment FROM school WHERE Denomination != 'Catholic'
SELECT School, Enrollment FROM school WHERE Denomination != "Catholic"
SELECT count(*) , affiliation FROM university WHERE enrollment > 20000 GROUP BY affiliation
SELECT count(*) , affiliation FROM university WHERE enrollment > 20000 GROUP BY affiliation
SELECT count(*), Affiliation FROM university WHERE Enrollment > 20000 GROUP BY Affiliation
SELECT Affiliation, COUNT(*) FROM university WHERE Enrollment > 20000 GROUP BY Affiliation
SELECT Affiliation, COUNT(*) FROM university WHERE Enrollment > 20000 GROUP BY Affiliation
SELECT Shop_Name FROM shop ORDER BY Open_Year ASC
SELECT Shop_Name FROM shop ORDER BY Open_Year ASC
SELECT Shop_Name FROM shop ORDER BY Open_Year ASC
SELECT Shop_Name FROM shop ORDER BY Open_Year
SELECT Shop_Name FROM shop ORDER BY Open_Year
SELECT document_id FROM Documents WHERE document_type_code = "CV" AND document_id NOT IN (SELECT document_id FROM Documents_with_Expenses)
SELECT Document_ID FROM Documents WHERE Document_Type_Code = 'CV' AND Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)
SELECT document_id FROM Documents WHERE document_type_code = "CV" AND document_id NOT IN (SELECT document_id FROM Documents_with_expenses)
SELECT Document_ID FROM Documents WHERE Document_Type_Code = 'CV' AND Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)
SELECT Document_ID FROM Documents WHERE Document_Type_Code = 'CV' AND Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)
SELECT count(*) FROM Statements
SELECT count(*) FROM Statements
SELECT count(*) FROM Statements
SELECT count(*) FROM Statements
SELECT count(*) FROM Statements
SELECT test_result , COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC
SELECT test_result, COUNT(DISTINCT student_id) FROM Student_Tests_Taken INNER JOIN Student_Course_Enrolment ON Student_Tests_Taken.registration_id = Student_Course_Enrolment.registration_id GROUP BY test_result
SELECT test_result, COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC
SELECT test_result, COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC
SELECT test_result, COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC
SELECT Founded FROM university WHERE School_ID = (SELECT School_ID FROM university ORDER BY Enrollment DESC LIMIT 1)
SELECT Founded FROM university ORDER BY Enrollment DESC LIMIT 1
SELECT Founded FROM university ORDER BY Enrollment DESC LIMIT 1
SELECT Founded FROM university WHERE Enrollment = (SELECT MAX(Enrollment) FROM university)
SELECT Founded FROM university WHERE Enrollment = (SELECT MAX(Enrollment) FROM university)
SELECT Fname, Lname FROM Student
SELECT Fname, Lname FROM Student
SELECT Fname, LName FROM Student
SELECT Fname, LName FROM Student
SELECT Fname, LName FROM Student
SELECT * FROM basketball_match 
SELECT * FROM basketball_match 
SELECT * FROM basketball_match
SELECT * FROM basketball_match 
SELECT * FROM basketball_match 
SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu';
SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu' 
SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu'
SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu'
SELECT avg(price) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu'
SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1
SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1
SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1
SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1
SELECT aid, name FROM aircraft ORDER BY distance DESC LIMIT 1
SELECT CName FROM Course WHERE Credits = 1;
SELECT CName FROM Course WHERE Credits = 1;
SELECT CName FROM Course WHERE Credits = 1
SELECT CName FROM Course WHERE Credits = 1
SELECT CName FROM Course WHERE Credits = 1;
SELECT country, COUNT(*) AS num_airlines FROM airlines GROUP BY country ORDER BY num_airlines DESC;
SELECT country, COUNT(DISTINCT alid) AS num_airlines FROM airlines GROUP BY country ORDER BY num_airlines DESC;
SELECT country, COUNT(*) AS num_airlines FROM airlines GROUP BY country ORDER BY num_airlines DESC;
SELECT count(*) , country FROM airlines GROUP BY country ORDER BY count(*) DESC
SELECT country, COUNT(*) AS airline_count FROM airlines GROUP BY country ORDER BY airline_count DESC;
SELECT subject_name FROM Subjects;
SELECT subject_name FROM Subjects;
SELECT subject_name FROM Subjects
SELECT subject_name FROM Subjects;
SELECT subject_name FROM Subjects;
SELECT avg(Price) FROM wine WHERE Appelation NOT IN (SELECT Appelation FROM appellations WHERE County != 'Sonoma')
SELECT avg(Price) FROM wine WHERE Appelation NOT IN (SELECT Appelation FROM appellations WHERE County != 'Sonoma')
SELECT avg(Price) FROM wine WHERE Appelation NOT IN (SELECT Appelation FROM appellations WHERE County != 'Sonoma')
SELECT AVG(Price) FROM wine WHERE State != 'Sonoma County'
SELECT avg(Price) FROM wine WHERE State != 'Sonoma County'
SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id;
SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id;
SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id;
SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id;
SELECT first_name, last_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id;
SELECT Home_city FROM driver WHERE age > 40 GROUP BY home_city HAVING count(*) >= 2
SELECT Home_city FROM driver WHERE Age > 40 GROUP BY Home_city HAVING count(*) >= 2;
SELECT Home_city FROM driver WHERE Age > 40 GROUP BY Home_city HAVING count(*) >= 2
SELECT Home_city FROM driver WHERE Age > 40 GROUP BY Home_city HAVING count(*) >= 2
SELECT Home_city FROM driver WHERE age > 40 GROUP BY Home_city HAVING COUNT(*) >= 2
SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1
SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1
SELECT Height FROM mountain WHERE Mountain_ID = (SELECT Mountain_ID FROM climber ORDER BY Points DESC LIMIT 1)
SELECT t1.Height * t2.Points AS Scaled_Height FROM mountain AS t1 JOIN climber AS t2 ON t1.Mountain_ID = t2.Mountain_ID ORDER BY t2.Points DESC LIMIT 1
SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1
SELECT Team FROM technician GROUP BY Team HAVING COUNT(*) >= 2
SELECT Team FROM technician GROUP BY Team HAVING COUNT(*) >= 2;
SELECT Team FROM technician GROUP BY Team HAVING COUNT(*) >= 2
SELECT Team FROM technician GROUP BY Team HAVING COUNT(*) >= 2
SELECT Team FROM technician GROUP BY Team HAVING COUNT(*) >= 2
SELECT Project_ID, COUNT(Document_ID) FROM Documents GROUP BY Project_ID
SELECT Project_ID, COUNT(*) FROM Documents GROUP BY Project_ID
SELECT Project_ID, COUNT(*) FROM Documents GROUP BY Project_ID
SELECT Project_ID, COUNT(*) FROM Documents GROUP BY Project_ID;
SELECT Project_ID, COUNT(*) FROM Documents GROUP BY Project_ID;
SELECT T2.Name, SUM(T1.Show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.Cinema_ID = T2.Cinema_ID GROUP BY T1.Cinema_ID
SELECT Cinema_ID, SUM(Show_times_per_day) AS Total_Show_Times_Per_Day FROM schedule GROUP BY Cinema_ID
SELECT sum(Show_times_per_day) , Cinema_ID FROM schedule GROUP BY Cinema_ID
SELECT Cinema_ID, SUM(Show_times_per_day) FROM schedule GROUP BY Cinema_ID
SELECT sum(Show_times_per_day), Cinema_ID FROM schedule GROUP BY Cinema_ID
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1
SELECT Courses.course_name FROM Courses JOIN Student_Course_Enrolment ON Courses.course_id = Student_Course_Enrolment.course_id GROUP BY Courses.course_name HAVING COUNT(DISTINCT Student_Course_Enrolment.student_id) = 1;
SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform
SELECT Software_Platform, COUNT(Device_ID) FROM device GROUP BY Software_Platform
SELECT Software_Platform, COUNT(Device_ID) FROM device GROUP BY Software_Platform
SELECT Software_Platform, COUNT(Device_ID) FROM device GROUP BY Software_Platform
SELECT Software_Platform, COUNT(*) FROM device GROUP BY Software_Platform
SELECT AllergyType, COUNT(Allergy) FROM Allergy_Type GROUP BY AllergyType
SELECT AllergyType, COUNT(Allergy) FROM Allergy_Type GROUP BY AllergyType
SELECT AllergyType, COUNT(*) FROM Allergy_Type GROUP BY AllergyType
SELECT AllergyType, COUNT(Allergy) FROM Allergy_Type JOIN Has_Allergy ON Allergy_Type.Allergy = Has_Allergy.Allergy GROUP BY AllergyType
SELECT AllergyType, COUNT(Allergy) FROM Allergy_Type GROUP BY AllergyType
SELECT T1.White , T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID
SELECT T1.White, T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID
SELECT T1.White, T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID
SELECT T1.White, T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID
SELECT T1.White, T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_name, contestant_number FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_name, contestant_number FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT employees.first_name, employees.job_id FROM employees JOIN departments ON employees.department_id = departments.department_id WHERE departments.department_name = 'Finance';
SELECT T1.first_name, T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'Finance';
SELECT employees.FIRST_NAME, employees.JOB_ID FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID WHERE departments.DEPARTMENT_NAME = 'Finance';
SELECT FIRST_NAME, JOB_ID FROM employees WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM departments WHERE DEPARTMENT_NAME = 'Finance')
SELECT first_name, job_id FROM employees WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Finance')
SELECT city, COUNT(*) FROM airports GROUP BY city HAVING COUNT(*) > 1;
SELECT city, COUNT(*) AS num_airports FROM airports GROUP BY city HAVING COUNT(*) > 1;
SELECT city, COUNT(*) AS total_airports FROM airports GROUP BY city HAVING COUNT(*) > 1;
SELECT city, COUNT(*) AS airport_count FROM airports GROUP BY city HAVING COUNT(*) > 1;
SELECT city, COUNT(*) AS num_airports FROM airports GROUP BY city HAVING COUNT(*) > 1;
SELECT count(*) FROM aircraft
SELECT count(*) FROM aircraft
SELECT count(*) FROM aircraft
SELECT count(*) FROM aircraft
SELECT count(*) FROM aircraft
SELECT Name FROM editor WHERE Age > 25
SELECT Name FROM editor WHERE Age > 25
SELECT Name FROM editor WHERE Age > 25
SELECT Name FROM editor WHERE Age > 25
SELECT Name FROM editor WHERE Age > 25
SELECT Duration FROM actor ORDER BY age DESC LIMIT 1
SELECT Duration FROM actor ORDER BY age DESC LIMIT 1
SELECT Duration FROM actor ORDER BY age DESC LIMIT 1
SELECT Duration FROM actor WHERE age = (SELECT max(age) FROM actor)
SELECT Duration FROM actor ORDER BY age DESC LIMIT 1
SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)
SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)
SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)
SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)
SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)
SELECT Grape, Appelation FROM wine;
SELECT Grape, Appelation FROM wine
SELECT w.Grape, w.Appelation FROM wine AS w JOIN grapes AS g ON w.Grape = g.Grape JOIN appellations AS a ON w.Appelation = a.Appelation;
SELECT w.Grape, w.Appelation FROM wine w
SELECT Grape, Appelation FROM wine
SELECT first_name, last_name, salary FROM employees WHERE first_name LIKE '%m';
SELECT first_name, last_name, salary FROM employees WHERE first_name LIKE '%m';
SELECT first_name, last_name, salary FROM employees WHERE first_name LIKE '%m';
SELECT first_name, last_name, salary FROM employees WHERE first_name LIKE '%m';
SELECT first_name, last_name, salary FROM employees WHERE first_name LIKE '%m'
SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'
SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'
SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'
SELECT phone_number, state, created FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'
SELECT V.created, A.state, V.phone_number FROM VOTES V JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number JOIN AREA_CODE_STATE A ON V.state = A.state WHERE C.contestant_name = 'Tabatha Gehling'
SELECT StuID FROM Student WHERE Age > 20
SELECT StuID FROM Student WHERE Age > 20
SELECT StuID FROM Student WHERE Age > 20
SELECT StuID FROM Student WHERE Age > 20
SELECT StuID FROM Student WHERE Age >= 21
SELECT Area, County FROM appellations;
SELECT Area, County FROM appellations;
SELECT Area, County FROM appellations
SELECT County, Area FROM appellations
SELECT Area, County FROM appellations
SELECT DISTINCT Theme FROM journal
SELECT DISTINCT Theme FROM journal 
SELECT DISTINCT Theme FROM journal 
SELECT DISTINCT Theme FROM journal 
SELECT DISTINCT Theme FROM journal
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id WHERE T2.value_points > 70;
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id WHERE T2.value_points > 70;
SELECT T2.Name FROM technician AS T2 JOIN repair_assignment AS T1 ON T2.technician_id = T1.technician_id JOIN machine AS T3 ON T1.Machine_ID = T3.Machine_ID WHERE T3.value_points > 70
SELECT t.Name FROM technician t JOIN repair_assignment ra ON t.technician_id = ra.technician_id JOIN machine m ON ra.Machine_ID = m.Machine_ID WHERE m.value_points > 70;
SELECT T2.Name FROM technician AS T2 JOIN repair_assignment AS T1 ON T1.technician_id = T2.technician_id JOIN machine AS T3 ON T1.Machine_ID = T3.Machine_ID WHERE T3.value_points > 70
SELECT LName FROM Student WHERE Sex = "F" ORDER BY Age DESC;
SELECT LName FROM Student WHERE Sex = 'F' ORDER BY Age DESC;
SELECT LName FROM Student WHERE Sex = 'F' ORDER BY Age DESC
SELECT LName FROM Student WHERE Sex = 'F' ORDER BY Age DESC;
SELECT LName FROM Student WHERE Sex = 'F' ORDER BY Age DESC;
SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*) >= 2
SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T2.Editor_ID HAVING COUNT(*) >= 2
SELECT T2.Name FROM editor AS T2 JOIN journal_committee AS T1 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Editor_ID HAVING COUNT(*) >= 2
SELECT Name FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee GROUP BY Editor_ID HAVING COUNT(*) >= 2)
SELECT T2.Name FROM editor AS T2 JOIN journal_committee AS T1 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Editor_ID HAVING COUNT(*) >= 2
SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900;
SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900
SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900
SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900
SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900
SELECT T3.Name , T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id;
SELECT T3.Name , T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID
SELECT T2.Name, T3.Machine_series FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_id = T2.technician_id JOIN machine AS T3 ON T1.Machine_ID = T3.Machine_ID
SELECT T2.Name, T2.Machine_series FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_id = T2.technician_id JOIN machine AS T3 ON T1.Machine_ID = T3.Machine_ID;
SELECT T1.Name, T2.Machine_series FROM technician AS T1 JOIN repair_assignment AS T2 ON T1.technician_id = T2.technician_id
SELECT company, headquarters FROM company ORDER BY market_value DESC;
SELECT Company, Headquarters FROM company ORDER BY Market_Value DESC;
SELECT Company, Headquarters FROM company ORDER BY Market_Value DESC;
SELECT Company, Headquarters FROM company ORDER BY Market_Value DESC
SELECT Company, Headquarters FROM company ORDER BY Market_Value DESC
SELECT T1.Name, T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID
SELECT T1.Name, T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID
SELECT T2.Name, T1.Height FROM climber AS T2 JOIN mountain AS T1 ON T2.Mountain_ID = T1.Mountain_ID
SELECT T1.Name, T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID
SELECT T1.Name, T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID
SELECT T1.Fname , T1.Lname FROM Faculty AS T1 JOIN Member_of AS T2 ON T1.FacID = T2.FacID WHERE T2.DNO = 520;
SELECT T1.Fname , T1.Lname FROM Faculty AS T1 JOIN Member_of AS T2 ON T1.FacID = T2.FacID WHERE T2.DNO = 520;
SELECT Fname, Lname FROM Faculty JOIN Member_of ON Faculty.FacID = Member_of.FacID WHERE Member_of.DNO = 520
SELECT Fname, Lname FROM Faculty JOIN Member_of ON Faculty.FacID = Member_of.FacID WHERE Member_of.DNO = 520;
SELECT Fname, Lname FROM Faculty JOIN Member_of ON Faculty.FacID = Member_of.FacID WHERE Member_of.DNO = 520
SELECT T2.Name FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = "Monterey" AND T2.Price < 50
SELECT T2.Name FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = "Monterey" AND T2.Price < 50
SELECT Name FROM wine WHERE Price < 50 AND Appelation IN (SELECT Appelation FROM appellations WHERE County = "Monterey")
SELECT Name FROM wine WHERE Price < 50 AND Appelation IN (SELECT Appelation FROM appellations WHERE County = "Monterey")
SELECT Name FROM wine WHERE Price < 50 AND Appelation IN (SELECT Appelation FROM appellations WHERE County = "Monterey")
SELECT AllergyType FROM Allergy_Type GROUP BY AllergyType ORDER BY count(*) ASC LIMIT 1;
SELECT AllergyType FROM Allergy_Type GROUP BY AllergyType ORDER BY count(*) ASC LIMIT 1
SELECT T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy GROUP BY T1.AllergyType ORDER BY count(*) ASC LIMIT 1
SELECT AllergyType FROM Allergy_Type WHERE Allergy IN (SELECT Allergy FROM Has_Allergy GROUP BY Allergy ORDER BY count(*) ASC LIMIT 1)
SELECT AllergyType FROM Allergy_Type JOIN Has_Allergy ON Allergy_Type.Allergy = Has_Allergy.Allergy GROUP BY AllergyType ORDER BY COUNT(*) ASC LIMIT 1
SELECT * FROM employees WHERE department_id IS NULL 
SELECT * FROM employees WHERE department_id IS NULL
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID FROM employees WHERE DEPARTMENT_ID IS NULL
SELECT * FROM employees WHERE department_id IS NULL
SELECT * FROM employees WHERE department_id IS NULL
SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = "Clara") AND first_name != "Clara"
SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = "Clara") AND first_name != "Clara"
SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = 'Clara') AND first_name != 'Clara'
SELECT T1.FIRST_NAME, T1.LAST_NAME, T1.HIRE_DATE FROM employees AS T1 JOIN employees AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID WHERE T2.FIRST_NAME != 'Clara' AND T2.LAST_NAME != 'Clara'
SELECT T1.FIRST_NAME, T1.LAST_NAME, T1.HIRE_DATE FROM employees AS T1 JOIN departments AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID WHERE T2.DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM employees WHERE FIRST_NAME = 'Clara' AND LAST_NAME = 'Clara') AND (T1.FIRST_NAME != 'Clara' OR T1.LAST_NAME != 'Clara');
SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Name, T2.Age, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme ASC;
SELECT T2.Name, T2.Age, T1.Theme FROM journal AS T1 JOIN journal_committee AS T3 ON T1.Journal_ID = T3.Journal_ID JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID ORDER BY T1.Theme ASC;
SELECT T2.Name, T2.Age, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme ASC
SELECT T2.Name, T2.Age, T1.Theme FROM journal_committee AS T3 JOIN journal AS T1 ON T3.Journal_ID = T1.Journal_ID JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID ORDER BY T1.Theme ASC
SELECT T2.Name, T2.Age, T1.Theme FROM journal_committee AS T3 JOIN journal AS T1 ON T3.Journal_ID = T1.Journal_ID JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID ORDER BY T1.Theme ASC;
SELECT max(gradepoint) , min(gradepoint) FROM Gradeconversion
SELECT max(gradepoint) , min(gradepoint) FROM Gradeconversion
SELECT max(gradepoint) , min(gradepoint) FROM Gradeconversion
SELECT max(gradepoint) , min(gradepoint) FROM Gradeconversion
SELECT MAX(gradepoint), MIN(gradepoint) FROM Gradeconversion
SELECT Team, Starting_Year FROM technician
SELECT Team, Starting_Year FROM technician
SELECT Team, Starting_Year FROM technician
SELECT Team, Starting_Year FROM technician
SELECT Team, Starting_Year FROM technician
SELECT count(*) FROM routes AS r JOIN airports AS a ON r.dst_apid = a.apid JOIN airlines AS al ON r.alid = al.alid WHERE a.country = 'Italy' AND al.name = 'American Airlines'
SELECT count(*) FROM routes AS R JOIN airports AS A ON R.dst_apid = A.apid JOIN airlines AS AL ON R.alid = AL.alid WHERE A.country = 'Italy' AND AL.name = 'American Airlines'
SELECT COUNT(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid JOIN airports AS T3 ON T2.dst_apid = T3.apid WHERE T1.name = 'American Airlines' AND T3.country = 'Italy';
SELECT count(*) FROM routes WHERE alid IN (SELECT alid FROM airlines WHERE name = 'American Airlines') AND dst_apid IN (SELECT apid FROM airports WHERE country = 'Italy')
SELECT count(*) FROM routes AS T1 JOIN airlines AS T2 ON T1.alid = T2.alid JOIN airports AS T3 ON T1.dst_apid = T3.apid WHERE T2.name = 'American Airlines' AND T3.country = 'Italy'
SELECT Statement_ID, Statement_Details FROM Statements;
SELECT Statement_ID, Statement_Details FROM Statements
SELECT Statement_ID, Statement_Details FROM Statements;
SELECT Statement_ID, Statement_Details FROM Statements
SELECT Statement_ID, Statement_Details FROM Statements
SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2
SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2
SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*) >= 2
SELECT T1.EMPLOYEE_ID FROM employees AS T1 JOIN job_history AS T2 ON T1.EMPLOYEE_ID = T2.EMPLOYEE_ID GROUP BY T1.EMPLOYEE_ID HAVING COUNT(DISTINCT T2.JOB_ID) > 1
SELECT EMPLOYEE_ID FROM job_history GROUP BY EMPLOYEE_ID HAVING COUNT(DISTINCT JOB_ID) >= 2
SELECT DPhone FROM Department WHERE Room = '268'
SELECT DPhone FROM Department WHERE Room = '268';
SELECT DPhone FROM Department WHERE Room = '268'
SELECT DPhone FROM Department WHERE Room = '268'
SELECT DPhone FROM Department WHERE Room = '268'
SELECT city_code, COUNT(*) FROM Student GROUP BY city_code
SELECT city_code, COUNT(*) FROM Student GROUP BY city_code;
SELECT city_code, COUNT(*) FROM Student GROUP BY city_code
SELECT city_code, COUNT(*) FROM Student GROUP BY city_code
SELECT city_code, COUNT(*) FROM Student GROUP BY city_code
SELECT avg(elevation) , country FROM airports GROUP BY country;
SELECT avg(elevation), country FROM airports GROUP BY country;
SELECT avg(elevation), country FROM airports GROUP BY country
SELECT country, avg(elevation) FROM airports GROUP BY country;
SELECT country, AVG(elevation) FROM airports GROUP BY country
SELECT max(Age) FROM Student
SELECT max(Age) FROM Student
SELECT MAX(Age) FROM Student
SELECT MAX(Age) FROM Student
SELECT MAX(Age) FROM Student
SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3
SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3
SELECT complaint_status_code, COUNT(*) FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3
SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3
SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING COUNT(*) > 3
SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99
SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99
SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99
SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99;
SELECT a.name FROM aircraft AS a JOIN flight AS f ON a.aid = f.aid WHERE f.flno = 99;
SELECT count(*) FROM Student
SELECT count(*) FROM Student
SELECT count(*) FROM Student
SELECT count(*) FROM Student
SELECT count(*) FROM Student
SELECT S.Fname, S.LName, G.gradepoint FROM Enrolled_in E JOIN Student S ON E.StuID = S.StuID JOIN Gradeconversion G ON E.Grade = G.lettergrade;
SELECT T3.Fname, T3.LName, T2.gradepoint FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID;
SELECT T1.Fname, T1.LName, T2.gradepoint FROM Student AS T1 JOIN Enrolled_in AS T3 ON T1.StuID = T3.StuID JOIN Gradeconversion AS T2 ON T3.Grade = T2.lettergrade;
SELECT T1.Fname, T1.LName, T2.gradepoint FROM Student AS T1 JOIN Enrolled_in AS T2 ON T1.StuID = T2.StuID
SELECT T1.Fname, T1.LName, T2.gradepoint FROM Student AS T1 JOIN Enrolled_in AS T2 ON T1.StuID = T2.StuID;
SELECT eid, name FROM employee ORDER BY salary DESC LIMIT 1
SELECT eid, name FROM employee ORDER BY salary DESC LIMIT 1
SELECT eid, name FROM employee ORDER BY salary DESC LIMIT 1
SELECT eid, name FROM employee ORDER BY salary DESC LIMIT 1
SELECT eid, name FROM employee ORDER BY salary DESC LIMIT 1
SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1
SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1
SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1
SELECT T2.County FROM wine AS T1 JOIN appellations AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Score > 90 GROUP BY T2.County ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.County FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY COUNT(*) DESC LIMIT 1
SELECT count(*) FROM airlines WHERE country = 'Russia';
SELECT count(*) FROM airlines WHERE country = 'Russia'
SELECT COUNT(*) FROM airlines WHERE country = 'Russia'
SELECT count(DISTINCT name) FROM airlines WHERE country = 'Russia'
SELECT count(*) FROM airlines WHERE country = 'Russia';
SELECT T1.first_name, T1.last_name, T1.salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T3.city = 'London'
SELECT employees.first_name, employees.last_name, employees.salary FROM employees JOIN departments ON employees.department_id = departments.department_id JOIN locations ON departments.location_id = locations.location_id WHERE locations.city = 'London';
SELECT first_name, last_name, salary FROM employees AS e JOIN departments AS d ON e.department_id = d.department_id JOIN locations AS l ON d.location_id = l.location_id WHERE l.city = 'London';
SELECT T1.first_name, T1.last_name, T1.salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T3.city = 'London'
SELECT first_name, last_name, salary FROM employees AS e JOIN departments AS d ON e.department_id = d.department_id JOIN locations AS l ON d.location_id = l.location_id WHERE l.city = 'London'
SELECT T2.Budget_Type_Code, T2.Budget_Type_Description, T1.Document_ID FROM Documents_with_Expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code;
SELECT T2.Budget_Type_Code, T2.Budget_Type_Description, T1.Document_ID FROM Documents_with_Expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code
SELECT T1.Budget_Type_Code, T2.Budget_Type_Description, T1.Document_ID FROM Documents_with_Expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code;
SELECT D.Document_ID, DE.Budget_Type_Code, BC.Budget_Type_Description FROM Documents_with_Expenses DE JOIN Documents D ON DE.Document_ID = D.Document_ID JOIN Ref_Budget_Codes BC ON DE.Budget_Type_Code = BC.Budget_Type_Code;
SELECT T2.Budget_Type_Code, T1.Budget_Type_Description, T2.Document_ID FROM Ref_Budget_Codes AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code;
SELECT count(*) FROM appellations WHERE County = 'Napa'
SELECT count(*) FROM appellations WHERE County = "Napa"
SELECT count(*) FROM appellations WHERE County = 'Napa';
SELECT count(*) FROM appellations WHERE County = 'Napa';
SELECT count(*) FROM appellations WHERE County = 'Napa';
SELECT Type FROM school GROUP BY Type HAVING COUNT(*) = 2
SELECT Type FROM school GROUP BY Type HAVING COUNT(*) = 2
SELECT Type FROM school JOIN school_bus ON school.School_ID = school_bus.School_ID GROUP BY Type HAVING COUNT(DISTINCT Driver_ID) = 2
SELECT Type FROM school GROUP BY Type HAVING COUNT(*) = 2
SELECT Type, COUNT(*) FROM school GROUP BY Type HAVING COUNT(*) = 2
SELECT Allergy, AllergyType FROM Allergy_Type;
SELECT Allergy, AllergyType FROM Allergy_Type
SELECT Allergy, AllergyType FROM Allergy_Type
SELECT Allergy, AllergyType FROM Allergy_Type
SELECT Allergy, AllergyType FROM Allergy_Type;
SELECT count(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.AllergyType = 'food' OR T2.AllergyType = 'animal')
SELECT count(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.AllergyType = "food" OR T2.AllergyType = "animal")
SELECT COUNT(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy WHERE AllergyType = 'Food' OR AllergyType = 'Animals')
SELECT count(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.AllergyType = 'food' OR T2.AllergyType = 'animal')
SELECT count(*) FROM Student WHERE Age > 18 AND StuID NOT IN (SELECT StuID FROM Has_Allergy WHERE AllergyType = 'food' OR AllergyType = 'animals')
SELECT Name FROM technician ORDER BY Age ASC
SELECT Name FROM technician ORDER BY Age ASC
SELECT Name FROM technician ORDER BY Age ASC
SELECT Name FROM technician ORDER BY Age ASC
SELECT Name FROM technician ORDER BY Age ASC
SELECT T1.subject_id, T2.subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id, T2.subject_name ORDER BY COUNT(*) ASC;
SELECT T1.subject_id, T2.subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id, T2.subject_name ORDER BY COUNT(*) ASC;
SELECT T1.subject_id, T2.subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id, T2.subject_name ORDER BY COUNT(*) ASC;
SELECT T1.subject_id, T2.subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id, T2.subject_name ORDER BY COUNT(*) ASC;
SELECT T1.subject_id, T2.subject_name, COUNT(*) AS course_count FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id, T2.subject_name ORDER BY course_count ASC;
SELECT Products.product_name, COUNT(Complaints.complaint_id) AS num_complaints FROM Products LEFT JOIN Complaints ON Products.product_id = Complaints.product_id GROUP BY Products.product_name;
SELECT t1.product_name, COUNT(*) FROM Products AS t1 JOIN Complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name
SELECT t1.product_name, COUNT(t2.complaint_id) AS total_complaints FROM Products AS t1 LEFT JOIN Complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name;
SELECT T3.product_name, COUNT(*) FROM Complaints AS T1 JOIN Products AS T3 ON T1.product_id = T3.product_id GROUP BY T3.product_id, T3.product_name
SELECT product_name, COUNT(*) FROM Products JOIN Complaints ON Products.product_id = Complaints.product_id GROUP BY product_name
SELECT DISTINCT t1.product_name FROM Products AS t1 JOIN Complaints AS t2 ON t1.product_id = t2.product_id JOIN Customers AS t3 ON t2.customer_id = t3.customer_id GROUP BY t3.customer_id ORDER BY COUNT(*) LIMIT 1;
SELECT DISTINCT p.product_name FROM Products p JOIN Complaints c ON p.product_id = c.product_id JOIN Customers cu ON c.customer_id = cu.customer_id GROUP BY cu.customer_id ORDER BY COUNT(*) LIMIT 1;
SELECT t2.product_name FROM Products AS t2 JOIN Complaints AS t1 ON t2.product_id = t1.product_id JOIN Customers AS t3 ON t1.customer_id = t3.customer_id GROUP BY t3.customer_id ORDER BY count(*) ASC LIMIT 1
SELECT p.product_name FROM Products p JOIN Complaints c ON p.product_id = c.product_id JOIN Customers cust ON c.customer_id = cust.customer_id GROUP BY p.product_name ORDER BY COUNT(c.customer_id) ASC LIMIT 1
SELECT DISTINCT p.product_name FROM Products p JOIN Complaints c ON p.product_id = c.product_id JOIN Customers cust ON c.customer_id = cust.customer_id GROUP BY cust.customer_id ORDER BY COUNT(*) LIMIT 1;
SELECT T2.Name FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "Red" AND T2.Price > 50
SELECT T2.Name FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "Red" AND T2.Price > 50;
SELECT Name FROM wine WHERE Grape IN (SELECT Grape FROM grapes WHERE Color = "red") AND Price > 50
SELECT Name FROM wine WHERE Grape IN (SELECT Grape FROM grapes WHERE Color = 'Red') AND Price > 50
SELECT T2.Name FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "Red" AND T2.Price > 50
SELECT T2.Name, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID;
SELECT T2.Name, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID
SELECT T2.Name, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID
SELECT T2.Name, T1.Theme FROM journal_committee AS T3 JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID JOIN journal AS T1 ON T3.Journal_ID = T1.Journal_ID;
SELECT T2.Name, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID;
SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)
SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)
SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)
SELECT name FROM employee WHERE salary > (SELECT AVG(salary) FROM employee)
SELECT name FROM employee WHERE salary > (SELECT avg(salary) FROM employee)
SELECT Name FROM city ORDER BY White DESC LIMIT 5
SELECT Name FROM city ORDER BY White DESC LIMIT 5
SELECT Name FROM city ORDER BY White DESC LIMIT 5
SELECT Name FROM city ORDER BY White DESC LIMIT 5
SELECT Name FROM city ORDER BY White DESC LIMIT 5
SELECT address_line_1, address_line_2 FROM Customers WHERE email_address = "vbogisich@example.org";
SELECT address_line_1 , address_line_2 FROM Customers WHERE email_address = "vbogisich@example.org"
SELECT address_line_1, address_line_2 FROM Customers WHERE email_address = "vbogisich@example.org";
SELECT address_line_1, address_line_2 FROM Customers WHERE email_address = "vbogisich@example.org"
SELECT address_line_1, address_line_2 FROM Customers WHERE email_address = "vbogisich@example.org";
SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1 
SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1
SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1
SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1
SELECT origin FROM flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy)
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy)
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Allergy)
SELECT Fname, LName FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Allergy)
SELECT Fname, LName FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Allergy)
SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3
SELECT DISTINCT Range FROM mountain WHERE Mountain_ID IN (SELECT Mountain_ID FROM mountain ORDER BY Prominence DESC LIMIT 3)
SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3
SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3
SELECT DISTINCT Range FROM mountain WHERE Mountain_ID IN (SELECT Mountain_ID FROM mountain ORDER BY Prominence DESC LIMIT 3)
SELECT max(area_code) , min(area_code) FROM AREA_CODE_STATE
SELECT max(area_code) , min(area_code) FROM AREA_CODE_STATE
SELECT max(area_code) , min(area_code) FROM AREA_CODE_STATE
SELECT max(area_code) , min(area_code) FROM AREA_CODE_STATE
SELECT max(area_code) , min(area_code) FROM AREA_CODE_STATE
SELECT EMPLOYEE_ID FROM employees WHERE SALARY > (SELECT AVG(SALARY) FROM employees)
SELECT employee_id FROM employees WHERE salary > (SELECT AVG(salary) FROM employees)
SELECT EMPLOYEE_ID FROM employees WHERE SALARY > (SELECT AVG(SALARY) FROM employees)
SELECT EMPLOYEE_ID FROM employees WHERE SALARY > (SELECT AVG(SALARY) FROM employees)
SELECT employee_id FROM employees WHERE salary > (SELECT AVG(salary) FROM employees)
SELECT count(*) FROM Student_Tests_Taken WHERE test_result = "Fail"
SELECT count(*) FROM Student_Tests_Taken WHERE test_result = "Fail"
SELECT count(*) FROM Student_Tests_Taken WHERE test_result = "Fail"
SELECT COUNT(*) FROM Student_Tests_Taken WHERE test_result = 'Failure'
SELECT count(*) FROM Student_Tests_Taken WHERE test_result = "Fail"
SELECT country FROM airports ORDER BY elevation DESC LIMIT 1;
SELECT country FROM airports ORDER BY elevation DESC LIMIT 1
SELECT country FROM airports ORDER BY elevation DESC LIMIT 1
SELECT country FROM airports ORDER BY elevation DESC LIMIT 1
SELECT country FROM airports ORDER BY elevation DESC LIMIT 1
SELECT T3.Name, T2.Title, T1.Date, T1.Price FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID JOIN cinema AS T3 ON T1.Cinema_ID = T3.Cinema_ID
SELECT C.Name, F.Title, S.Date, S.Price FROM schedule AS S JOIN cinema AS C ON S.Cinema_ID = C.Cinema_ID JOIN film AS F ON S.Film_ID = F.Film_ID;
SELECT T2.Name, T1.Title, T3.Date, T3.Price FROM film AS T1 JOIN schedule AS T3 ON T1.Film_ID = T3.Film_ID JOIN cinema AS T2 ON T2.Cinema_ID = T3.Cinema_ID;
SELECT T2.Name, T1.Title, T3.Date, T3.Price FROM film AS T1 JOIN schedule AS T3 ON T1.Film_ID = T3.Film_ID JOIN cinema AS T2 ON T2.Cinema_ID = T3.Cinema_ID
SELECT C.Name, F.Title, S.Date, S.Price FROM cinema C JOIN schedule S ON C.Cinema_ID = S.Cinema_ID JOIN film F ON S.Film_ID = F.Film_ID;
SELECT Headquarters FROM company WHERE Headquarters NOT IN (SELECT Headquarters FROM company WHERE Main_Industry = 'Banking')
SELECT Headquarters FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM company WHERE Main_Industry = 'Banking')
SELECT Headquarters FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company WHERE Company_ID IN (SELECT Company_ID FROM company WHERE Main_Industry = 'Banking'))
SELECT Headquarters FROM company WHERE Main_Industry != 'Banking'
SELECT Headquarters FROM company WHERE Company_ID NOT IN (SELECT Company_ID FROM station_company WHERE Company_ID IN (SELECT Company_ID FROM company WHERE Main_Industry = 'Banking'))
SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50
SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50
SELECT name FROM airports WHERE elevation >= -50 AND elevation <= 50
SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50;
SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50
SELECT DISTINCT state, created FROM VOTES
SELECT state, created FROM VOTES
SELECT state, created FROM votes GROUP BY state, created
SELECT state, COUNT(*) FROM VOTES GROUP BY state
SELECT state, created FROM VOTES
SELECT Location FROM cinema WHERE Openning_year = 2010 INTERSECT SELECT Location FROM cinema WHERE Openning_year = 2011
SELECT LOCATION FROM cinema WHERE openning_year = 2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year = 2011
SELECT Location FROM cinema WHERE Openning_year = 2010 INTERSECT SELECT Location FROM cinema WHERE Openning_year = 2011
SELECT Location FROM cinema WHERE Openning_year = 2010 INTERSECT SELECT Location FROM cinema WHERE Openning_year = 2011
SELECT Location FROM cinema WHERE Openning_year IN (2010, 2011)
SELECT t1.Name FROM driver AS t1 JOIN school_bus AS t2 ON t1.Driver_ID = t2.Driver_ID ORDER BY t2.Years_Working DESC LIMIT 1
SELECT t1.Name FROM driver AS t1 JOIN school_bus AS t2 ON t1.Driver_ID = t2.Driver_ID ORDER BY t2.Years_Working DESC LIMIT 1
SELECT t1.Name FROM driver AS t1 JOIN school_bus AS t2 ON t1.Driver_ID = t2.Driver_ID ORDER BY t2.Years_Working DESC LIMIT 1
SELECT Name FROM driver WHERE Driver_ID IN (SELECT Driver_ID FROM school_bus ORDER BY Years_Working DESC LIMIT 1)
SELECT t1.Name FROM driver AS t1 JOIN school_bus AS t2 ON t1.Driver_ID = t2.Driver_ID ORDER BY t2.Years_Working DESC LIMIT 1
SELECT count(*) FROM employee
SELECT count(*) FROM employee
SELECT count(*) FROM employee
SELECT count(*) FROM employee
SELECT count(*) FROM employee;
SELECT T1.Document_Type_Name, T1.Document_Type_Description, T2.Document_Date FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code
SELECT T1.Document_Type_Name, T1.Document_Type_Description, T2.Document_Date FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code;
SELECT T1.Document_Type_Name, T1.Document_Type_Description, T2.Document_Date FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code
SELECT T1.Document_Type_Name, T1.Document_Type_Description, T2.Document_Date FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code;
SELECT T1.Document_Type_Name, T1.Document_Type_Description, T2.Document_Date FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code;
SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = "Karson"
SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = "Karson"
SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = "Karson"
SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = "Karson"
SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = "Karson"
SELECT DISTINCT department_id FROM employees GROUP BY department_id, manager_id HAVING COUNT(employee_id) >= 4;
SELECT DISTINCT department_id FROM employees GROUP BY department_id, manager_id HAVING COUNT(employee_id) > 3;
SELECT DISTINCT department_id FROM employees GROUP BY department_id, manager_id HAVING COUNT(employee_id) >= 4
SELECT DISTINCT department_id FROM employees GROUP BY department_id, manager_id HAVING COUNT(employee_id) >= 4
SELECT DEPARTMENT_ID FROM employees GROUP BY DEPARTMENT_ID, MANAGER_ID HAVING COUNT(EMPLOYEE_ID) >= 4
SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )
SELECT count(*) FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)
SELECT count(*) FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)
SELECT count(*) FROM Documents WHERE document_id NOT IN (SELECT document_id FROM Documents_with_expenses)
SELECT count(*) FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)
SELECT T1.Team, T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID
SELECT player.Team, school.Location FROM player JOIN school ON player.School_ID = school.School_ID;
SELECT Player.Player, Player.Team, School.Location FROM Player JOIN School ON Player.School_ID = School.School_ID;
SELECT T1.Player, T1.Team, T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID
SELECT T1.Player, T1.Team, T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID
SELECT T3.course_name FROM Courses AS T3 JOIN Student_Course_Enrolment AS T2 ON T3.course_id = T2.course_id GROUP BY T3.course_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT course_name FROM Courses JOIN Student_Course_Enrolment ON Courses.course_id = Student_Course_Enrolment.course_id GROUP BY course_name ORDER BY COUNT(DISTINCT Student_Course_Enrolment.student_id) DESC LIMIT 1;
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank;
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank;
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank ASC;
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank ASC;
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN technician AS T3 ON T1.technician_id = T3.technician_id ORDER BY T2.quality_rank;
SELECT count(*) FROM driver WHERE Home_city = 'Hartford' OR Age < 40
SELECT count(*) FROM driver WHERE home_city = 'Hartford' OR age < 40
SELECT count(*) FROM driver WHERE Home_city = 'Hartford' OR Age < 40
SELECT count(*) FROM driver WHERE home_city = 'Hartford' OR age < 40
SELECT count(*) FROM driver WHERE Home_city = 'Hartford' OR Age < 40
SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT count(*) FROM Ref_Budget_Codes
SELECT COUNT(*) FROM Ref_Budget_Codes;
SELECT count(*) FROM Ref_Budget_Codes;
SELECT count(DISTINCT Budget_Type_Code) FROM Ref_Budget_Codes
SELECT count(*) FROM Ref_Budget_Codes
SELECT min(distance) , avg(distance) , max(distance) FROM aircraft
SELECT min(distance) , avg(distance) , max(distance) FROM aircraft
SELECT min(distance) , avg(distance) , max(distance) FROM aircraft
SELECT min(distance) , avg(distance) , max(distance) FROM aircraft
SELECT min(distance) , avg(distance) , max(distance) FROM aircraft
SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1
SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1
SELECT Result FROM musical GROUP BY Result ORDER BY COUNT(*) DESC LIMIT 1
SELECT Result FROM musical GROUP BY Result ORDER BY count(*) DESC LIMIT 1
SELECT Result FROM musical GROUP BY Result ORDER BY COUNT(*) DESC LIMIT 1
SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200
SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200
SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200
SELECT Country FROM mountain WHERE Height > 5600 UNION SELECT Country FROM mountain WHERE Height < 5200
SELECT Country FROM mountain WHERE Height > 5600 AND Height < 5200
SELECT avg(Price) , avg(Score) , Appelation FROM wine GROUP BY Appelation
SELECT avg(Price) , avg(Score) , Appelation FROM wine GROUP BY Appelation
SELECT avg(Price) , avg(Score) , Appelation FROM wine GROUP BY Appelation
SELECT avg(Price) , avg(Score) , Appelation FROM wine GROUP BY Appelation
SELECT Appelation, AVG(Price), AVG(Score) FROM wine GROUP BY Appelation;
SELECT * FROM Course ORDER BY Credits 
SELECT * FROM Course ORDER BY Credits ASC 
SELECT * FROM Course ORDER BY Credits ASC
SELECT * FROM Course ORDER BY Credits ASC 
SELECT * FROM Course ORDER BY Credits ASC
SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = "Pass"
SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = "Pass"
SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = "Pass"
SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'
SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result = 'Pass'
SELECT AllergyType FROM Allergy_Type WHERE Allergy = "Cat"
SELECT AllergyType FROM Allergy_Type WHERE Allergy = "Cat";
SELECT AllergyType FROM Allergy_Type WHERE Allergy = "cats"
SELECT AllergyType FROM Allergy_Type WHERE Allergy = 'cat'
SELECT AllergyType FROM Allergy_Type WHERE Allergy = "cats"
SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment
SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment
SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment
SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment
SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment
SELECT count(DISTINCT School_ID) FROM basketball_match
SELECT COUNT(DISTINCT School_ID) FROM basketball_match
SELECT count(*) FROM university WHERE School_ID IN (SELECT DISTINCT School_ID FROM basketball_match)
SELECT COUNT(DISTINCT School_ID) FROM basketball_match
SELECT count(DISTINCT School_ID) FROM basketball_match
SELECT CName FROM Course JOIN Enrolled_in ON Course.CID = Enrolled_in.CID GROUP BY Course.CID HAVING COUNT(*) >= 5;
SELECT CName FROM Course JOIN Enrolled_in ON Course.CID = Enrolled_in.CID GROUP BY Course.CID HAVING COUNT(*) >= 5;
SELECT CName FROM Course WHERE CID IN (SELECT CID FROM Enrolled_in GROUP BY CID HAVING COUNT(*) >= 5)
SELECT CName FROM Course WHERE CID IN (SELECT CID FROM Enrolled_in GROUP BY CID HAVING COUNT(StuID) >= 5)
SELECT T1.CName FROM Course AS T1 JOIN Enrolled_in AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT(*) >= 5
SELECT city_code FROM Student WHERE LName = "Kim"
SELECT city_code FROM Student WHERE LName = "Kim"
SELECT city_code FROM Student WHERE LName = "Kim"
SELECT city_code FROM Student WHERE LName = "Kim"
SELECT city_code FROM Student WHERE LName = "Kim"
SELECT Room FROM Faculty WHERE Rank = "Professor" AND Building = "NEB"
SELECT Room FROM Faculty WHERE Rank = "Professor" AND Building = "NEB"
SELECT Room FROM Faculty WHERE Building = "NEB";
SELECT Room FROM Faculty WHERE Rank = "Professor" AND Building = "NEB"
SELECT Room FROM Faculty WHERE Building = 'NEB'
SELECT T2.Fname , T2.Lname FROM MINOR_IN AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.DNO = 140
SELECT T2.Fname , T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID = T2.StuID WHERE T1.DNO = 140
SELECT Fname, LName FROM Student JOIN Minor_in ON Student.StuID = Minor_in.StuID WHERE Minor_in.DNO = 140;
SELECT T1.Fname, T1.Lname FROM Student AS T1 JOIN Minor_in AS T2 ON T1.StuID = T2.StuID WHERE T2.DNO = 140;
SELECT T2.Fname, T2.Lname FROM MINOR_IN AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.DNO = 140;
SELECT T1.address_line_1, T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING COUNT(*) >= 2;
SELECT T1.address_line_1, T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING COUNT(*) >= 2
SELECT address_line_1, author_id FROM Course_Authors_and_Tutors WHERE author_id IN ( SELECT author_id FROM Courses GROUP BY author_id HAVING COUNT(*) >= 2 )
SELECT T1.address_line_1, T1.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T1.author_id HAVING COUNT(*) >= 2
SELECT author_id, address_line_1 FROM Course_Authors_and_Tutors WHERE author_id IN ( SELECT author_id FROM Courses GROUP BY author_id HAVING COUNT(*) >= 2 )
SELECT personal_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)
SELECT personal_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)
SELECT personal_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)
SELECT personal_name FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)
SELECT T1.personal_name FROM Students AS T1 LEFT JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.registration_id IS NULL
SELECT t2.Team_Name FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t1.Enrollment < (SELECT AVG(Enrollment) FROM university)
SELECT t2.Team_Name FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t1.Enrollment < (SELECT AVG(Enrollment) FROM university)
SELECT Team_Name FROM basketball_match WHERE School_ID IN (SELECT School_ID FROM university WHERE Enrollment < (SELECT AVG(Enrollment) FROM university))
SELECT t1.Team_Name FROM basketball_match AS t1 JOIN university AS t2 ON t1.School_ID = t2.School_ID WHERE t2.Enrollment < (SELECT AVG(Enrollment) FROM university)
SELECT Team_Name FROM basketball_match WHERE School_ID IN (SELECT School_ID FROM university WHERE Enrollment < (SELECT AVG(Enrollment) FROM university))
SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID GROUP BY t2.Ship_ID HAVING COUNT(*) > 1
SELECT t1.Name FROM Ship AS t1 JOIN Captain AS t2 ON t1.Ship_ID = t2.Ship_ID GROUP BY t1.Ship_ID HAVING COUNT(*) > 1
SELECT Ship.Name FROM Ship JOIN Captain ON Ship.Ship_ID = Captain.Ship_ID GROUP BY Ship.Ship_ID HAVING COUNT(*) > 1
SELECT T2.Name FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID GROUP BY T1.Ship_ID HAVING COUNT(*) > 1
SELECT Name FROM Ship JOIN captain ON Ship.Ship_ID = captain.Ship_ID GROUP BY Ship.Name HAVING COUNT(*) > 1
SELECT T2.country, T1.name, COUNT(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.country, T1.name;
SELECT T1.country, T1.name, COUNT(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.country, T1.name
SELECT T3.name, T2.country, COUNT(*) FROM routes AS T1 JOIN airlines AS T3 ON T1.alid = T3.alid JOIN airports AS T2 ON T1.dst_apid = T2.apid GROUP BY T3.name, T2.country
SELECT Airlines.country, Airlines.name, COUNT(*) AS route_count FROM routes JOIN airlines ON routes.alid = airlines.alid GROUP BY Airlines.country, Airlines.name;
SELECT T1.country, T1.name, count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.country, T1.name
SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = "Cathrine"
SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = "Cathrine"
SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = "Cathrine"
SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = "Cathrine"
SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name = "Cathrine"
SELECT employees.employee_id, jobs.job_title FROM employees JOIN jobs ON employees.job_id = jobs.job_id WHERE employees.department_id = 80;
SELECT T1.employee_id, T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80;
SELECT EMPLOYEE_ID, JOB_TITLE FROM employees WHERE DEPARTMENT_ID = 80;
SELECT EMPLOYEE_ID, JOB_TITLE FROM employees WHERE DEPARTMENT_ID = 80;
SELECT EMPLOYEE_ID, JOB_TITLE FROM employees WHERE DEPARTMENT_ID = 80;
SELECT headquarters FROM company WHERE Main_Industry = 'Banking' GROUP BY headquarters HAVING COUNT(*) >= 2;
SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' GROUP BY Headquarters HAVING COUNT(*) >= 2
SELECT t1.Headquarters FROM company AS t1 JOIN station_company AS t2 ON t1.Company_ID = t2.Company_ID WHERE t1.Main_Industry = "Banking" GROUP BY t1.Headquarters HAVING count(*) >= 2
SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' GROUP BY Headquarters HAVING COUNT(DISTINCT Company_ID) >= 2;
SELECT Headquarters FROM company WHERE Main_Industry = 'Banking' GROUP BY Headquarters HAVING COUNT(*) >= 2
SELECT Position, Team FROM pilot
SELECT Position, Team FROM pilot
SELECT Position, Team FROM pilot
SELECT T1.Position, T1.Team FROM pilot AS T1
SELECT Position, Team FROM pilot
SELECT document_id FROM Documents_with_expenses WHERE budget_type_code = 'SF'
SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = 'SF'
SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = 'SF'
SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = 'SF'
SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = 'SF'
SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T3 ON T1.DNO = T3.DNO JOIN FACULTY AS T2 ON T3.FacID = T2.FacID WHERE T1.DName = "Computer Science"
SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T3 ON T1.DNO = T3.DNO JOIN FACULTY AS T2 ON T3.FacID = T2.FacID WHERE T1.DName = "Computer Science"
SELECT Lname FROM Faculty AS f JOIN Member_of AS m ON f.FacID = m.FacID JOIN Department AS d ON m.DNO = d.DNO WHERE d.DName = 'Computer Science'
SELECT Lname FROM Faculty JOIN Member_of ON Faculty.FacID = Member_of.FacID JOIN Department ON Member_of.DNO = Department.DNO WHERE Department.DName = 'Computer Science'
SELECT T2.Lname FROM Department AS T1 JOIN Faculty AS T2 ON T1.DNO = T2.Building JOIN Member_of AS T3 ON T2.FacID = T3.FacID WHERE T1.DName = "Computer Science"
SELECT max(Points) FROM climber WHERE Country = "United Kingdom"
SELECT max(Points) FROM climber WHERE Country = "United Kingdom"
SELECT max(Points) FROM climber WHERE Country = 'United Kingdom'
SELECT MAX(Points) FROM climber WHERE Country = "United Kingdom"
SELECT MAX(Points) FROM climber WHERE Country = 'United Kingdom'
SELECT Major, COUNT(*) FROM Student GROUP BY Major
SELECT Major, COUNT(*) FROM Student GROUP BY Major
SELECT T1.Major, COUNT(*) FROM Student AS T1 GROUP BY T1.Major
SELECT Major, COUNT(*) FROM Student GROUP BY Major
SELECT T2.AllergyType, COUNT(*) FROM Has_Allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy GROUP BY T2.AllergyType
SELECT T3.Location FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T1.Station_ID = T3.Station_ID WHERE T2.Market_Value > 100
SELECT gas_station.Location FROM station_company JOIN company ON station_company.Company_ID = company.Company_ID JOIN gas_station ON station_company.Station_ID = gas_station.Station_ID WHERE company.Market_Value > 100
SELECT Location FROM gas_station AS gs JOIN station_company AS sc ON gs.Station_ID = sc.Station_ID JOIN company AS c ON sc.Company_ID = c.Company_ID WHERE c.Market_Value > 100
SELECT T2.Location FROM gas_station AS T2 JOIN station_company AS T1 ON T2.Station_ID = T1.Station_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID WHERE T3.Market_Value > 100
SELECT T2.Location FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID WHERE T2.Market_Value > 100;
SELECT Pilot_name FROM pilot WHERE Team = "Bradley" OR Team = "Fordham";
SELECT Pilot_name FROM pilot WHERE Team = "Bradley" OR Team = "Fordham"
SELECT Pilot_name FROM pilot WHERE Team = "Bradley" OR Team = "Fordham";
SELECT Pilot_name FROM pilot WHERE Team = "Bradley" OR Team = "Fordham"
SELECT Pilot_name FROM pilot WHERE Team = "Bradley" OR Team = "Fordham"
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA'
SELECT MAX(created) FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state = 'CA'
SELECT MAX(created) FROM VOTES WHERE state = 'CA'
SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Fail"
SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Fail"
SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Fail"
SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Fail"
SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Fail"
SELECT T1.employee_id, T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id;
SELECT T1.employee_id, T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id;
SELECT employees.EMPLOYEE_ID, countries.COUNTRY_NAME FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID JOIN countries ON locations.COUNTRY_ID = countries.COUNTRY_ID;
SELECT E.EMPLOYEE_ID, C.COUNTRY_NAME FROM employees E JOIN departments D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID JOIN locations L ON D.LOCATION_ID = L.LOCATION_ID JOIN countries C ON L.COUNTRY_ID = C.COUNTRY_ID;
SELECT T1.employee_id, T3.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id;
SELECT first_name, last_name, salary FROM employees WHERE salary < 6000
SELECT first_name, last_name, salary FROM employees WHERE salary < 6000
SELECT first_name, last_name, salary FROM employees WHERE salary < 6000
SELECT first_name, last_name, salary FROM employees WHERE salary < 6000
SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS full_name, SALARY FROM employees WHERE SALARY < 6000;
SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T2.Carrier HAVING COUNT(DISTINCT T1.Shop_ID) > 1
SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T2.Carrier HAVING COUNT(DISTINCT T1.Shop_ID) > 1
SELECT DISTINCT Carrier FROM device WHERE Device_ID IN ( SELECT Device_ID FROM stock GROUP BY Device_ID HAVING COUNT(DISTINCT Shop_ID) > 1 )
SELECT DISTINCT T1.Carrier FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Carrier HAVING COUNT(DISTINCT T2.Shop_ID) > 1
SELECT t1.Carrier FROM device AS t1 JOIN stock AS t2 ON t1.Device_ID = t2.Device_ID GROUP BY t1.Carrier HAVING COUNT(DISTINCT t2.Shop_ID) > 1
SELECT personal_name, family_name FROM Students ORDER BY family_name;
SELECT personal_name, family_name FROM Students ORDER BY family_name;
SELECT personal_name, family_name FROM Students ORDER BY family_name
SELECT personal_name, family_name FROM Students ORDER BY family_name ASC
SELECT personal_name, family_name FROM Students ORDER BY family_name
SELECT sum(Enrollment) , Affiliation FROM university GROUP BY Affiliation
SELECT sum(u.Enrollment) , u.Affiliation FROM university u GROUP BY u.Affiliation
SELECT Affiliation, SUM(Enrollment) FROM university GROUP BY Affiliation
SELECT sum(u.enrollment) , u.affiliation FROM university u GROUP BY u.affiliation;
SELECT Affiliation, SUM(Enrollment) FROM university GROUP BY Affiliation
SELECT address_line_1 FROM Course_Authors_and_Tutors
SELECT address_line_1 FROM Course_Authors_and_Tutors;
SELECT address_line_1 FROM Course_Authors_and_Tutors
SELECT address_line_1 FROM Course_Authors_and_Tutors
SELECT address_line_1 FROM Course_Authors_and_Tutors
SELECT Party FROM driver WHERE Home_city = 'Hartford' AND Age > 40;
SELECT Party FROM driver WHERE home_city = 'Hartford' AND age > 40
SELECT DISTINCT Party FROM driver WHERE Home_city = 'Hartford' AND Age > 40
SELECT Party FROM driver WHERE Home_city = 'Hartford' AND Age > 40
SELECT Party FROM driver WHERE Home_city = 'Hartford' AND Age > 40
SELECT DISTINCT Location FROM cinema;
SELECT DISTINCT Location FROM cinema
SELECT DISTINCT Location FROM cinema
SELECT DISTINCT Location FROM cinema
SELECT Location FROM cinema;
SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))
SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))
SELECT e.name FROM employee e WHERE e.eid NOT IN ( SELECT c.eid FROM certificate c WHERE c.aid = ( SELECT a.aid FROM aircraft a WHERE a.name = 'Boeing 737-800' ) )
SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))
SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))
SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY COUNT(*) ASC LIMIT 1;
SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY COUNT(*) ASC LIMIT 1;
SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY count(*) ASC LIMIT 1;
SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY count(*) ASC LIMIT 1
SELECT Project_ID FROM Documents GROUP BY Project_ID ORDER BY COUNT(*) ASC LIMIT 1;
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC
SELECT Software_Platform, COUNT(*) AS Occurrences FROM device GROUP BY Software_Platform ORDER BY Occurrences DESC
SELECT Software_Platform, COUNT(*) AS Frequency FROM device GROUP BY Software_Platform ORDER BY Frequency DESC
SELECT Software_Platform, COUNT(*) FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC
SELECT Grape, Winery, Year FROM wine WHERE Price > 100 ORDER BY Year;
SELECT Grape, Winery, Year FROM wine WHERE Price > 100 ORDER BY Year
SELECT Grape, Winery, Year FROM wine WHERE Price > 100 ORDER BY Year
SELECT Grape, Winery, Year FROM wine WHERE Price > 100 ORDER BY Year
SELECT Grape, Winery, Year FROM wine WHERE Price > 100 ORDER BY Year ASC
SELECT name, salary FROM employee WHERE eid = 242518965;
SELECT name, salary FROM employee WHERE eid = 242518965;
SELECT name, salary FROM employee WHERE eid = 242518965;
SELECT name, salary FROM employee WHERE eid = 242518965;
SELECT name, salary FROM employee WHERE eid = 242518965;
SELECT count(*), Rank FROM captain WHERE age < 50 GROUP BY Rank
SELECT count(*), Rank FROM captain WHERE age < 50 GROUP BY Rank
SELECT Rank, COUNT(*) FROM captain WHERE age < 50 GROUP BY Rank
SELECT count(*), Rank FROM captain WHERE age < 50 GROUP BY Rank
SELECT count(*), Rank FROM captain WHERE age < 50 GROUP BY Rank
SELECT name FROM airports WHERE city = 'Goroka'
SELECT name FROM airports WHERE city = 'Goroka';
SELECT name FROM airports WHERE city = 'Goroka'
SELECT name FROM airports WHERE city = "Goroka"
SELECT name FROM airports WHERE city = "Goroka"
SELECT avg(Enrollment) FROM university WHERE Founded < 1850;
SELECT avg(Enrollment) FROM university WHERE Founded < 1850
SELECT avg(Enrollment) FROM university WHERE Founded < 1850
SELECT avg(Enrollment) FROM university WHERE Founded < 1850
SELECT avg(Enrollment) FROM university WHERE Founded < 1850;
SELECT Name, Age FROM editor
SELECT Name, Age FROM editor
SELECT Name, Age FROM editor
SELECT Name, Age FROM editor
SELECT Name, Age FROM editor
SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name 
SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name
SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name
SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name ASC 
SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name
SELECT count(*) FROM climber
SELECT count(*) FROM climber
SELECT count(*) FROM climber
SELECT count(*) FROM climber
SELECT COUNT(DISTINCT Climber_ID) FROM climber
SELECT Type FROM Ship WHERE Flag = 'Panama' INTERSECT SELECT Type FROM Ship WHERE Flag = 'Malta'
SELECT Type FROM Ship WHERE Flag = 'Panama' INTERSECT SELECT Type FROM Ship WHERE Flag = 'Malta'
SELECT Type FROM Ship WHERE Flag = 'Panama' INTERSECT SELECT Type FROM Ship WHERE Flag = 'Malta'
SELECT Type FROM Ship WHERE Flag = 'Panama' INTERSECT SELECT Type FROM Ship WHERE Flag = 'Malta'
SELECT Type FROM Ship WHERE Flag = 'Panama' INTERSECT SELECT Type FROM Ship WHERE Flag = 'Malta'
SELECT School FROM university WHERE Founded > 1850 OR Affiliation = 'Public'
SELECT School FROM university WHERE Founded < 1850 OR Affiliation = 'Public'
SELECT School FROM university WHERE Founded > 1850 OR Affiliation = 'Publicly funded'
SELECT School FROM university WHERE Founded > 1850 OR Affiliation = 'Public'
SELECT School FROM university WHERE Founded > 1850 OR Affiliation = 'Public'
SELECT origin FROM flight WHERE destination = 'Honolulu';
SELECT origin FROM flight WHERE destination = 'Honolulu';
SELECT origin FROM flight WHERE destination = "Honolulu"
SELECT origin FROM flight WHERE destination = 'Honolulu'
SELECT origin FROM flight WHERE destination = 'Honolulu'
SELECT DISTINCT LName FROM Student WHERE StuID IN (SELECT President_Vote FROM Voting_record) AND Advisor = 8741;
SELECT DISTINCT LName FROM Student WHERE StuID IN (SELECT StuID FROM Voting_record WHERE President_Vote = 8741) AND Advisor = 8741;
SELECT DISTINCT S.LName FROM Student S JOIN Voting_record V ON S.StuID = V.StuID WHERE V.President_Vote = 8741
SELECT DISTINCT LName FROM Student AS S JOIN Voting_record AS V ON S.StuID = V.StuID WHERE V.President_Vote = 8741 AND S.Advisor = 8741;
SELECT DISTINCT LName FROM Student WHERE StuID IN (SELECT StuID FROM Voting_record WHERE President_Vote = 8741)
SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID WHERE T3.Age < 34
SELECT Fleet_Series FROM aircraft WHERE Aircraft_ID IN (SELECT Aircraft_ID FROM pilot_record WHERE Pilot_ID IN (SELECT Pilot_ID FROM pilot WHERE Age < 34))
SELECT Fleet_Series FROM aircraft AS T1 JOIN pilot_record AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T2.Pilot_ID = T3.Pilot_ID WHERE T3.Age < 34
SELECT Fleet_Series FROM aircraft WHERE Aircraft_ID IN (SELECT Aircraft_ID FROM pilot_record WHERE Pilot_ID IN (SELECT Pilot_ID FROM pilot WHERE Age < 34))
SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID WHERE T3.Age < 34
SELECT t2.All_Games, t1.Location FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t2.Team_Name = 'Clemson'
SELECT t2.All_Games, t1.Location FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t2.Team_Name = 'Clemson'
SELECT Location, All_Games FROM university JOIN basketball_match ON university.School_ID = basketball_match.School_ID WHERE Team_Name = 'Clemson'
SELECT t2.All_Games, t1.Location FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t2.Team_Name = 'Clemson'
SELECT t1.Location, t2.All_Games FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t2.Team_Name = 'Clemson'
SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population > 20000)
SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population > 20000)
SELECT count(*) FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Population > 20000)
SELECT count(*) FROM city AS c JOIN county_public_safety AS cps ON c.County_ID = cps.County_ID WHERE cps.Population > 20000
SELECT count(*) FROM city WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Population > 20000)
SELECT origin, count(*) FROM flight GROUP BY origin
SELECT origin, COUNT(*) FROM flight GROUP BY origin
SELECT origin, COUNT(*) FROM flight GROUP BY origin
SELECT origin, count(*) FROM flight GROUP BY origin
SELECT origin, count(*) FROM flight GROUP BY origin
SELECT Team_Name FROM basketball_match ORDER BY All_Home DESC
SELECT Team_Name FROM basketball_match ORDER BY All_Home DESC;
SELECT Team_Name, ACC_Home FROM basketball_match ORDER BY ACC_Home DESC
SELECT Team_Name FROM basketball_match ORDER BY ACC_Home DESC
SELECT Team_Name FROM basketball_match ORDER BY All_Home DESC
SELECT T1.name, COUNT(T2.rid) AS route_count FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY route_count DESC LIMIT 10;
SELECT T1.name, T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY COUNT(*) DESC LIMIT 10;
SELECT T2.name FROM airlines AS T2 JOIN routes AS T1 ON T2.alid = T1.alid GROUP BY T1.alid ORDER BY COUNT(*) DESC LIMIT 10;
SELECT name, COUNT(*) AS num_routes FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY name ORDER BY num_routes DESC LIMIT 10;
SELECT alid, name FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY airlines.alid ORDER BY count(*) DESC LIMIT 10
SELECT Statement_ID, COUNT(*) FROM Accounts GROUP BY Statement_ID
SELECT STATEMENT_ID , count(*) FROM Accounts GROUP BY STATEMENT_ID
SELECT Statement_ID, COUNT(*) FROM Accounts GROUP BY Statement_ID
SELECT T1.Statement_ID, COUNT(*) FROM Statements AS T1 JOIN Accounts AS T2 ON T1.Statement_ID = T2.Statement_ID GROUP BY T1.Statement_ID
SELECT Statement_ID, COUNT(*) FROM Accounts GROUP BY Statement_ID
SELECT title, directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)
SELECT Title, Directed_by FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM schedule)
SELECT Title, Directed_by FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM schedule)
SELECT directed_by, title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM schedule)
SELECT Title, Directed_by FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM schedule)
SELECT Name FROM wine WHERE Score > 90;
SELECT Name FROM wine WHERE Score > 90
SELECT DISTINCT Name FROM wine WHERE Score > 90
SELECT Name FROM wine WHERE Score > 90
SELECT DISTINCT Name FROM wine WHERE Score > 90
SELECT first_name, last_name FROM employees WHERE department_id = 70 OR department_id = 90;
SELECT first_name, last_name FROM employees WHERE department_id = 70 OR department_id = 90;
SELECT first_name, last_name FROM employees WHERE department_id IN (70, 90)
SELECT first_name, last_name FROM employees WHERE department_id = 70 OR department_id = 90;
SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM employees WHERE department_id = 70 OR department_id = 90
SELECT email FROM employees WHERE commission_pct IS NULL AND salary BETWEEN 7000 AND 12000 AND department_id = 50;
SELECT email FROM employees WHERE commission_pct IS NULL AND salary BETWEEN 7000 AND 12000 AND department_id = 50
SELECT EMAIL FROM employees WHERE DEPARTMENT_ID = 50 AND COMMISSION_PCT IS NULL AND SALARY BETWEEN 7000 AND 12000
SELECT EMAIL FROM employees WHERE DEPARTMENT_ID = 50 AND COMMISSION_PCT IS NULL AND SALARY BETWEEN 7000 AND 12000
SELECT email FROM employees WHERE department_id = 50 AND salary BETWEEN 7000 AND 12000 AND commission_pct IS NULL
SELECT aid FROM aircraft WHERE distance > 1000;
SELECT aid FROM aircraft WHERE distance > 1000;
SELECT aid FROM aircraft WHERE distance > 1000
SELECT aid FROM aircraft WHERE distance > 1000
SELECT aid FROM aircraft WHERE distance > 1000
SELECT t2.Team_Name, t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t1.Founded DESC LIMIT 1
SELECT t2.Team_Name, t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t1.Founded LIMIT 1
SELECT Team_Name, ACC_Regular_Season FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID WHERE Founded = (SELECT MAX(Founded) FROM university)
SELECT Team_Name, ACC_Regular_Season FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID ORDER BY university.Founded ASC LIMIT 1
SELECT t2.Team_Name, t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID ORDER BY t1.Founded LIMIT 1
SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.LName = "Smith"
SELECT avg(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.LName = "Smith"
SELECT AVG(GC.gradepoint) AS mean_grade_point FROM Student AS S JOIN Enrolled_in AS EI ON S.StuID = EI.StuID JOIN Gradeconversion AS GC ON EI.Grade = GC.lettergrade WHERE S.LName = 'Smith'
SELECT avg(T2.gradepoint) FROM Enrolled_in AS T1 JOIN Gradeconversion AS T2 ON T1.Grade = T2.lettergrade JOIN Student AS T3 ON T1.StuID = T3.StuID WHERE T3.LName = "Smith"
SELECT avg(T4.gradepoint) FROM Student AS T1 JOIN Minor_in AS T2 ON T1.StuID = T2.StuID JOIN Department AS T3 ON T2.DNO = T3.DNO JOIN Enrolled_in AS T4 ON T1.StuID = T4.StuID JOIN Gradeconversion AS T5 ON T4.Grade = T5.lettergrade WHERE T1.LName = 'Smith'
SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*) > 1
SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*) > 1
SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*) > 1
SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*) >= 2
SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*) > 1
SELECT count(*) FROM Documents
SELECT count(*) FROM Documents
SELECT count(*) FROM Documents
SELECT count(*) FROM Documents
SELECT count(*) FROM Documents
SELECT StuID FROM Student WHERE Age = (SELECT MAX(Age) FROM Student)
SELECT StuID FROM Student WHERE Age = (SELECT MAX(Age) FROM Student)
SELECT StuID FROM Student WHERE Age = (SELECT MAX(Age) FROM Student)
SELECT StuID FROM Student WHERE Age = (SELECT MAX(Age) FROM Student)
SELECT StuID FROM Student WHERE Age = (SELECT MAX(Age) FROM Student)
SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Boeing 737-800"
SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Boeing 737-800"
SELECT name FROM employee WHERE eid IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'))
SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Boeing 737-800"
SELECT T1.name FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T2.aid = T3.aid WHERE T3.name = 'Boeing 737-800'
SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = "Computer Science"
SELECT T1.course_name , T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = "Computer Science"
SELECT t1.course_name, t1.course_description FROM Courses AS t1 JOIN Subjects AS t2 ON t1.subject_id = t2.subject_id WHERE t2.subject_name = "Computer Science"
SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = "Computer Science"
SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = 'Computer Science'
SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1;
SELECT name FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY airlines.name ORDER BY COUNT(*) DESC LIMIT 1
SELECT name FROM airlines WHERE alid IN (SELECT alid FROM routes GROUP BY alid ORDER BY count(*) DESC LIMIT 1)
SELECT name FROM airlines JOIN routes ON airlines.alid = routes.alid GROUP BY name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.name FROM routes AS T1 JOIN airlines AS T2 ON T1.alid = T2.alid GROUP BY T1.alid ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Project_ID, Project_Details FROM Projects;
SELECT Project_ID, Project_Details FROM Projects
SELECT Project_ID, Project_Details FROM Projects
SELECT Project_ID, Project_Details FROM Projects
SELECT Project_ID, Project_Details FROM Projects
SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints)
SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints)
SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints)
SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints)
SELECT product_price FROM Products WHERE product_id NOT IN (SELECT product_id FROM Complaints WHERE complaint_outcome_code = 'Clean')
SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "Spanish"
SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "Spanish"
SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T1.course_id = T2.course_id JOIN Subjects AS T3 ON T2.subject_id = T3.subject_id WHERE T3.subject_name = 'Spanish'
SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "Spanish"
SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "Spanish"
SELECT T2.Directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T2.Directed_by ORDER BY SUM(T1.Show_times_per_day) DESC LIMIT 1
SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY SUM(T1.show_times_per_day) DESC LIMIT 1
SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY SUM(T1.show_times_per_day) DESC LIMIT 1
SELECT T2.Directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T2.Directed_by ORDER BY SUM(T1.Show_times_per_day) DESC LIMIT 1
SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY SUM(T1.show_times_per_day) DESC LIMIT 1
SELECT Name FROM actor ORDER BY Name ASC
SELECT Name FROM actor ORDER BY Name ASC
SELECT Name FROM actor ORDER BY Name ASC
SELECT Name FROM actor ORDER BY Name ASC
SELECT Name FROM actor ORDER BY Name ASC
SELECT Allergy FROM Allergy_Type WHERE AllergyType = 'food';
SELECT DISTINCT Allergy FROM Allergy_Type WHERE AllergyType = "food"
SELECT AllergyType FROM Allergy_Type WHERE AllergyType = 'food'
SELECT Allergy FROM Allergy_Type WHERE AllergyType = "food"
SELECT Allergy FROM Allergy_Type WHERE AllergyType = "food";
SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Kelly Clauss'
SELECT area_code FROM VOTES AS V1 JOIN CONTESTANTS AS C1 JOIN VOTES AS V2 JOIN CONTESTANTS AS C2 ON V1.contestant_number = C1.contestant_number AND V2.contestant_number = C2.contestant_number WHERE C1.contestant_name = 'Tabatha Gehling' AND C2.contestant_name = 'Kelly Clauss'
SELECT area_code FROM VOTES AS V JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling' INTERSECT SELECT area_code FROM VOTES AS V JOIN CONTESTANTS AS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Kelly Clauss'
SELECT area_code FROM VOTES AS V1 JOIN CONTESTANTS AS C1 ON V1.contestant_number = C1.contestant_number JOIN VOTES AS V2 ON V1.phone_number = V2.phone_number JOIN CONTESTANTS AS C2 ON V2.contestant_number = C2.contestant_number WHERE C1.contestant_name = 'Tabatha Gehling' AND C2.contestant_name = 'Kelly Clauss'
SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Kelly Clauss'
SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000
SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000
SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000
SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000
SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000
SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)
SELECT name FROM Aircraft WHERE distance > (SELECT avg(distance) FROM Aircraft)
SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)
SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)
SELECT name FROM aircraft WHERE distance > (SELECT avg(distance) FROM aircraft)
SELECT count(DISTINCT Software_Platform) FROM device
SELECT count(DISTINCT Software_Platform) FROM device
SELECT count(DISTINCT Software_Platform) FROM device
SELECT count(DISTINCT Software_Platform) FROM device
SELECT count(DISTINCT Software_Platform) FROM device
SELECT name FROM city WHERE county_ID = (SELECT County_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)
SELECT name FROM city WHERE county_ID = (SELECT County_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)
SELECT t2.Name FROM county_public_safety AS t1 JOIN city AS t2 ON t1.County_ID = t2.County_ID WHERE t1.Police_officers = (SELECT MAX(Police_officers) FROM county_public_safety)
SELECT Name FROM city WHERE County_ID = (SELECT County_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)
SELECT Name FROM city WHERE County_ID = (SELECT County_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)
SELECT avg(salary) , max(salary) FROM employee
SELECT avg(salary) , max(salary) FROM employee
SELECT avg(salary) , max(salary) FROM employee
SELECT avg(salary), max(salary) FROM employee;
SELECT avg(salary), max(salary) FROM employee
SELECT T2.Fname , T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY COUNT(*) DESC LIMIT 3;
SELECT T2.Fname , T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3
SELECT T2.Fname, T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY COUNT(*) DESC LIMIT 3
SELECT Fname, Lname FROM Faculty JOIN Course ON Faculty.FacID = Course.Instructor GROUP BY Faculty.FacID ORDER BY COUNT(Course.CID) DESC LIMIT 3;
SELECT T2.Fname, T2.Lname FROM Course AS T1 JOIN Faculty AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY COUNT(*) DESC LIMIT 3
SELECT count(*) FROM Student WHERE city_code = "HKG" OR city_code = "CHI"
SELECT count(*) FROM Student WHERE city_code = "HKG" OR city_code = "CHI"
SELECT COUNT(*) FROM Student WHERE city_code = "HKG" OR city_code = "CHI";
SELECT COUNT(*) FROM Student WHERE city_code IN ('HKG', 'CHI')
SELECT count(*) FROM Student WHERE city_code = "HKG" OR city_code = "CHI"
SELECT Name, Type, Flag FROM Ship ORDER BY Built_Year DESC LIMIT 1
SELECT s.Name, s.Type, s.Flag FROM Ship s WHERE s.Built_Year = (SELECT MAX(Built_Year) FROM Ship)
SELECT Name, Type, Flag FROM Ship WHERE Built_Year = (SELECT MAX(Built_Year) FROM Ship)
SELECT Name, Type, Flag FROM Ship ORDER BY Built_Year DESC LIMIT 1
SELECT Name, Type, Flag FROM Ship WHERE Built_Year = (SELECT MAX(Built_Year) FROM Ship)
SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name LIKE '%s%'
SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name LIKE '%s%'
SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name LIKE '%s%'
SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name LIKE '%s%'
SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name LIKE '%s%'
SELECT job_title, AVG(salary) FROM employees JOIN jobs ON employees.job_id = jobs.job_id GROUP BY job_title
SELECT job_title, AVG(salary) FROM employees AS e JOIN jobs AS j ON e.job_id = j.job_id GROUP BY j.job_title;
SELECT JOB_TITLE, AVG(SALARY) FROM employees JOIN jobs ON employees.JOB_ID = jobs.JOB_ID GROUP BY JOB_TITLE;
SELECT JOB_TITLE, AVG(SALARY) FROM employees GROUP BY JOB_TITLE
SELECT avg(SALARY), JOB_TITLE FROM employees JOIN jobs ON employees.JOB_ID = jobs.JOB_ID GROUP BY JOB_TITLE
SELECT Carrier FROM device ORDER BY Carrier ASC
SELECT Carrier FROM device ORDER BY Carrier ASC
SELECT Carrier FROM device ORDER BY Carrier ASC
SELECT DISTINCT Carrier FROM device ORDER BY Carrier ASC 
SELECT DISTINCT Carrier FROM device ORDER BY Carrier ASC
SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)
SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)
SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)
SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)
SELECT COUNT(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)
SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY count(*) DESC LIMIT 1
SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Document_Type_Code FROM Documents GROUP BY Document_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Directed_by, COUNT(*) FROM film GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) AS Total_films_directed FROM film GROUP BY Directed_by
SELECT directed_by, COUNT(*) FROM film GROUP BY directed_by
SELECT Directed_by, COUNT(*) AS Number_of_films FROM film GROUP BY Directed_by;
SELECT directed_by, COUNT(*) AS num_films FROM film GROUP BY directed_by
SELECT city_code FROM Student
SELECT city_code FROM Student
SELECT city_code FROM Student
SELECT city_code FROM Student
SELECT DISTINCT city_code FROM Student
SELECT Nominee, COUNT(*) FROM musical GROUP BY Nominee
SELECT Nominee, COUNT(*) FROM musical GROUP BY Nominee
SELECT Nominee, COUNT(*) AS TotalNominations FROM musical GROUP BY Nominee
SELECT Nominee, COUNT(*) FROM musical GROUP BY Nominee
SELECT Nominee, COUNT(*) FROM musical GROUP BY Nominee
SELECT DISTINCT departments.DEPARTMENT_NAME FROM departments JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID;
SELECT DISTINCT departments.DEPARTMENT_NAME FROM departments JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID;
SELECT DISTINCT departments.DEPARTMENT_NAME FROM departments JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID;
SELECT DEPARTMENT_NAME FROM departments WHERE DEPARTMENT_ID IN (SELECT DISTINCT DEPARTMENT_ID FROM employees)
SELECT T1.DEPARTMENT_NAME FROM departments AS T1 JOIN employees AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID
SELECT Main_Industry FROM company 
SELECT DISTINCT Main_Industry FROM company 
SELECT DISTINCT Main_Industry FROM company 
SELECT Main_Industry FROM company 
SELECT Main_Industry FROM company
SELECT JOB_TITLE FROM JOBS WHERE MIN_SALARY > 9000;
SELECT JOB_TITLE FROM jobs WHERE MIN_SALARY > 9000;
SELECT JOB_TITLE FROM jobs WHERE MIN_SALARY > 9000
SELECT JOB_TITLE FROM jobs WHERE MIN_SALARY > 9000
SELECT JOB_TITLE FROM jobs WHERE MIN_SALARY > 9000
SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = "Uganda"
SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = "Uganda"
SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = "Uganda"
SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = "Uganda"
SELECT Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = 'Uganda'
SELECT Main_Industry, SUM(Market_Value) FROM company GROUP BY Main_Industry;
SELECT Main_Industry, SUM(Market_Value) FROM company GROUP BY Main_Industry;
SELECT Main_Industry, SUM(Market_Value) FROM company GROUP BY Main_Industry
SELECT Main_Industry, SUM(Market_Value) FROM company GROUP BY Main_Industry
SELECT Main_Industry, SUM(Market_Value) FROM company GROUP BY Main_Industry
SELECT * FROM employees WHERE hire_date > '1987-09-07'
SELECT * FROM employees WHERE hire_date > '1987-09-07'
SELECT * FROM employees WHERE HIRE_DATE > '1987-09-07'
SELECT * FROM employees WHERE hire_date > '1987-09-07'
SELECT * FROM employees WHERE HIRE_DATE > '1987-09-07';
SELECT origin, destination FROM flight WHERE price > 300;
SELECT origin, destination FROM flight WHERE price > 300
SELECT origin, destination FROM flight WHERE price > 300
SELECT origin, destination FROM flight WHERE price > 300
SELECT origin, destination FROM flight WHERE price > 300
SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1
SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1;
SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1;
SELECT country, COUNT(*) FROM airlines WHERE active = "Y" GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM editor ORDER BY Age ASC
SELECT Name FROM editor ORDER BY Age ASC
SELECT Name FROM editor ORDER BY Age ASC
SELECT Name FROM editor ORDER BY Age ASC
SELECT Name FROM editor ORDER BY Age ASC
SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000
SELECT Name FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee WHERE Journal_ID IN (SELECT Journal_ID FROM journal WHERE Sales > 3000))
SELECT T2.Name FROM editor AS T2 JOIN journal_committee AS T1 ON T2.Editor_ID = T1.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000
SELECT E.Name FROM editor E JOIN journal_committee JC ON E.Editor_ID = JC.Editor_ID JOIN journal J ON JC.Journal_ID = J.Journal_ID WHERE J.Sales > 3000;
SELECT T2.Name FROM editor AS T2 JOIN journal_committee AS T1 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000;
SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Pass"
SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Pass"
SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Pass"
SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Pass"
SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Pass"
SELECT AllergyType FROM Allergy_Type JOIN Has_Allergy ON Allergy_Type.Allergy = Has_Allergy.Allergy GROUP BY AllergyType ORDER BY COUNT(*) DESC LIMIT 1;
SELECT AllergyType FROM Allergy_Type GROUP BY AllergyType ORDER BY count(*) DESC LIMIT 1
SELECT T1.AllergyType FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy GROUP BY T1.AllergyType ORDER BY COUNT(*) DESC LIMIT 1
SELECT A.AllergyType FROM Allergy_Type AS A JOIN Has_Allergy AS H ON A.Allergy = H.Allergy GROUP BY A.AllergyType ORDER BY COUNT(*) DESC LIMIT 1
SELECT AllergyType FROM Allergy_Type GROUP BY AllergyType ORDER BY COUNT(*) DESC LIMIT 1
SELECT count(*) FROM airlines
SELECT count(*) FROM airlines
SELECT count(*) FROM airlines
SELECT count(*) FROM airlines;
SELECT count(*) FROM airlines WHERE active = "Y"
SELECT Documents_with_Expenses.Document_ID FROM Documents_with_Expenses JOIN Ref_Budget_Codes ON Documents_with_Expenses.Budget_Type_Code = Ref_Budget_Codes.Budget_Type_Code WHERE Ref_Budget_Codes.Budget_Type_Description = 'Government'
SELECT T1.Document_ID FROM Documents_with_Expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code WHERE T2.Budget_Type_Description = 'Government';
SELECT T1.Document_ID FROM Documents_with_Expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code WHERE T2.Budget_Type_Description = 'Government'
SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = (SELECT Budget_Type_Code FROM Ref_Budget_Codes WHERE Budget_Type_Description = 'Government')
SELECT Documents.Document_ID FROM Documents_with_Expenses JOIN Ref_Budget_Codes ON Documents_with_Expenses.Budget_Type_Code = Ref_Budget_Codes.Budget_Type_Code WHERE Ref_Budget_Codes.Budget_Type_Description = 'Government'
SELECT sum(u.Enrollment), u.Affiliation FROM university u WHERE u.Founded > 1850 GROUP BY u.Affiliation;
SELECT sum(u.Enrollment) , u.Affiliation FROM university u WHERE u.Founded > 1850 GROUP BY u.Affiliation;
SELECT sum(u.Enrollment) as Total_Enrollment, u.Affiliation FROM university u WHERE u.Founded > 1850 GROUP BY u.Affiliation;
SELECT T2.Affiliation, sum(T2.Enrollment) FROM university AS T2 WHERE T2.Founded > 1850 GROUP BY T2.Affiliation
SELECT Affiliation, SUM(Enrollment) FROM university WHERE Founded > 1850 GROUP BY Affiliation
SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.family_name = "Zieme" AND T2.personal_name = "Bernie"
SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.family_name = "Zieme" AND T2.personal_name = "Bernie";
SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = "Bernie" AND T2.family_name = "Zieme"
SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment AS SCE JOIN Students AS S ON SCE.student_id = S.student_id WHERE S.personal_name = "Bernie" AND S.family_name = "Zieme";
SELECT T2.date_of_registration, T2.date_of_completion FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T1.family_name = 'Zieme' AND T1.personal_name = 'Bernie'
SELECT Advisor FROM Student GROUP BY Advisor HAVING COUNT(*) > 2
SELECT Advisor FROM Student GROUP BY Advisor HAVING count(*) > 2
SELECT T1.Advisor, COUNT(T1.StuID) AS num_students FROM Student AS T1 GROUP BY T1.Advisor HAVING COUNT(T1.StuID) > 2
SELECT DISTINCT Advisor FROM Student GROUP BY Advisor HAVING COUNT(StuID) > 2
SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.Advisor GROUP BY T1.Advisor HAVING COUNT(*) > 2
